FROM alpine:3.4

ENV DAPPER_ENV API_VERSION ENVIRONMENTS
ENV DAPPER_RUN_ARGS --privileged
ENV DAPPER_SOURCE /usr/src/cattle
ENV DAPPER_OUTPUT dist
WORKDIR ${DAPPER_SOURCE}

# MySQL
ENV MYSQL_VERSION 5.5
ENV MYSQL_HOST 127.0.0.1
ENV MYSQL_TCP_PORT 13306

# Postgres
ENV PGSQL_VERSION 9.6
ENV PGHOST 127.0.0.1
ENV PGPASSWORD cattle
ENV PGUSER cattle
ENV PGDATABASE cattle

# Install Java and Python
ENV JAVA_VERSION 8
RUN echo "@edge http://nl.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories && \
    apk --update add bash coreutils maven@edge openjdk${JAVA_VERSION} procps py-pip py-virtualenv && \
    pip install --upgrade pip==8.1.2 tox==1.8.1 virtualenv==12.0.4

# Build Tools
ENV BUILD_TOOLS_VERSION 0.3.1
RUN apk add curl
RUN mkdir /tmp/build-tools && \
    cd /tmp/build-tools && \
    curl -sSL -o build-tools.tar.gz https://github.com/rancherio/build-tools/archive/v${BUILD_TOOLS_VERSION}.tar.gz && \
    tar -xzvf build-tools.tar.gz && cp ./build-tools-${BUILD_TOOLS_VERSION}/bin/* /usr/local/bin && \
    rm -rf /tmp/build-tools

# Cache Maven stuff
ENV JAVA_HOME /usr/lib/jvm/java-1.${JAVA_VERSION}-openjdk
RUN apk add git
# && \
#    cd /tmp && \
#    git clone https://github.com/rancher/cattle.git && \
#    cd cattle && \
#    git checkout v0.160.0 && \
#    mvn package && \
#    ./scripts/checkstyle && \
#    cd .. && \
#    rm -rf cattle

# Install Docker
RUN apk add iptables && \
    curl -o /usr/bin/docker -sL -f https://get.docker.com/builds/Linux/x86_64/docker-1.10.3 && \
    chmod +x /usr/bin/docker

# Cache binaries
RUN apk add xz
COPY ./resources/content/cattle-global.properties ${DAPPER_SOURCE}/resources/content/
RUN bash -x cattle-binary-pull

VOLUME /var/lib/docker

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
