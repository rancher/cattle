#!/bin/bash
set -e

cd $(dirname $0)/..

# This will start MySQL if needed.
if [ "${BOOTSTRAP_ON_RUN}" = "true" ]; then
    ./scripts/bootstrap
    trap "service mysql stop" EXIT SIGTERM
fi


RUNTIME_DIR=${RUNTIME_DIR:-../../../runtime/cli/}

cd code/packaging/app

if [ "${RUNTIME_DIR_CLEAN}" = "true" ]; then
    rm -rf $RUNTIME_DIR
fi

mkdir -p $RUNTIME_DIR

CMD="java
    -Xmx1024m
    -XX:+UseG1GC -XX:+UseStringDeduplication
    -Didempotent.checks=true
    -Dmodule.profile.hazelcast.eventing=true
    -Dspring.profiles.active=hazelcast.eventing,hazelcast.lock,hazelcast.config.basic
    -Dconfig.item.dynamic=false
    -Dsecrets.api.execute=true
    -Dagent.ping.reconnect.after.failed.count=60
    -Dagent.ping.resources.every=1
    -Dprocess.retry_max_wait.millis=1
    -Dprocess.running_delay.millis=1
    -Dexecution.tokens.max=1000
    -Dobject.remove.time.delay.seconds=1200
    -Dcattle.http.port=${CATTLE_TEST_HTTP_PORT:-8081}
    -Dcattle.http.proxied.port=${CATTLE_TEST_HTTP_PROXIED_PORT:-8082}
    -Dlogback.log.dir=$RUNTIME_DIR/logs/
    -Ddb.cattle.home=${RUNTIME_DIR}/db/
    -Dhost.api.proxy.mode=${CATTLE_HOST_API_PROXY_MODE:-embedded}
    -jar target/*.war"

if [ "$1" = "--background" ]; then
    rm -rf ${RUNTIME_DIR}/{run-success,run-error}
    $CMD --notify ../../../tools/development/run-success.sh --notify-error ../../../tools/development/run-error.sh &
    while sleep .5; do
        if [ -f ${RUNTIME_DIR}/run-success ]; then
            break
        elif [ -f ${RUNTIME_DIR}/run-error ]; then
            exit 1
        fi
    done
else
    $CMD
fi
