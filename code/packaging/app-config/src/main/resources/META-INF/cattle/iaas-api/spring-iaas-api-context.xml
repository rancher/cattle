<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:extension="http://cattle.io/schemas/spring/extension"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
        http://cattle.io/schemas/spring/extension http://cattle.io/schemas/spring/extension-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="superadmin" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/super-admin/super-admin-auth.json</value>
                                    <value>classpath*:schema/super-admin/super-admin-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="AdminSchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="admin" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/admin" />
                </bean>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/user/user-auth.json</value>
                                    <value>classpath*:schema/user/user-auth.json.d/**/*.json</value>
                                    <value>classpath:schema/admin/admin-auth.json</value>
                                    <value>classpath*:schema/admin/admin-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="ServiceSchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="service" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/service" />
                </bean>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/user/user-auth.json</value>
                                    <value>classpath*:schema/user/user-auth.json.d/**/*.json</value>
                                    <value>classpath:schema/admin/admin-auth.json</value>
                                    <value>classpath*:schema/admin/admin-auth.json.d/**/*.json</value>
                                    <value>classpath:schema/project/project-auth.json</value>
                                    <value>classpath*:schema/project/project-auth.json.d/**/*.json</value>
                                    <value>classpath:schema/service/service-auth.json</value>
                                    <value>classpath*:schema/service/service-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="Token" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="token" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/token" />
                </bean>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/token/token-auth.json</value>
                                    <value>classpath*:schema/token/token-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="ReadOnlySchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="readonly" />
        <property name="schemaFactory" ref="Project" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.NotWritablePostProcessor" />
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/read-user/read-user.json</value>
                                    <value>classpath*:schema/read-user/read-user.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
    <bean id="OwnerSchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="owner" />
        <property name="schemaFactory" ref="Project" />
    </bean>
    <bean id="MemberSchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="member" />
        <property name="schemaFactory" ref="Project" />
    </bean>
    <bean id="Restricted" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="restricted" />
        <property name="schemaFactory" ref="Project" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/developer-user/restricted-user.json</value>
                                    <value>classpath*:schema/developer-user/restricted-user.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="ReadAdminSchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="readAdmin" />
        <property name="schemaFactory" ref="AdminSchema" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.NotWritablePostProcessor" />
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/read-admin" />
                    <property name="whiteList" value="false" />
                    <property name="explicitByDefault" value="false" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="User" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="user" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/user" />
                </bean>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/user/user-auth.json</value>
                                    <value>classpath*:schema/user/user-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="Project" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="project" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/project" />
                </bean>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/user/user-auth.json</value>
                                    <value>classpath*:schema/user/user-auth.json.d/**/*.json</value>
                                    <value>classpath:schema/project/project-auth.json</value>
                                    <value>classpath*:schema/project/project-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="agentRegister" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.NotWritablePostProcessor" />
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/agent-register" />
                    <property name="whiteList" value="true" />
                    <property name="explicitByDefault" value="true" />
                </bean>
            </list>
        </property>
    </bean>

    <bean class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="agent" />
        <property name="schemaFactory" ref="CoreSchemaFactory" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.NotWritablePostProcessor" />
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/agent" />
                    <property name="whiteList" value="true" />
                    <property name="explicitByDefault" value="true" />
                </bean>
            </list>
        </property>
    </bean>

    <bean class="io.cattle.platform.docker.api.transform.TransformInspect" />

    <bean id="MachineAddonTypeSet" class="io.cattle.platform.object.meta.TypeSet" >
        <property name="typeClasses" >
            <set>
                <value>io.cattle.platform.docker.machine.api.addon.BaseMachineConfig</value> 
            </set>
        </property>
    </bean>

    <bean class="io.cattle.platform.docker.machine.api.filter.MachineValidationFilter" />
    <bean class="io.cattle.platform.docker.machine.api.MachineLinkFilter" />

   <bean class="io.cattle.platform.iaas.api.auditing.AuditLogsRequestHandler"/>
   <bean class="io.cattle.platform.iaas.api.auditing.dao.impl.AuditLogDaoImpl" />
   <bean class="io.cattle.platform.iaas.api.auditing.AuditServiceImpl" />
   <bean class="io.cattle.platform.iaas.api.auditing.ResourceIdOutputFilter" />
   <bean class="io.cattle.platform.iaas.api.auditing.AuditLogOutPutFilter" />
   <bean class="io.cattle.platform.iaas.api.auditing.ResourceIdInputFilter" />

    <bean class="io.cattle.platform.host.api.HostApiPublicKeyScriptHandler" />
    <bean class="io.cattle.platform.host.api.HostApiProxyTokenManager" />
    <bean class="io.cattle.host.api.proxy.launch.ProxyLauncher" />

    <bean id="ProxyTokenTypeSet" class="io.cattle.platform.object.meta.TypeSet" >
        <property name="typeClasses">
            <list>
                <value>io.cattle.platform.host.api.HostApiProxyTokenImpl</value>
            </list>
        </property>
    </bean>

    <bean class="io.cattle.platform.host.stats.api.StatsOutputFilter" />

    <bean id="HostApiTypes" class="io.cattle.platform.object.meta.TypeSet" >
        <property name="typeClasses">
            <list>
                <value>io.cattle.platform.host.stats.api.StatsAccess</value>
            </list>
        </property>
    </bean>

    <bean class="io.cattle.platform.iaas.api.manager.DataManager" />
    <bean class="io.cattle.platform.iaas.api.manager.InstanceManager" />
    <bean class="io.cattle.platform.iaas.api.manager.VolumeManager" />
    <bean class="io.cattle.platform.iaas.api.filter.apikey.ApiKeyFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.agent.AgentFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.instance.InstanceImageValidationFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.instance.InstanceNetworkValidationFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.instance.InstancePortsValidationFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.instance.InstanceVolumeCleanupStrategyValidationFilter" />
    <bean class="io.cattle.platform.iaas.api.credential.SshKeyOutputFilter" />
    <bean class="io.cattle.platform.iaas.api.credential.ApiKeyOutputFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.containerevent.ContainerEventFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.externalevent.ExternalEventFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.registry.RegistryServerAddressFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.serviceevent.ServiceEventFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.snapshot.SnapshotValidationFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.ssl.CertificateCreateValidationFilter" />
    <bean class="io.cattle.platform.iaas.api.user.preference.UserPreferenceFilter" />
    <bean class="io.cattle.platform.iaas.api.user.preference.UserPreferenceDaoImpl" />
    <bean class="io.cattle.platform.iaas.api.filter.dynamic.schema.DynamicSchemaFilter" />
    <bean class="io.cattle.platform.iaas.api.auth.identity.AccountOutputFilter" />
    <bean class="io.cattle.platform.iaas.api.filter.account.AccountFilter" />

    <bean class="io.cattle.platform.iaas.api.object.postinit.AccountFieldPostInitHandler" />

    <!-- Start Handlers -->
    <bean class="io.cattle.platform.iaas.api.request.handler.Scripts" >
        <property name="handlers" value="#{extensionManager.list('scripts.handler')}" />
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.BodyParserRequestHandler" />
    <bean class="io.cattle.platform.iaas.api.request.handler.ConfigurableRequestOptionsParser" />
    <bean class="io.cattle.platform.api.handler.AddClientIpHeader" />
    <bean class="io.cattle.platform.iaas.api.request.handler.IdFormatterRequestHandler" >
        <property name="plainFormatter">
            <bean class="io.github.ibuildthecloud.gdapi.id.IdentityFormatter" />
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.CSRFCookieHandler" />
    <bean class="io.cattle.platform.iaas.api.request.handler.PostChildLinkHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.ParseCollectionAttributes" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.VersionsHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.VersionHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.SchemasHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.validation.ValidationHandler" >
        <property name="referenceValidator" >
            <bean class="io.github.ibuildthecloud.gdapi.validation.ResourceManagerReferenceValidator" />
        </property>
    </bean>
    <bean id="ResourceManagerRequestHandler" class="io.github.ibuildthecloud.gdapi.request.handler.write.ReadWriteApiHandler" >
        <property name="delegate">
            <bean class="io.github.ibuildthecloud.gdapi.request.handler.write.DefaultReadWriteApiDelegate" >
                <property name="handlers">
                    <list>
                        <bean id="InnerResourceManagerRequestHandler" class="io.github.ibuildthecloud.gdapi.request.handler.ResourceManagerRequestHandler" />
                    </list>
                </property>
            </bean>
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.NotFoundHandler" />
    <bean class="io.cattle.platform.api.handler.EventNotificationHandler" />
    <bean class="io.github.ibuildthecloud.gdapi.response.ResponseObjectConverter" />
    <bean class="io.github.ibuildthecloud.gdapi.request.handler.ExceptionHandler" >
        <property name="standardErrorCodes">
            <util:properties location="classpath:api/messages.properties" />
        </property>
        <property name="messageLocation" value="api/messages" />
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.response.JsonResponseWriter" />
    <bean class="io.github.ibuildthecloud.gdapi.response.HtmlResponseWriter" >
        <property name="jsonMapper">
            <bean class="io.github.ibuildthecloud.gdapi.json.JacksonMapper" >
                <property name="escapeForwardSlashes" value="true" />
            </bean>
        </property>
    </bean>
    <bean class="io.cattle.platform.api.handler.DeferredActionsHandler" />
    <!-- End Handlers -->

    <bean id="DefaultAuthorizationProvider" class="io.cattle.platform.iaas.api.auth.dynamic.DynamicSchemaAuthorizationProvider" >
        <property name="authorizationProvider" >
            <bean class="io.cattle.platform.iaas.api.auth.impl.DefaultAuthorizationProvider" >
                <property name="schemaFactoryList" value="#{extensionManager.list('schema.factory')}" />
            </bean>
        </property>
    </bean>
    <bean class="io.cattle.platform.iaas.api.auth.impl.AgentQualifierAuthorizationProvider" />
    <bean class="io.cattle.platform.iaas.api.auth.AchaiusPolicyOptionsFactory" />
    <bean class="io.cattle.platform.iaas.api.change.impl.ResourceChangeEventListenerImpl" />
    <bean class="io.cattle.platform.iaas.api.change.impl.ResourceChangeEventProcessor" />

    <bean id="DocTypes" class="io.cattle.platform.object.meta.TypeSet" >
        <property name="typeClasses">
            <list>
                <value>io.github.ibuildthecloud.gdapi.doc.TypeDocumentation</value>
                <value>io.github.ibuildthecloud.gdapi.doc.FieldDocumentation</value>
            </list>
        </property>
    </bean>
    <bean class="io.github.ibuildthecloud.gdapi.doc.handler.DocumentationHandler" />
    <bean class="io.cattle.platform.schema.doc.DocumentationLoader" >
        <property name="resources">
            <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                <property name="resources">
                    <list>
                        <value>classpath:schema/base/documentation.json</value>
                        <value>classpath*:schema/base/documentation.json.d/**/*.json</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <tx:advice id="ApiDelegateAdvice" transaction-manager="CoreTransactionManager">
        <tx:attributes>
            <!--
                Don't do read only transaction because it will keep a DB connection open for the
                entire web request, which is not good for /publish and /subscribe
                <tx:method name="read" isolation="READ_COMMITTED" read-only="true" /> 
            -->
            <tx:method name="write" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="ApiDelegateAdvice" pointcut="execution(* io.github.ibuildthecloud.gdapi.request.handler.write.ReadWriteApiDelegate.*(..))" />
    </aop:config>

    <extension:discover class="io.github.ibuildthecloud.gdapi.factory.SchemaFactory"/>
    <extension:discover class="io.cattle.platform.api.pubsub.subscribe.ApiPubSubEventPostProcessor"/>
    <extension:discover class="io.cattle.platform.iaas.api.request.handler.ScriptsHandler"/>

    <bean class="io.cattle.platform.iaas.api.auth.identity.TokenResourceManager" >
        <property name="tokenCreators" value="#{extensionManager.list('token.creator')}" />
    </bean>

    <bean class="io.cattle.platform.iaas.api.auth.impl.ApiAuthenticator" >
        <property name="identityProviders" value="#{extensionManager.list('identity.provider')}" />
        <property name="accountLookups" value="#{extensionManager.list('account.lookup')}" />
        <property name="authorizationProviders" value="#{extensionManager.list('authorization.provider')}" />
    </bean>

    <bean class="io.cattle.platform.iaas.api.auth.integration.github.GithubTokenCreator" />

        <bean class="io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl" />
    <bean class="io.cattle.platform.iaas.api.auth.dao.impl.PasswordDaoImpl" />

    <bean id="BasicAuth" class="io.cattle.platform.iaas.api.auth.integration.internal.rancher.BasicAuthImpl" />
    <bean id="AdminAuth" class="io.cattle.platform.iaas.api.auth.integration.internal.rancher.AdminAuthLookUp" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.internal.rancher.RancherIdentityProvider" />


	<bean class="io.cattle.platform.iaas.api.auth.projects.ProjectResourceManager"/>
	<bean class="io.cattle.platform.iaas.api.auth.projects.ProjectMemberResourceManager"/>
    <bean class="io.cattle.platform.iaas.api.auth.projects.SetProjectMembersActionHandler"/>

    <bean class="io.cattle.platform.iaas.api.auth.integration.internal.rancher.TokenAuthLookup">
        <property name="tokenUtilsMap" value="#{extensionManager.map('token.util')}" />
    </bean>


    <bean class="io.cattle.platform.iaas.api.auth.integration.github.GithubTokenUtil"/>
    <bean class="io.cattle.platform.iaas.api.auth.integration.github.resource.GithubClient"/>
    <bean class="io.cattle.platform.iaas.api.auth.integration.github.GithubConfigManager" />

	
    <bean id="TokenAccountLookup" class="io.cattle.platform.iaas.api.auth.integration.internal.rancher.TokenAccountLookup" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.github.GithubIdentityProvider"/>

    <bean class="io.cattle.platform.iaas.api.request.handler.GenericWhitelistedProxy" />

    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.ad.ADIdentityProvider" >
        <property name="executorService" ref="CoreExecutorService" />
    </bean>
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.ad.ADTokenCreator" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.ad.ADTokenUtils" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.ad.ADConfigManager" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.ad.ADConstantsConfig" />

    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.OpenLDAP.OpenLDAPIdentityProvider" >
        <property name="executorService" ref="CoreExecutorService" />
    </bean>
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.OpenLDAP.OpenLDAPTokenCreator" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.OpenLDAP.OpenLDAPUtils" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.OpenLDAP.OpenLDAPConfigManager" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.ldap.OpenLDAP.OpenLDAPConstantsConfig" />

    <bean class="io.cattle.platform.iaas.api.auth.SettingsUtils" />
    <bean class="io.cattle.platform.iaas.api.auth.identity.IdentityManager" >
        <property name="identityProviders" value="#{extensionManager.map('identity.provider')}" />
        <property name="executorService" ref="CoreExecutorService" />
    </bean>

    <bean class="io.cattle.platform.iaas.api.auth.dao.impl.AuthTokenDaoImpl" />

    <bean class="io.cattle.platform.iaas.api.auth.integration.local.LocalAuthConfigManager" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.local.LocalAuthTokenCreator" />
    <bean class="io.cattle.platform.iaas.api.auth.integration.local.LocalAuthTokenUtils" />

    <extension:discover class="io.cattle.platform.iaas.api.auth.AuthorizationProvider"/>
    <extension:discover class="io.cattle.platform.iaas.api.auth.integration.interfaces.AccountLookup"/>
    <extension:discover class="io.cattle.platform.iaas.api.auth.integration.interfaces.TokenCreator"/>
    <extension:discover class="io.cattle.platform.iaas.api.auth.integration.interfaces.IdentityProvider"/>
    <extension:discover class="io.cattle.platform.iaas.api.auth.integration.interfaces.TokenUtil"/>

    <bean class="io.cattle.platform.bootstrap.script.BootstrapScriptsHandler" />

    <bean id="RegisterSchema" class="io.cattle.platform.api.schema.ObjectBasedSubSchemaFactory" >
        <property name="id" value="register" />
        <property name="schemaFactory" ref="AdminSchema" />
        <property name="postProcessors">
            <list>
                <bean class="io.cattle.platform.schema.processor.JsonFileOverlayPostProcessor" >
                    <property name="path" value="schema/register" />
                </bean>
                <bean class="io.cattle.platform.schema.processor.AuthOverlayPostProcessor" >
                    <property name="resources" >
                        <bean class="io.cattle.platform.spring.resource.SpringUrlListFactory" >
                            <property name="resources">
                                <list>
                                    <value>classpath:schema/register/register-auth.json</value>
                                    <value>classpath*:schema/register/register-auth.json.d/**/*.json</value>
                                </list>
                            </property>
                        </bean>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean class="io.cattle.platform.register.api.RegistrationTokenOutputFilter" />
    <bean class="io.cattle.platform.register.api.RegisterOutputFilter" />
    <bean class="io.cattle.platform.register.api.RegisterScriptHandler" />
    <bean class="io.cattle.platform.register.api.RegistrationTokenAccountLookup" />

    <bean class="io.cattle.platform.register.auth.impl.RegistrationAuthTokenManagerImpl" />

    <bean class="io.cattle.platform.register.dao.impl.RegistrationTokenAuthDaoImpl" />

</beans>
