process.account.create.create.credential=true
process.account.create.create.credential.default.kind=apiKey
process.account.create.create.credential.account.kinds=agent

process.credential.create.bad.characters=[O0lI+/=]

process.agent.create.create.account=true

activate.by.default.account=true
activate.by.default.agent=true
activate.by.default.credential=true
activate.by.default.externalHandler=true
activate.by.default.externalHandlerProcess=true
activate.by.default.externalHandlerExternalHandlerProcessMap=true
activate.by.default.genericObject=true
activate.by.default.host=true
activate.by.default.hostIpAddressMap=true
activate.by.default.hostVnetMap=true
activate.by.default.image=true
activate.by.default.instanceNetworkMap=true
activate.by.default.ipAddress=true
activate.by.default.ipAddressNicMap=true
activate.by.default.ipPool=true
activate.by.default.physicalHost=true
activate.by.default.network=true
activate.by.default.networkService=true
activate.by.default.networkServiceProvider=true
activate.by.default.networkServiceProviderInstanceMap=true
activate.by.default.projectMember=true
activate.by.default.storagePool=true
activate.by.default.register=true
activate.by.default.subnet=true
activate.by.default.subnetVnetMap=true
activate.by.default.userPreference=true
activate.by.default.vnet=true

event.data.credential=registry
event.data.imageStoragePoolMap=storagePool|image[${event.data.image}]
event.data.image=registryCredential[${event.data.credential}]
event.data.instance=volumes[${event.data.volume}]|offering|image[${event.data.image}]|ports|nics[${event.data.nic}]|instanceLinks[targetInstance]|networkContainer
event.data.instanceHostMap=instance[${event.data.instance}]|host
event.data.nic=ipAddresses[subnet]|network[networkServiceProviders|networkServices]
event.data.volume=offering|instance|storagePools|image
event.data.volumeStoragePoolMap=volume[${event.data.volume}]|storagePool
event.data.snapshot=volume
event.data.snapshotStoragePoolMap=snapshot[${event.data.snapshot}]|storagePool
event.data.service=environment


agent.config.items=host-config,pyagent,configscripts
agent.reconnect.disconnect.every.seconds=120

# 1 minute
object.remove.time.delay.seconds=60

process.agent.reconnect.priority=100
process.instance.start.priority=50
process.instance.stop.priority=50
process.instance.remove.priority=50
process.account.purge.priority=-100
process.agent.purge.priority=-100
process.credential.purge.priority=-100
process.genericobject.purge.priority=-100
process.instance.purge.priority=-100
process.instancehostmap.purge.priority=-100
process.instancelink.purge.priority=-100
process.ipaddress.purge.priority=-100
process.ipaddressnicmap.purge.priority=-100
process.networkserviceproviderinstancemap.purge.priority=-100
process.nic.purge.priority=-100
process.port.purge.priority=-100
process.projectmember.purge.priority=-100
process.storagepool.purge.priority=-100
process.volume.purge.priority=-100
process.volumestoragepoolmap.purge.priority=-100

instance.compute.tries=3

agent.activate.ping.retries=30
agent.activate.ping.timeout=10000

manage.nonrancher.containers=true
