<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:extension="http://cattle.io/schemas/spring/extension"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:process="http://cattle.io/schemas/spring/process/generic-process"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://cattle.io/schemas/spring/extension http://cattle.io/schemas/spring/extension-1.0.xsd
        http://cattle.io/schemas/spring/process/generic-process http://cattle.io/schemas/spring/process/generic-process-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="io.cattle.platform.process" />

    <bean class="io.cattle.platform.process.progress.ProcessProgressImpl" />
    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler" />
    <bean class="io.cattle.platform.process.common.handler.EventBasedProcessHandler" />
    <bean class="io.cattle.platform.process.agent.AgentHostStateUpdate" >
        <property name="processDefinitions" value="#{extensionManager.list('process.definition')}" />
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:reportProgress="true"
        p:name="ImageStoragePoolMapActivate"
        p:commandName="storage.image.activate"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.ImageStoragePoolMap"
        p:processNames="imagestoragepoolmap.activate"
        p:processDataKeys="containerNoOpEvent" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:name="ImageStoragePoolMapDeactivate"
        p:commandName="storage.image.deactivate"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.ImageStoragePoolMap"
        p:processNames="imagestoragepoolmap.deactivate"
        p:processDataKeys="containerNoOpEvent" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:name="VolumeStoragePoolMapActivate"
        p:commandName="storage.volume.activate"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.VolumeStoragePoolMap"
        p:processNames="volumestoragepoolmap.activate" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.instance.IgnoreReconnectionAgentHandler"
        p:name="VolumeStoragePoolMapDeactivate"
        p:commandName="storage.volume.deactivate"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.VolumeStoragePoolMap"
        p:processNames="volumestoragepoolmap.deactivate"
        p:shortCircuitIfAgentRemoved="true" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:name="VolumeStoragePoolMapRemove"
        p:commandName="storage.volume.remove"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.VolumeStoragePoolMap"
        p:processNames="volumestoragepoolmap.remove"
        p:shortCircuitIfAgentRemoved="true" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.mount.MountRemove"
        p:name="MountRemove"
        p:commandName="storage.volume.remove"
        p:dataTypeClass="io.cattle.platform.core.model.VolumeStoragePoolMap"
        p:dataResourceRelationship="none"
        p:processNames="mount.remove"
        p:shortCircuitIfAgentRemoved="true" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:name="InstanceHostMapActivate"
        p:commandName="compute.instance.activate"
        p:agentResourceRelationship="host"
        p:dataTypeClass="io.cattle.platform.core.model.InstanceHostMap"
        p:processNames="instancehostmap.activate"
        p:processDataKeys="containerNoOpEvent" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.instance.IgnoreReconnectionAgentHandler"
        p:name="InstanceHostMapDeactivate"
        p:commandName="compute.instance.deactivate"
        p:agentResourceRelationship="host"
        p:dataTypeClass="io.cattle.platform.core.model.InstanceHostMap"
        p:processNames="instancehostmap.deactivate"
        p:shortCircuitIfAgentRemoved="true" >
        <property name="processDataKeys">
            <list>
                <value>timeout</value>
                <value>containerNoOpEvent</value>
            </list>
        </property>
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.instance.LabelsProviderProcessHandler"
        p:name="LabelsProviders"
        p:commandName="compute.instance.providelabels"
        p:dataTypeClass="io.cattle.platform.core.model.InstanceHostMap"
        p:agentResourceRelationship="host"
        p:processNames="instancehostmap.activate" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.docker.process.environment.DockerComposeEnvironmentHandler"
        p:name="DockerComposeEnvironmentHandler"
        p:commandName="composeProject.create"
        p:dataTypeClass="io.cattle.platform.core.model.Environment"
        p:processNames="environment.create"
        p:errorChainProcess="environment.error" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.instance.PostInstancePurge"
        p:commandName="compute.instance.remove" >
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:shouldContinue="true"
        p:name="AgentConnectionClose"
        p:commandName="agent.close"
        p:processNames="agent.deactivate,agent.remove" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.PRE"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:name="SnapshotStoragePoolMapCreate"
        p:commandName="storage.snapshot.backup"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.SnapshotStoragePoolMap"
        p:processNames="snapshotstoragepoolmap.create" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.handler.AgentBasedProcessHandler"
        p:name="SnapshotStoragePoolMapRemove"
        p:commandName="storage.snapshot.remove"
        p:agentResourceRelationship="storagePool"
        p:dataTypeClass="io.cattle.platform.core.model.SnapshotStoragePoolMap"
        p:processNames="snapshotstoragepoolmap.remove" >
        <property name="priority">
            <util:constant static-field="io.cattle.platform.util.type.Priority.DEFAULT"/>
        </property>
    </bean>

    <bean class="io.cattle.platform.process.common.spring.GenericResourceProcessDefinitionCollector" />
    <bean id="processFactory" abstract="true" class="io.cattle.platform.process.common.spring.GenericProcessFactory" />

    <!-- 
        <process:defaultProcesses resourceType="agent" />

        The above XML is the equivalent as doing the below, 
        refer to cattle/code/iaas/logic-common/src/main/resources/META-INF/cattle/process/defaults.properties for the definitive list

        <process:process name="agent.create" resourceType="agent" start="requested" transitioning="registering" done="inactive" delegate="agent.activate" />
        <process:process name="agent.activate" resourceType="agent" start="inactive,registering" transitioning="activating" done="active" />
        <process:process name="agent.deactivate" resourceType="agent" start="active,activating,updating-active,updating-inactive" transitioning="deactivating" done="inactive" delegate="agent.remove" />
        <process:process name="agent.remove" resourceType="agent" start="requested,inactive,activating,deactivating,registering,updating-active,updating-inactive" transitioning="removing" done="removed" />
        <process:process name="agent.purge" resourceType="agent" start="removed" transitioning="purging" done="purged" />
        <process:process name="agent.update" resourceType="agent" start="inactive,active" transitioning="inactive=updating-inactive,active=updating-active" done="updating-inactive=inactive,updating-active=active" />
        <process:process name="agent.restore" resourceType="agent" start="removed" transitioning="restoring" done="inactive" />
    -->


    <process:defaultProcesses resourceType="account" />
    <process:defaultProcesses resourceType="agentgroup" />
    <process:defaultProcesses resourceType="credentialInstanceMap" />
    <process:defaultProcesses resourceType="genericObject" />
    <process:defaultProcesses resourceType="host" />
    <process:defaultProcesses resourceType="hostIpAddressMap" />
    <process:defaultProcesses resourceType="hostVnetMap" />
    <process:defaultProcesses resourceType="image" />
    <process:defaultProcesses resourceType="imageStoragePoolMap" />
    <process:defaultProcesses resourceType="instanceHostMap" />
    <process:defaultProcesses resourceType="instanceLink" />
    <process:defaultProcesses resourceType="ipAddressNicMap" />
    <process:defaultProcesses resourceType="ipAssociation" />
    <process:defaultProcesses resourceType="ipPool" />
    <process:defaultProcesses resourceType="network" />
    <process:defaultProcesses resourceType="networkService" />
    <process:defaultProcesses resourceType="networkServiceProvider" />
    <process:defaultProcesses resourceType="networkServiceProviderInstanceMap" />
    <process:defaultProcesses resourceType="nic" />
    <process:defaultProcesses resourceType="port" />
    <process:defaultProcesses resourceType="projectMember" />
    <process:defaultProcesses resourceType="storagePool" />
    <process:defaultProcesses resourceType="subnet" />
    <process:defaultProcesses resourceType="subnetVnetMap" />
    <process:defaultProcesses resourceType="vnet" />
    <process:defaultProcesses resourceType="volumeStoragePoolMap" />
    <process:defaultProcesses resourceType="zone" />
    <process:defaultProcesses resourceType="serviceIndex" />

    <!-- IP Address -->
    <process:defaultProcesses resourceType="ipAddress" />
    <process:process name="ipaddress.associate" resourceType="ipAddress" start="active" transitioning="associating" done="associated" />
    <process:process name="ipaddress.disassociate" resourceType="ipAddress" start="associating,associated" transitioning="disassociating" done="active" />

    <!-- Agent -->
    <process:defaultProcesses resourceType="agent" exclude="agent.deactivate" />
    <process:process name="agent.deactivate" resourceType="agent" start="active,activating,reconnecting,updating-active,updating-inactive" 
                                            transitioning="deactivating" done="inactive" />
    <process:process name="agent.reconnect" resourceType="agent" start="active,activating" transitioning="reconnecting" done="active" />


    <!-- Credential -->
    <process:defaultProcesses resourceType="credential" exclude="credential.restore" />

    <!-- Instance -->
    <process:defaultProcesses resourceType="instance"
        renames="
            registering=creating,
            inactive=stopped,
            activating=starting,
            active=running,
            updating-active=updating-running,
            deactivating=stopping,
            updating-inactive=updating-stopped"
        processRenames="
            instance.activate=instance.start,
            instance.deactivate=instance.stop"
        />
    <process:process name="instance.migrate" resourceType="instance" start="running" transitioning="migrating" done="running" />
    <process:process name="instance.allocate" resourceType="instance" stateField="allocationState" start="inactive" transitioning="activating" done="active" />
    <process:process name="instance.deallocate" resourceType="instance" stateField="allocationState" start="activating,active" transitioning="deactivating" done="inactive" />
    <process:process name="instance.restart" resourceType="instance" start="running" transitioning="restarting" done="running" />
    <process:process name="instance.updatehealthy" resourceType="instance" stateField="healthState" start="healthy,unhealthy,initializing,reinitializing" transitioning="updating-healthy" done="healthy" />
    <process:process name="instance.updateunhealthy" resourceType="instance" stateField="healthState" start="healthy,unhealthy" transitioning="updating-unhealthy" done="unhealthy" />
    <process:process name="instance.updatereinitializing" resourceType="instance" stateField="healthState" start="healthy" transitioning="updating-reinitializing" done="reinitializing" />
    <process:process name="instance.error" resourceType="instance" start="creating,stopped" transitioning="erroring" done="error" />
    <process:process name="instance.remove" resourceType="instance" start="requested,creating,updating-running,updating-stopped,stopped,erroring,error" transitioning="removing" done="removed" />

    <!-- Volume -->
    <process:defaultProcesses resourceType="volume" exclude="volume.activate"/>
    <process:process name="volume.activate" resourceType="volume" start="inactive,requested,registering" transitioning="activating" done="active" />
    <process:process name="volume.allocate" resourceType="volume" stateField="allocationState" start="inactive" transitioning="activating" done="active" />
    <process:process name="volume.deallocate" resourceType="volume" stateField="allocationState" start="activating,active" transitioning="deactivating" done="inactive" />

    <!-- Mount -->
    <process:process name="mount.create" resourceType="mount" start="requested" transitioning="activating" done="active" />
    <process:process name="mount.deactivate" resourceType="mount" start="active,activating" transitioning="deactivating" done="inactive" />
    <process:process name="mount.remove" resourceType="mount" start="inactive,deactivating" transitioning="removing" done="removed" />

    <!-- Physical Host -->  
    <process:process name="physicalhost.create" resourceType="physicalHost" start="requested" transitioning="creating" done="created" delegate="physicalhost.bootstrap" />
    <process:process name="physicalhost.bootstrap" resourceType="physicalHost" start="created,creating" transitioning="bootstrapping" done="active" />
    <process:process name="physicalhost.remove" resourceType="physicalHost" start="active,requested,bootstrapping,creating,updating,error,erroring" transitioning="removing" done="removed" />
    <process:process name="physicalhost.update" resourceType="physicalHost" start="active" transitioning="updating" done="active" />
    <process:process name="physicalhost.error" resourceType="physicalHost" start="creating, bootstrapping, updating" transitioning="erroring" done="error" />

    <!-- Service Discovery Environment -->
    <process:process name="environment.create" resourceType="environment" start="requested" transitioning="activating" done="active" />
    <process:process name="environment.update" resourceType="environment" start="active" transitioning="updating-active" done="active" />
    <process:process name="environment.remove" resourceType="environment" start="requested, active, activating, updating-active, error, erroring, upgrading, canceling-upgrade, canceling-rollback, rolling-back, finishing-upgrade, upgraded, canceled-upgrade" transitioning="removing" done="removed" />
    <process:process name="environment.error" resourceType="environment" start="activating" transitioning="erroring" done="error" />
    <process:process name="environment.upgrade" resourceType="environment" start="active" transitioning="upgrading" done="upgraded" />
    <process:process name="environment.cancelupgrade" resourceType="environment" start="upgrading" transitioning="canceling-upgrade" done="canceled-upgrade" />
    <process:process name="environment.rollback" resourceType="environment" start="upgraded,canceled-upgrade" transitioning="rolling-back" done="active" />
    <process:process name="environment.cancelrollback" resourceType="environment" start="rolling-back" transitioning="canceling-rollback" done="canceled-upgrade" />
    <process:process name="environment.finishupgrade" resourceType="environment" start="upgraded,canceled-upgrade" transitioning="finishing-upgrade" done="active" />

    
    <!-- Service Discovery Service -->
    <process:process name="service.create" resourceType="service" start="requested" transitioning="registering" done="inactive" />
    <process:process name="service.activate" resourceType="service" start="inactive,restarting" transitioning="activating" done="active" />    
    <process:process name="service.update" resourceType="service" start="inactive,active,updating-active" transitioning="inactive=updating-inactive,active=updating-active,updating-active=updating-active" done="updating-inactive=inactive,updating-active=active" />
    <process:process name="service.deactivate" resourceType="service" start="restarting,active,activating, updating-inactive, updating-active" transitioning="deactivating" done="inactive" />
    <process:process name="service.remove" resourceType="service" start="inactive, registering, active, activating, updating-inactive, updating-active, upgrading, canceling-upgrade, rolling-back, deactivating, requested,canceled-upgrade,rolling-back,canceling-rollback,canceled-rollback,upgraded,finishing-upgrade,restarting" transitioning="removing" done="removed" />
    <process:process name="service.upgrade" resourceType="service" start="active,inactive" transitioning="upgrading" done="upgraded" />
    <process:process name="service.cancelupgrade" resourceType="service" start="upgrading" transitioning="canceling-upgrade" done="canceled-upgrade" />
    <process:process name="service.rollback" resourceType="service" start="canceled-upgrade,upgraded" transitioning="rolling-back" done="active" />
    <process:process name="service.cancelrollback" resourceType="service" start="rolling-back" transitioning="canceling-rollback" done="canceled-rollback" />
    <process:process name="service.finishupgrade" resourceType="service" start="upgraded,canceled-upgrade,canceled-rollback" transitioning="finishing-upgrade" done="active" />
    <process:process name="service.restart" resourceType="service" start="active" transitioning="restarting" done="active" />

    <!-- Service Discovery Service/Instance map -->
    <process:process name="serviceexposemap.create" resourceType="serviceExposeMap" start="requested" transitioning="activating" done="active" />
    <process:process name="serviceexposemap.remove" resourceType="serviceExposeMap" start="active,activating, requested" transitioning="removing" done="removed" />
    
    <!-- Service Discovery Service/Service map -->
    <process:process name="serviceconsumemap.create" resourceType="serviceConsumeMap" start="requested" transitioning="activating" done="active" />
    <process:process name="serviceconsumemap.remove" resourceType="serviceConsumeMap" start="active,activating,updating-active" transitioning="removing" done="removed" />
    <process:process name="serviceconsumemap.update" resourceType="serviceConsumeMap" start="active,activating" transitioning="updating-active" done="active" />
    
      <!-- Instance healthcheck -->
    <process:process name="healthcheckinstance.create" resourceType="healthcheckInstance" start="requested" transitioning="activating" done="active" />
    <process:process name="healthcheckinstance.remove" resourceType="healthcheckInstance" start="active,activating" transitioning="removing" done="removed" />
    
    <!-- Instnace Healthcheck/Host map -->
    <process:process name="healthcheckinstancehostmap.create" resourceType="healthcheckInstanceHostMap" start="requested" transitioning="activating" done="active" />
    <process:process name="healthcheckinstancehostmap.remove" resourceType="healthcheckInstanceHostMap" start="active,activating" transitioning="removing" done="removed" />

    <!-- Container Event -->
    <process:process name="containerevent.create" resourceType="containerEvent" start="requested" transitioning="creating" done="created" />
    <process:process name="containerevent.remove" resourceType="containerEvent" start="created,creating" transitioning="removing" done="removed" />

    <!-- External Event -->
    <process:process name="externalevent.create" resourceType="externalEvent" start="requested" transitioning="creating" done="created" />
    <process:process name="externalevent.remove" resourceType="externalEvent" start="created,creating" transitioning="removing" done="removed" />

    <!-- Snapshot -->
    <process:process name="snapshot.create" resourceType="snapshot" start="requested" transitioning="creating" done="created" />
    <process:process name="snapshot.backup" resourceType="snapshot" start="created" transitioning="backing-up" done="backed-up" />
    <process:process name="snapshot.remove" resourceType="snapshot" start="creating,created,backing-up,backed-up" transitioning="removing" done="removed" />

    <!-- Snapshot StoragePool map -->
    <process:process name="snapshotstoragepoolmap.create" resourceType="snapshotStoragePoolMap" start="requested" transitioning="creating" done="created" />
    <process:process name="snapshotstoragepoolmap.remove" resourceType="snapshotStoragePoolMap" start="created,creating" transitioning="removing" done="removed" />

    <!--  Label -->
    <process:process name="label.create" resourceType="label" start="requested" transitioning="creating" done="created" />
    <process:process name="label.remove" resourceType="label" start="created,creating" transitioning="removing" done="removed" />

    <!-- Host label map -->
    <process:process name="hostlabelmap.create" resourceType="hostLabelMap" start="requested" transitioning="creating" done="created" />
    <process:process name="hostlabelmap.remove" resourceType="hostLabelMap" start="created,creating" transitioning="removing" done="removed" />

    <!-- Instance label map -->
    <process:process name="instancelabelmap.create" resourceType="instanceLabelMap" start="requested" transitioning="creating" done="created" />
    <process:process name="instancelabelmap.remove" resourceType="instanceLabelMap" start="created,creating" transitioning="removing" done="removed" />

    <!-- Service Event -->
    <process:process name="serviceevent.create" resourceType="serviceEvent" start="requested" transitioning="creating" done="created" />
    <process:process name="serviceevent.remove" resourceType="serviceEvent" start="created,creating" transitioning="removing" done="removed" />

    <!-- User Preference -->
    <process:defaultProcesses resourceType="userPreference" />
    <process:process name="userpreference.remove" resourceType="userPreference" start="inactive,active" transitioning="removing" done="removed" />

 	<!-- Certificate -->
    <process:process name="certificate.create" resourceType="certificate" start="requested" transitioning="activating" done="active" />
    <process:process name="certificate.remove" resourceType="certificate" start="requested,active,activating" transitioning="removing" done="removed" />

    <!-- Storage Pool Host Map -->
    <process:process name="storagepoolhostmap.create" resourceType="storagePoolHostMap" start="requested" transitioning="activating" done="active" />
    <process:process name="storagepoolhostmap.remove" resourceType="storagePoolHostMap" start="active,activating" transitioning="removing" done="removed" />

    <!-- Machine driver-->
    <process:process name="machinedriver.create" resourceType="machineDriver" start="create" transitioning="requesting" done="requested" />
    <process:process name="machinedriver.activate" resourceType="machineDriver" start="requested" transitioning="activating" done="active" />
    <process:process name="machinedriver.error" resourceType="machineDriver" start="active,activating,requested" transitioning="erroring" done="error" />
    <process:process name="machinedriver.remove" resourceType="machineDriver" start="requested,activating,active,error,erroring" transitioning="purging" done="purged" />
    <process:process name="machinedriver.retry" resourceType="machineDriver" start="error,erroring" transitioning="requesting" done="requested" />

    <!-- Dynamic Schema-->
    <process:process name="dynamicschema.create" resourceType="dynamicSchema" start="requested" transitioning="creating" done="active" />
    <process:process name="dynamicschema.remove" resourceType="dynamicSchema" start="active" transitioning="removing" done="purged" />


    <bean class="io.cattle.platform.docker.process.dao.impl.DockerComputeDaoImpl" />

    <bean class="io.cattle.platform.docker.process.instance.DockerInstancePreCreate" />
    <bean class="io.cattle.platform.docker.process.instance.DockerInstancePostCreate" />
    <bean class="io.cattle.platform.docker.process.account.DockerAccountCreate" />
    <bean class="io.cattle.platform.docker.process.instancehostmap.DockerPostInstanceHostMapActivate" />
    <bean class="io.cattle.platform.docker.process.serializer.DockerContainerSerializer" />
    <bean class="io.cattle.platform.service.account.SystemRoleObjectPostProcessor" />
    <bean class="io.cattle.platform.docker.process.nic.DockerNicDeactivate" />
    <bean class="io.cattle.platform.docker.process.ipaddress.DockerIpAddressDeactivate" />
    <bean class="io.cattle.platform.docker.process.instancehostmap.DockerComposeInstanceHostMapActivate" />
    <bean class="io.cattle.platform.docker.process.instance.DockerComposeServiceCleanup" />

    <tx:advice id="DockerComputeDaoImplAdvice" transaction-manager="CoreTransactionManager">
        <tx:attributes>
            <tx:method name="createDockerVolumeInPool" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="DockerComputeDaoImplAdvice"
            pointcut="execution(* io.cattle.platform.docker.process.dao.DockerComputeDao.*(..))" />
    </aop:config>

    <bean class="io.cattle.platform.docker.machine.process.MachinePreCreate" />
    <bean class="io.cattle.platform.docker.machine.launch.MachineDriverLoader" />
    <bean class="io.cattle.platform.docker.machine.launch.MachineLauncher" />
    <bean class="io.cattle.platform.docker.machine.launch.ComposeExecutorLauncher" />
    <bean class="io.cattle.platform.docker.machine.launch.CatalogLauncher" />
    
    <process:defaultProcesses resourceType="externalHandler" />
    <process:defaultProcesses resourceType="externalHandlerProcess" />
    <process:defaultProcesses resourceType="externalHandlerExternalHandlerProcessMap" />

    <bean class="io.cattle.platform.extension.dynamic.process.ExternalHandlerActivate" />


    <bean class="io.cattle.platform.networking.host.process.HostOnlyNicActivate" />
    <bean class="io.cattle.platform.networking.host.dao.impl.HostOnlyDaoImpl" />

    <tx:advice id="HostOnlyAdvice" transaction-manager="CoreTransactionManager">
        <tx:attributes>
            <tx:method name="createVnetForHost" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="HostOnlyAdvice" pointcut="execution(* io.cattle.platform.networking.host.dao.HostOnlyDao.*(..))" />
    </aop:config>

    <bean class="io.cattle.platform.metadata.process.MetadataAttachProcessHandler" />

    <extension:discover class="io.cattle.platform.engine.process.ProcessDefinition" />

    <bean class="io.cattle.platform.vm.process.VirtualMachineMetadata" />
    <bean class="io.cattle.platform.vm.process.VirtualMachinePreCreate" />
    <bean class="io.cattle.platform.vm.process.ServiceVirtualMachinePreCreate" />

</beans>
