/**
 * This class is generated by jOOQ
 */
package io.cattle.platform.core.model;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>cattle</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AccountRecord, java.lang.Long> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AgentRecord, java.lang.Long> IDENTITY_AGENT = Identities0.IDENTITY_AGENT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AgentGroupRecord, java.lang.Long> IDENTITY_AGENT_GROUP = Identities0.IDENTITY_AGENT_GROUP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemRecord, java.lang.Long> IDENTITY_CONFIG_ITEM = Identities0.IDENTITY_CONFIG_ITEM;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, java.lang.Long> IDENTITY_CONFIG_ITEM_STATUS = Identities0.IDENTITY_CONFIG_ITEM_STATUS;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialRecord, java.lang.Long> IDENTITY_CREDENTIAL = Identities0.IDENTITY_CREDENTIAL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, java.lang.Long> IDENTITY_CREDENTIAL_INSTANCE_MAP = Identities0.IDENTITY_CREDENTIAL_INSTANCE_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.DataRecord, java.lang.Long> IDENTITY_DATA = Identities0.IDENTITY_DATA;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER = Identities0.IDENTITY_EXTERNAL_HANDLER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP = Identities0.IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_PROCESS = Identities0.IDENTITY_EXTERNAL_HANDLER_PROCESS;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.GenericObjectRecord, java.lang.Long> IDENTITY_GENERIC_OBJECT = Identities0.IDENTITY_GENERIC_OBJECT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostRecord, java.lang.Long> IDENTITY_HOST = Identities0.IDENTITY_HOST;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, java.lang.Long> IDENTITY_HOST_IP_ADDRESS_MAP = Identities0.IDENTITY_HOST_IP_ADDRESS_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostVnetMapRecord, java.lang.Long> IDENTITY_HOST_VNET_MAP = Identities0.IDENTITY_HOST_VNET_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageRecord, java.lang.Long> IDENTITY_IMAGE = Identities0.IDENTITY_IMAGE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, java.lang.Long> IDENTITY_IMAGE_STORAGE_POOL_MAP = Identities0.IDENTITY_IMAGE_STORAGE_POOL_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceRecord, java.lang.Long> IDENTITY_INSTANCE = Identities0.IDENTITY_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, java.lang.Long> IDENTITY_INSTANCE_HOST_MAP = Identities0.IDENTITY_INSTANCE_HOST_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, java.lang.Long> IDENTITY_INSTANCE_LINK = Identities0.IDENTITY_INSTANCE_LINK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressRecord, java.lang.Long> IDENTITY_IP_ADDRESS = Identities0.IDENTITY_IP_ADDRESS;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, java.lang.Long> IDENTITY_IP_ADDRESS_NIC_MAP = Identities0.IDENTITY_IP_ADDRESS_NIC_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAssociationRecord, java.lang.Long> IDENTITY_IP_ASSOCIATION = Identities0.IDENTITY_IP_ASSOCIATION;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpPoolRecord, java.lang.Long> IDENTITY_IP_POOL = Identities0.IDENTITY_IP_POOL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.MountRecord, java.lang.Long> IDENTITY_MOUNT = Identities0.IDENTITY_MOUNT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkRecord, java.lang.Long> IDENTITY_NETWORK = Identities0.IDENTITY_NETWORK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, java.lang.Long> IDENTITY_NETWORK_SERVICE = Identities0.IDENTITY_NETWORK_SERVICE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord, java.lang.Long> IDENTITY_NETWORK_SERVICE_PROVIDER = Identities0.IDENTITY_NETWORK_SERVICE_PROVIDER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord, java.lang.Long> IDENTITY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP = Identities0.IDENTITY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NicRecord, java.lang.Long> IDENTITY_NIC = Identities0.IDENTITY_NIC;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.OfferingRecord, java.lang.Long> IDENTITY_OFFERING = Identities0.IDENTITY_OFFERING;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, java.lang.Long> IDENTITY_PHYSICAL_HOST = Identities0.IDENTITY_PHYSICAL_HOST;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.PortRecord, java.lang.Long> IDENTITY_PORT = Identities0.IDENTITY_PORT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, java.lang.Long> IDENTITY_PROCESS_EXECUTION = Identities0.IDENTITY_PROCESS_EXECUTION;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord, java.lang.Long> IDENTITY_PROCESS_INSTANCE = Identities0.IDENTITY_PROCESS_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, java.lang.Long> IDENTITY_RESOURCE_POOL = Identities0.IDENTITY_RESOURCE_POOL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SettingRecord, java.lang.Long> IDENTITY_SETTING = Identities0.IDENTITY_SETTING;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolRecord, java.lang.Long> IDENTITY_STORAGE_POOL = Identities0.IDENTITY_STORAGE_POOL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, java.lang.Long> IDENTITY_STORAGE_POOL_HOST_MAP = Identities0.IDENTITY_STORAGE_POOL_HOST_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SubnetRecord, java.lang.Long> IDENTITY_SUBNET = Identities0.IDENTITY_SUBNET;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord, java.lang.Long> IDENTITY_SUBNET_VNET_MAP = Identities0.IDENTITY_SUBNET_VNET_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskRecord, java.lang.Long> IDENTITY_TASK = Identities0.IDENTITY_TASK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, java.lang.Long> IDENTITY_TASK_INSTANCE = Identities0.IDENTITY_TASK_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.VnetRecord, java.lang.Long> IDENTITY_VNET = Identities0.IDENTITY_VNET;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeRecord, java.lang.Long> IDENTITY_VOLUME = Identities0.IDENTITY_VOLUME;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, java.lang.Long> IDENTITY_VOLUME_STORAGE_POOL_MAP = Identities0.IDENTITY_VOLUME_STORAGE_POOL_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ZoneRecord, java.lang.Long> IDENTITY_ZONE = Identities0.IDENTITY_ZONE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_IDX_ACCOUNT_UUID = UniqueKeys0.KEY_ACCOUNT_IDX_ACCOUNT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_PRIMARY = UniqueKeys0.KEY_AGENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_IDX_AGENT_UUID = UniqueKeys0.KEY_AGENT_IDX_AGENT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_PRIMARY = UniqueKeys0.KEY_AGENT_GROUP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_IDX_AGENT_GROUP_UUID = UniqueKeys0.KEY_AGENT_GROUP_IDX_AGENT_GROUP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_PRIMARY = UniqueKeys0.KEY_CONFIG_ITEM_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME = UniqueKeys0.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_PRIMARY = UniqueKeys0.KEY_CONFIG_ITEM_STATUS_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_NAME_AGENT_ID = UniqueKeys0.KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_NAME_AGENT_ID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_PRIMARY = UniqueKeys0.KEY_CREDENTIAL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_IDX_CREDENTIAL_UUID = UniqueKeys0.KEY_CREDENTIAL_IDX_CREDENTIAL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_PRIMARY = UniqueKeys0.KEY_CREDENTIAL_INSTANCE_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_IDX_CREDENTIAL_INSTANCE_MAP_UUID = UniqueKeys0.KEY_CREDENTIAL_INSTANCE_MAP_IDX_CREDENTIAL_INSTANCE_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_PRIMARY = UniqueKeys0.KEY_DATA_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_IDX_DATA_NAME = UniqueKeys0.KEY_DATA_IDX_DATA_NAME;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_PRIMARY = UniqueKeys0.KEY_GENERIC_OBJECT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_IDX_GENERIC_OBJECT_UUID = UniqueKeys0.KEY_GENERIC_OBJECT_IDX_GENERIC_OBJECT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_PRIMARY = UniqueKeys0.KEY_HOST_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_IDX_HOST_UUID = UniqueKeys0.KEY_HOST_IDX_HOST_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_PRIMARY = UniqueKeys0.KEY_HOST_IP_ADDRESS_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_IDX_HOST_IP_ADDRESS_MAP_UUID = UniqueKeys0.KEY_HOST_IP_ADDRESS_MAP_IDX_HOST_IP_ADDRESS_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord> KEY_HOST_VNET_MAP_PRIMARY = UniqueKeys0.KEY_HOST_VNET_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord> KEY_HOST_VNET_MAP_IDX_HOST_VNET_MAP_UUID = UniqueKeys0.KEY_HOST_VNET_MAP_IDX_HOST_VNET_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_PRIMARY = UniqueKeys0.KEY_IMAGE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_IDX_IMAGE_UUID = UniqueKeys0.KEY_IMAGE_IDX_IMAGE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY = UniqueKeys0.KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID = UniqueKeys0.KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_PRIMARY = UniqueKeys0.KEY_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_IDX_INSTANCE_UUID = UniqueKeys0.KEY_INSTANCE_IDX_INSTANCE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_PRIMARY = UniqueKeys0.KEY_INSTANCE_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID = UniqueKeys0.KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_PRIMARY = UniqueKeys0.KEY_INSTANCE_LINK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_IDX_LINK_UUID = UniqueKeys0.KEY_INSTANCE_LINK_IDX_LINK_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_PRIMARY = UniqueKeys0.KEY_IP_ADDRESS_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_IDX_IP_ADDRESS_UUID = UniqueKeys0.KEY_IP_ADDRESS_IDX_IP_ADDRESS_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_PRIMARY = UniqueKeys0.KEY_IP_ADDRESS_NIC_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_IDX_IP_ADDRESS_NIC_MAP_UUID = UniqueKeys0.KEY_IP_ADDRESS_NIC_MAP_IDX_IP_ADDRESS_NIC_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord> KEY_IP_ASSOCIATION_PRIMARY = UniqueKeys0.KEY_IP_ASSOCIATION_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord> KEY_IP_ASSOCIATION_IDX_IP_ASSOCIATION_UUID = UniqueKeys0.KEY_IP_ASSOCIATION_IDX_IP_ASSOCIATION_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpPoolRecord> KEY_IP_POOL_PRIMARY = UniqueKeys0.KEY_IP_POOL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpPoolRecord> KEY_IP_POOL_IDX_IP_POOL_UUID = UniqueKeys0.KEY_IP_POOL_IDX_IP_POOL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_PRIMARY = UniqueKeys0.KEY_MOUNT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_IDX_MOUNT_UUID = UniqueKeys0.KEY_MOUNT_IDX_MOUNT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_PRIMARY = UniqueKeys0.KEY_NETWORK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_IDX_NETWORK_UUID = UniqueKeys0.KEY_NETWORK_IDX_NETWORK_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord> KEY_NETWORK_SERVICE_PRIMARY = UniqueKeys0.KEY_NETWORK_SERVICE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord> KEY_NETWORK_SERVICE_IDX_NETWORK_SERVICE_UUID = UniqueKeys0.KEY_NETWORK_SERVICE_IDX_NETWORK_SERVICE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> KEY_NETWORK_SERVICE_PROVIDER_PRIMARY = UniqueKeys0.KEY_NETWORK_SERVICE_PROVIDER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> KEY_NETWORK_SERVICE_PROVIDER_IDX_NETWORK_SERVICE_PROVIDER_UUID = UniqueKeys0.KEY_NETWORK_SERVICE_PROVIDER_IDX_NETWORK_SERVICE_PROVIDER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord> KEY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_PRIMARY = UniqueKeys0.KEY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord> KEY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_IDX_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_UUID = UniqueKeys0.KEY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_IDX_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_PRIMARY = UniqueKeys0.KEY_NIC_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_IDX_NIC_UUID = UniqueKeys0.KEY_NIC_IDX_NIC_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.OfferingRecord> KEY_OFFERING_PRIMARY = UniqueKeys0.KEY_OFFERING_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.OfferingRecord> KEY_OFFERING_IDX_OFFERING_UUID = UniqueKeys0.KEY_OFFERING_IDX_OFFERING_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_PRIMARY = UniqueKeys0.KEY_PHYSICAL_HOST_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_IDX_PHYSICAL_HOST_UUID = UniqueKeys0.KEY_PHYSICAL_HOST_IDX_PHYSICAL_HOST_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_PRIMARY = UniqueKeys0.KEY_PORT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_IDX_PORT_UUID = UniqueKeys0.KEY_PORT_IDX_PORT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_PRIMARY = UniqueKeys0.KEY_PROCESS_EXECUTION_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID = UniqueKeys0.KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> KEY_PROCESS_INSTANCE_PRIMARY = UniqueKeys0.KEY_PROCESS_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_PRIMARY = UniqueKeys0.KEY_RESOURCE_POOL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID = UniqueKeys0.KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_POOL_ITEM2 = UniqueKeys0.KEY_RESOURCE_POOL_IDX_POOL_ITEM2;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SettingRecord> KEY_SETTING_PRIMARY = UniqueKeys0.KEY_SETTING_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_PRIMARY = UniqueKeys0.KEY_STORAGE_POOL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID = UniqueKeys0.KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_PRIMARY = UniqueKeys0.KEY_STORAGE_POOL_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID = UniqueKeys0.KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_PRIMARY = UniqueKeys0.KEY_SUBNET_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_IDX_SUBNET_UUID = UniqueKeys0.KEY_SUBNET_IDX_SUBNET_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord> KEY_SUBNET_VNET_MAP_PRIMARY = UniqueKeys0.KEY_SUBNET_VNET_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord> KEY_SUBNET_VNET_MAP_IDX_SUBNET_VNET_MAP_UUID = UniqueKeys0.KEY_SUBNET_VNET_MAP_IDX_SUBNET_VNET_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_PRIMARY = UniqueKeys0.KEY_TASK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_IDX_TASK_NAME = UniqueKeys0.KEY_TASK_IDX_TASK_NAME;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord> KEY_TASK_INSTANCE_PRIMARY = UniqueKeys0.KEY_TASK_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VnetRecord> KEY_VNET_PRIMARY = UniqueKeys0.KEY_VNET_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VnetRecord> KEY_VNET_IDX_VNET_UUID = UniqueKeys0.KEY_VNET_IDX_VNET_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_PRIMARY = UniqueKeys0.KEY_VOLUME_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_IDX_VOLUME_UUID = UniqueKeys0.KEY_VOLUME_IDX_VOLUME_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY = UniqueKeys0.KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID = UniqueKeys0.KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_PRIMARY = UniqueKeys0.KEY_ZONE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_IDX_ZONE_UUID = UniqueKeys0.KEY_ZONE_IDX_ZONE_UUID;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AGENT__ACCOUNT_ID = ForeignKeys0.FK_AGENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.AgentGroupRecord> FK_AGENT__AGENT_GROUP_ID = ForeignKeys0.FK_AGENT__AGENT_GROUP_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_AGENT__ZONE_ID = ForeignKeys0.FK_AGENT__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentGroupRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AGENT_GROUP__ACCOUNT_ID = ForeignKeys0.FK_AGENT_GROUP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.ConfigItemRecord> FK_CONFIG_ITEM__NAME = ForeignKeys0.FK_CONFIG_ITEM__NAME;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_CONFIG_ITEM__AGENT_ID = ForeignKeys0.FK_CONFIG_ITEM__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CREDENTIAL__ACCOUNT_ID = ForeignKeys0.FK_CREDENTIAL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_CREDENTIAL_INSTANCE_MAP__CREDENTIAL_ID = ForeignKeys0.FK_CREDENTIAL_INSTANCE_MAP__CREDENTIAL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_CREDENTIAL_INSTANCE_MAP__INSTANCE_ID = ForeignKeys0.FK_CREDENTIAL_INSTANCE_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID = ForeignKeys0.FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID = ForeignKeys0.FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_GENERIC_OBJECT__ACCOUNT_ID = ForeignKeys0.FK_GENERIC_OBJECT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST__ACCOUNT_ID = ForeignKeys0.FK_HOST__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_HOST__AGENT_ID = ForeignKeys0.FK_HOST__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_HOST__ZONE_ID = ForeignKeys0.FK_HOST__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.PhysicalHostRecord> FK_HOST__PHYSICAL_HOST_ID = ForeignKeys0.FK_HOST__PHYSICAL_HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_IP_ADDRESS_MAP__HOST_ID = ForeignKeys0.FK_HOST_IP_ADDRESS_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_HOST_IP_ADDRESS_MAP__IP_ADDRESS_ID = ForeignKeys0.FK_HOST_IP_ADDRESS_MAP__IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_VNET_MAP__HOST_ID = ForeignKeys0.FK_HOST_VNET_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord, io.cattle.platform.core.model.tables.records.VnetRecord> FK_HOST_VNET_MAP__VNET_ID = ForeignKeys0.FK_HOST_VNET_MAP__VNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IMAGE__ACCOUNT_ID = ForeignKeys0.FK_IMAGE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID = ForeignKeys0.FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE__ACCOUNT_ID = ForeignKeys0.FK_INSTANCE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_INSTANCE__IMAGE_ID = ForeignKeys0.FK_INSTANCE__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.OfferingRecord> FK_INSTANCE__OFFERING_ID = ForeignKeys0.FK_INSTANCE__OFFERING_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_INSTANCE__ZONE_ID = ForeignKeys0.FK_INSTANCE__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_INSTANCE__AGENT_ID = ForeignKeys0.FK_INSTANCE__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_HOST_MAP__INSTANCE_ID = ForeignKeys0.FK_INSTANCE_HOST_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_INSTANCE_HOST_MAP__HOST_ID = ForeignKeys0.FK_INSTANCE_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_LINK__ACCOUNT_ID = ForeignKeys0.FK_LINK__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__INSTANCE_ID = ForeignKeys0.FK_LINK__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__TARGET_INSTANCE_ID = ForeignKeys0.FK_LINK__TARGET_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_ADDRESS__ACCOUNT_ID = ForeignKeys0.FK_IP_ADDRESS__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_IP_ADDRESS__SUBNET_ID = ForeignKeys0.FK_IP_ADDRESS__SUBNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_IP_ADDRESS__NETWORK_ID = ForeignKeys0.FK_IP_ADDRESS__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.IpPoolRecord> FK_IP_ADDRESS__IP_POOL_ID = ForeignKeys0.FK_IP_ADDRESS__IP_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS_NIC_MAP__IP_ADDRESS_ID = ForeignKeys0.FK_IP_ADDRESS_NIC_MAP__IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.NicRecord> FK_IP_ADDRESS_NIC_MAP__NIC_ID = ForeignKeys0.FK_IP_ADDRESS_NIC_MAP__NIC_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_ASSOCIATION__ACCOUNT_ID = ForeignKeys0.FK_IP_ASSOCIATION__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ASSOCIATION__IP_ADDRESS_ID = ForeignKeys0.FK_IP_ASSOCIATION__IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ASSOCIATION__CHILD_IP_ADDRESS_ID = ForeignKeys0.FK_IP_ASSOCIATION__CHILD_IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpPoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_POOL__ACCOUNT_ID = ForeignKeys0.FK_IP_POOL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_MOUNT__ACCOUNT_ID = ForeignKeys0.FK_MOUNT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_MOUNT__VOLUME_ID = ForeignKeys0.FK_MOUNT__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_MOUNT__INSTANCE_ID = ForeignKeys0.FK_MOUNT__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK__ACCOUNT_ID = ForeignKeys0.FK_NETWORK__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK_SERVICE__ACCOUNT_ID = ForeignKeys0.FK_NETWORK_SERVICE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NETWORK_SERVICE__NETWORK_ID = ForeignKeys0.FK_NETWORK_SERVICE__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> FK_NETWORK_SERVICE__NETWORK_SERVICE_PROVIDER_ID = ForeignKeys0.FK_NETWORK_SERVICE__NETWORK_SERVICE_PROVIDER_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK_SERVICE_PROVIDER__ACCOUNT_ID = ForeignKeys0.FK_NETWORK_SERVICE_PROVIDER__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NETWORK_SERVICE_PROVIDER__NETWORK_ID = ForeignKeys0.FK_NETWORK_SERVICE_PROVIDER__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord, io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> FK_NSPIM_NETWORK_SERVICE_PROVIDER_ID = ForeignKeys0.FK_NSPIM_NETWORK_SERVICE_PROVIDER_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP__INSTANCE_ID = ForeignKeys0.FK_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NIC__ACCOUNT_ID = ForeignKeys0.FK_NIC__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_NIC__INSTANCE_ID = ForeignKeys0.FK_NIC__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NIC__NETWORK_ID = ForeignKeys0.FK_NIC__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_NIC__SUBNET_ID = ForeignKeys0.FK_NIC__SUBNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.VnetRecord> FK_NIC__VNET_ID = ForeignKeys0.FK_NIC__VNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.OfferingRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_OFFERING__ACCOUNT_ID = ForeignKeys0.FK_OFFERING__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PHYSICAL_HOST__ACCOUNT_ID = ForeignKeys0.FK_PHYSICAL_HOST__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PORT__ACCOUNT_ID = ForeignKeys0.FK_PORT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_PORT__INSTANCE_ID = ForeignKeys0.FK_PORT__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PUBLIC_IP_ADDRESS_ID = ForeignKeys0.FK_IP_ADDRESS__PUBLIC_IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PRIVATE_IP_ADDRESS_ID = ForeignKeys0.FK_IP_ADDRESS__PRIVATE_IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID = ForeignKeys0.FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_RESOURCE_POOL__ACCOUNT_ID = ForeignKeys0.FK_RESOURCE_POOL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_STORAGE_POOL__ACCOUNT_ID = ForeignKeys0.FK_STORAGE_POOL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_STORAGE_POOL__AGENT_ID = ForeignKeys0.FK_STORAGE_POOL__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_STORAGE_POOL__ZONE_ID = ForeignKeys0.FK_STORAGE_POOL__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_STORAGE_POOL_HOST_MAP__HOST_ID = ForeignKeys0.FK_STORAGE_POOL_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SUBNET__ACCOUNT_ID = ForeignKeys0.FK_SUBNET__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_SUBNET__NETWORK_ID = ForeignKeys0.FK_SUBNET__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.IpPoolRecord> FK_SUBNET__POOL_ID = ForeignKeys0.FK_SUBNET__POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_SUBNET_VNET_MAP__SUBNET_ID = ForeignKeys0.FK_SUBNET_VNET_MAP__SUBNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord, io.cattle.platform.core.model.tables.records.VnetRecord> FK_SUBNET_VNET_MAP__VNET_ID = ForeignKeys0.FK_SUBNET_VNET_MAP__VNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, io.cattle.platform.core.model.tables.records.TaskRecord> FK_TASK_INSTANCE__TASK_ID = ForeignKeys0.FK_TASK_INSTANCE__TASK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VnetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VNET__ACCOUNT_ID = ForeignKeys0.FK_VNET__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VnetRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_VNET__NETWORK_ID = ForeignKeys0.FK_VNET__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VOLUME__ACCOUNT_ID = ForeignKeys0.FK_VOLUME__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_VOLUME__INSTANCE_ID = ForeignKeys0.FK_VOLUME__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_VOLUME__IMAGE_ID = ForeignKeys0.FK_VOLUME__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.OfferingRecord> FK_VOLUME__OFFERING_ID = ForeignKeys0.FK_VOLUME__OFFERING_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_VOLUME__ZONE_ID = ForeignKeys0.FK_VOLUME__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID = ForeignKeys0.FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ZoneRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ZONE__ACCOUNT_ID = ForeignKeys0.FK_ZONE__ACCOUNT_ID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AccountRecord, java.lang.Long> IDENTITY_ACCOUNT = createIdentity(io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AgentRecord, java.lang.Long> IDENTITY_AGENT = createIdentity(io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AgentGroupRecord, java.lang.Long> IDENTITY_AGENT_GROUP = createIdentity(io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP, io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemRecord, java.lang.Long> IDENTITY_CONFIG_ITEM = createIdentity(io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, java.lang.Long> IDENTITY_CONFIG_ITEM_STATUS = createIdentity(io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialRecord, java.lang.Long> IDENTITY_CREDENTIAL = createIdentity(io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, java.lang.Long> IDENTITY_CREDENTIAL_INSTANCE_MAP = createIdentity(io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.DataRecord, java.lang.Long> IDENTITY_DATA = createIdentity(io.cattle.platform.core.model.tables.DataTable.DATA, io.cattle.platform.core.model.tables.DataTable.DATA.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER = createIdentity(io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP = createIdentity(io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_PROCESS = createIdentity(io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.GenericObjectRecord, java.lang.Long> IDENTITY_GENERIC_OBJECT = createIdentity(io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostRecord, java.lang.Long> IDENTITY_HOST = createIdentity(io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, java.lang.Long> IDENTITY_HOST_IP_ADDRESS_MAP = createIdentity(io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostVnetMapRecord, java.lang.Long> IDENTITY_HOST_VNET_MAP = createIdentity(io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageRecord, java.lang.Long> IDENTITY_IMAGE = createIdentity(io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, java.lang.Long> IDENTITY_IMAGE_STORAGE_POOL_MAP = createIdentity(io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceRecord, java.lang.Long> IDENTITY_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, java.lang.Long> IDENTITY_INSTANCE_HOST_MAP = createIdentity(io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, java.lang.Long> IDENTITY_INSTANCE_LINK = createIdentity(io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressRecord, java.lang.Long> IDENTITY_IP_ADDRESS = createIdentity(io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, java.lang.Long> IDENTITY_IP_ADDRESS_NIC_MAP = createIdentity(io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAssociationRecord, java.lang.Long> IDENTITY_IP_ASSOCIATION = createIdentity(io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpPoolRecord, java.lang.Long> IDENTITY_IP_POOL = createIdentity(io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL, io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.MountRecord, java.lang.Long> IDENTITY_MOUNT = createIdentity(io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkRecord, java.lang.Long> IDENTITY_NETWORK = createIdentity(io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, java.lang.Long> IDENTITY_NETWORK_SERVICE = createIdentity(io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord, java.lang.Long> IDENTITY_NETWORK_SERVICE_PROVIDER = createIdentity(io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord, java.lang.Long> IDENTITY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP = createIdentity(io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NicRecord, java.lang.Long> IDENTITY_NIC = createIdentity(io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.OfferingRecord, java.lang.Long> IDENTITY_OFFERING = createIdentity(io.cattle.platform.core.model.tables.OfferingTable.OFFERING, io.cattle.platform.core.model.tables.OfferingTable.OFFERING.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, java.lang.Long> IDENTITY_PHYSICAL_HOST = createIdentity(io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.PortRecord, java.lang.Long> IDENTITY_PORT = createIdentity(io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, java.lang.Long> IDENTITY_PROCESS_EXECUTION = createIdentity(io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord, java.lang.Long> IDENTITY_PROCESS_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, java.lang.Long> IDENTITY_RESOURCE_POOL = createIdentity(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SettingRecord, java.lang.Long> IDENTITY_SETTING = createIdentity(io.cattle.platform.core.model.tables.SettingTable.SETTING, io.cattle.platform.core.model.tables.SettingTable.SETTING.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolRecord, java.lang.Long> IDENTITY_STORAGE_POOL = createIdentity(io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, java.lang.Long> IDENTITY_STORAGE_POOL_HOST_MAP = createIdentity(io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SubnetRecord, java.lang.Long> IDENTITY_SUBNET = createIdentity(io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord, java.lang.Long> IDENTITY_SUBNET_VNET_MAP = createIdentity(io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskRecord, java.lang.Long> IDENTITY_TASK = createIdentity(io.cattle.platform.core.model.tables.TaskTable.TASK, io.cattle.platform.core.model.tables.TaskTable.TASK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, java.lang.Long> IDENTITY_TASK_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.VnetRecord, java.lang.Long> IDENTITY_VNET = createIdentity(io.cattle.platform.core.model.tables.VnetTable.VNET, io.cattle.platform.core.model.tables.VnetTable.VNET.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeRecord, java.lang.Long> IDENTITY_VOLUME = createIdentity(io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, java.lang.Long> IDENTITY_VOLUME_STORAGE_POOL_MAP = createIdentity(io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ZoneRecord, java.lang.Long> IDENTITY_ZONE = createIdentity(io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_IDX_ACCOUNT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_IDX_AGENT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP, io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentGroupRecord> KEY_AGENT_GROUP_IDX_AGENT_GROUP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP, io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM.NAME);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_NAME_AGENT_ID = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.NAME, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.AGENT_ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_IDX_CREDENTIAL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_IDX_CREDENTIAL_INSTANCE_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DataTable.DATA, io.cattle.platform.core.model.tables.DataTable.DATA.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_IDX_DATA_NAME = createUniqueKey(io.cattle.platform.core.model.tables.DataTable.DATA, io.cattle.platform.core.model.tables.DataTable.DATA.NAME);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DatabasechangeloglockTable.DATABASECHANGELOGLOCK, io.cattle.platform.core.model.tables.DatabasechangeloglockTable.DATABASECHANGELOGLOCK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_IDX_GENERIC_OBJECT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_IDX_HOST_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_IDX_HOST_IP_ADDRESS_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord> KEY_HOST_VNET_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord> KEY_HOST_VNET_MAP_IDX_HOST_VNET_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_IDX_IMAGE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_IDX_INSTANCE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_IDX_LINK_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_IDX_IP_ADDRESS_UUID = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_IDX_IP_ADDRESS_NIC_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord> KEY_IP_ASSOCIATION_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord> KEY_IP_ASSOCIATION_IDX_IP_ASSOCIATION_UUID = createUniqueKey(io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpPoolRecord> KEY_IP_POOL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL, io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpPoolRecord> KEY_IP_POOL_IDX_IP_POOL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL, io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_IDX_MOUNT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_IDX_NETWORK_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord> KEY_NETWORK_SERVICE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord> KEY_NETWORK_SERVICE_IDX_NETWORK_SERVICE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> KEY_NETWORK_SERVICE_PROVIDER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> KEY_NETWORK_SERVICE_PROVIDER_IDX_NETWORK_SERVICE_PROVIDER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord> KEY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord> KEY_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_IDX_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_IDX_NIC_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.OfferingRecord> KEY_OFFERING_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.OfferingTable.OFFERING, io.cattle.platform.core.model.tables.OfferingTable.OFFERING.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.OfferingRecord> KEY_OFFERING_IDX_OFFERING_UUID = createUniqueKey(io.cattle.platform.core.model.tables.OfferingTable.OFFERING, io.cattle.platform.core.model.tables.OfferingTable.OFFERING.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_IDX_PHYSICAL_HOST_UUID = createUniqueKey(io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_IDX_PORT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID = createUniqueKey(io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> KEY_PROCESS_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_POOL_ITEM2 = createUniqueKey(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.POOL_TYPE, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.POOL_ID, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.QUALIFIER, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ITEM);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SettingRecord> KEY_SETTING_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SettingTable.SETTING, io.cattle.platform.core.model.tables.SettingTable.SETTING.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_IDX_SUBNET_UUID = createUniqueKey(io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord> KEY_SUBNET_VNET_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord> KEY_SUBNET_VNET_MAP_IDX_SUBNET_VNET_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.TaskTable.TASK, io.cattle.platform.core.model.tables.TaskTable.TASK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_IDX_TASK_NAME = createUniqueKey(io.cattle.platform.core.model.tables.TaskTable.TASK, io.cattle.platform.core.model.tables.TaskTable.TASK.NAME);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord> KEY_TASK_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VnetRecord> KEY_VNET_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.VnetTable.VNET, io.cattle.platform.core.model.tables.VnetTable.VNET.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VnetRecord> KEY_VNET_IDX_VNET_UUID = createUniqueKey(io.cattle.platform.core.model.tables.VnetTable.VNET, io.cattle.platform.core.model.tables.VnetTable.VNET.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_IDX_VOLUME_UUID = createUniqueKey(io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_IDX_ZONE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.UUID);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AGENT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.AgentGroupRecord> FK_AGENT__AGENT_GROUP_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_GROUP_PRIMARY, io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.AGENT_GROUP_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_AGENT__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentGroupRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AGENT_GROUP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP, io.cattle.platform.core.model.tables.AgentGroupTable.AGENT_GROUP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.ConfigItemRecord> FK_CONFIG_ITEM__NAME = createForeignKey(io.cattle.platform.core.model.Keys.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.NAME);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_CONFIG_ITEM__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CREDENTIAL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_CREDENTIAL_INSTANCE_MAP__CREDENTIAL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_CREDENTIAL_PRIMARY, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.CREDENTIAL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_CREDENTIAL_INSTANCE_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_EXTERNAL_HANDLER_PRIMARY, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.EXTERNAL_HANDLER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.EXTERNAL_HANDLER_PROCESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_GENERIC_OBJECT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_HOST__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_HOST__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.PhysicalHostRecord> FK_HOST__PHYSICAL_HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_PHYSICAL_HOST_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.PHYSICAL_HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_IP_ADDRESS_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_HOST_IP_ADDRESS_MAP__IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_VNET_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostVnetMapRecord, io.cattle.platform.core.model.tables.records.VnetRecord> FK_HOST_VNET_MAP__VNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VNET_PRIMARY, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP, io.cattle.platform.core.model.tables.HostVnetMapTable.HOST_VNET_MAP.VNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IMAGE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IMAGE_PRIMARY, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_INSTANCE__IMAGE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IMAGE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.OfferingRecord> FK_INSTANCE__OFFERING_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_OFFERING_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.OFFERING_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_INSTANCE__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_INSTANCE__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_HOST_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_INSTANCE_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_LINK__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__TARGET_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.TARGET_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_ADDRESS__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_IP_ADDRESS__SUBNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SUBNET_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.SUBNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_IP_ADDRESS__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.IpPoolRecord> FK_IP_ADDRESS__IP_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_POOL_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.IP_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS_NIC_MAP__IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.NicRecord> FK_IP_ADDRESS_NIC_MAP__NIC_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NIC_PRIMARY, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.NIC_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_ASSOCIATION__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ASSOCIATION__IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION.IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAssociationRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ASSOCIATION__CHILD_IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION, io.cattle.platform.core.model.tables.IpAssociationTable.IP_ASSOCIATION.CHILD_IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpPoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_POOL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL, io.cattle.platform.core.model.tables.IpPoolTable.IP_POOL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_MOUNT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_MOUNT__VOLUME_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_PRIMARY, io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_MOUNT__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK_SERVICE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NETWORK_SERVICE__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceRecord, io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> FK_NETWORK_SERVICE__NETWORK_SERVICE_PROVIDER_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_SERVICE_PROVIDER_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE, io.cattle.platform.core.model.tables.NetworkServiceTable.NETWORK_SERVICE.NETWORK_SERVICE_PROVIDER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK_SERVICE_PROVIDER__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NETWORK_SERVICE_PROVIDER__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER, io.cattle.platform.core.model.tables.NetworkServiceProviderTable.NETWORK_SERVICE_PROVIDER.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord, io.cattle.platform.core.model.tables.records.NetworkServiceProviderRecord> FK_NSPIM_NETWORK_SERVICE_PROVIDER_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_SERVICE_PROVIDER_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP.NETWORK_SERVICE_PROVIDER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkServiceProviderInstanceMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_NETWORK_SERVICE_PROVIDER_INSTANCE_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP, io.cattle.platform.core.model.tables.NetworkServiceProviderInstanceMapTable.NETWORK_SERVICE_PROVIDER_INSTANCE_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NIC__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_NIC__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NIC__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_NIC__SUBNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SUBNET_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.SUBNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.VnetRecord> FK_NIC__VNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VNET_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.VNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.OfferingRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_OFFERING__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.OfferingTable.OFFERING, io.cattle.platform.core.model.tables.OfferingTable.OFFERING.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PHYSICAL_HOST__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PORT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_PORT__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PUBLIC_IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.PUBLIC_IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PRIVATE_IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.PRIVATE_IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_PROCESS_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.PROCESS_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_RESOURCE_POOL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_STORAGE_POOL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_STORAGE_POOL__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_STORAGE_POOL__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_STORAGE_POOL_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SUBNET__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_SUBNET__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.IpPoolRecord> FK_SUBNET__POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_POOL_PRIMARY, io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.IP_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_SUBNET_VNET_MAP__SUBNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SUBNET_PRIMARY, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP.SUBNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetVnetMapRecord, io.cattle.platform.core.model.tables.records.VnetRecord> FK_SUBNET_VNET_MAP__VNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VNET_PRIMARY, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP, io.cattle.platform.core.model.tables.SubnetVnetMapTable.SUBNET_VNET_MAP.VNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, io.cattle.platform.core.model.tables.records.TaskRecord> FK_TASK_INSTANCE__TASK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_TASK_PRIMARY, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE.TASK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VnetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VNET__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.VnetTable.VNET, io.cattle.platform.core.model.tables.VnetTable.VNET.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VnetRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_VNET__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.VnetTable.VNET, io.cattle.platform.core.model.tables.VnetTable.VNET.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VOLUME__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_VOLUME__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_VOLUME__IMAGE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IMAGE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.OfferingRecord> FK_VOLUME__OFFERING_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_OFFERING_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.OFFERING_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_VOLUME__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_PRIMARY, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ZoneRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ZONE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.ACCOUNT_ID);
	}
}
