/**
 * This class is generated by jOOQ
 */
package io.cattle.platform.core.model;

/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the <code>cattle</code> 
 * schema
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AccountRecord, java.lang.Long> IDENTITY_ACCOUNT = Identities0.IDENTITY_ACCOUNT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AccountLinkRecord, java.lang.Long> IDENTITY_ACCOUNT_LINK = Identities0.IDENTITY_ACCOUNT_LINK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AgentRecord, java.lang.Long> IDENTITY_AGENT = Identities0.IDENTITY_AGENT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> IDENTITY_AUDIT_LOG = Identities0.IDENTITY_AUDIT_LOG;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.AuthTokenRecord, java.lang.Long> IDENTITY_AUTH_TOKEN = Identities0.IDENTITY_AUTH_TOKEN;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.BackupRecord, java.lang.Long> IDENTITY_BACKUP = Identities0.IDENTITY_BACKUP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.BackupTargetRecord, java.lang.Long> IDENTITY_BACKUP_TARGET = Identities0.IDENTITY_BACKUP_TARGET;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.CertificateRecord, java.lang.Long> IDENTITY_CERTIFICATE = Identities0.IDENTITY_CERTIFICATE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord, java.lang.Long> IDENTITY_CLUSTER_HOST_MAP = Identities0.IDENTITY_CLUSTER_HOST_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ClusterMembershipRecord, java.lang.Long> IDENTITY_CLUSTER_MEMBERSHIP = Identities0.IDENTITY_CLUSTER_MEMBERSHIP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemRecord, java.lang.Long> IDENTITY_CONFIG_ITEM = Identities0.IDENTITY_CONFIG_ITEM;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, java.lang.Long> IDENTITY_CONFIG_ITEM_STATUS = Identities0.IDENTITY_CONFIG_ITEM_STATUS;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ContainerEventRecord, java.lang.Long> IDENTITY_CONTAINER_EVENT = Identities0.IDENTITY_CONTAINER_EVENT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialRecord, java.lang.Long> IDENTITY_CREDENTIAL = Identities0.IDENTITY_CREDENTIAL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, java.lang.Long> IDENTITY_CREDENTIAL_INSTANCE_MAP = Identities0.IDENTITY_CREDENTIAL_INSTANCE_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.DataRecord, java.lang.Long> IDENTITY_DATA = Identities0.IDENTITY_DATA;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord, java.lang.Long> IDENTITY_DEPLOYMENT_UNIT = Identities0.IDENTITY_DEPLOYMENT_UNIT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord, java.lang.Long> IDENTITY_DYNAMIC_SCHEMA = Identities0.IDENTITY_DYNAMIC_SCHEMA;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.DynamicSchemaRoleRecord, java.lang.Long> IDENTITY_DYNAMIC_SCHEMA_ROLE = Identities0.IDENTITY_DYNAMIC_SCHEMA_ROLE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.StackRecord, java.lang.Long> IDENTITY_STACK = Identities0.IDENTITY_STACK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalEventRecord, java.lang.Long> IDENTITY_EXTERNAL_EVENT = Identities0.IDENTITY_EXTERNAL_EVENT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER = Identities0.IDENTITY_EXTERNAL_HANDLER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP = Identities0.IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_PROCESS = Identities0.IDENTITY_EXTERNAL_HANDLER_PROCESS;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.GenericObjectRecord, java.lang.Long> IDENTITY_GENERIC_OBJECT = Identities0.IDENTITY_GENERIC_OBJECT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord, java.lang.Long> IDENTITY_HEALTHCHECK_INSTANCE = Identities0.IDENTITY_HEALTHCHECK_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, java.lang.Long> IDENTITY_HEALTHCHECK_INSTANCE_HOST_MAP = Identities0.IDENTITY_HEALTHCHECK_INSTANCE_HOST_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostRecord, java.lang.Long> IDENTITY_HOST = Identities0.IDENTITY_HOST;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, java.lang.Long> IDENTITY_HOST_IP_ADDRESS_MAP = Identities0.IDENTITY_HOST_IP_ADDRESS_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, java.lang.Long> IDENTITY_HOST_LABEL_MAP = Identities0.IDENTITY_HOST_LABEL_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostTemplateRecord, java.lang.Long> IDENTITY_HOST_TEMPLATE = Identities0.IDENTITY_HOST_TEMPLATE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageRecord, java.lang.Long> IDENTITY_IMAGE = Identities0.IDENTITY_IMAGE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, java.lang.Long> IDENTITY_IMAGE_STORAGE_POOL_MAP = Identities0.IDENTITY_IMAGE_STORAGE_POOL_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceRecord, java.lang.Long> IDENTITY_INSTANCE = Identities0.IDENTITY_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, java.lang.Long> IDENTITY_INSTANCE_HOST_MAP = Identities0.IDENTITY_INSTANCE_HOST_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, java.lang.Long> IDENTITY_INSTANCE_LABEL_MAP = Identities0.IDENTITY_INSTANCE_LABEL_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, java.lang.Long> IDENTITY_INSTANCE_LINK = Identities0.IDENTITY_INSTANCE_LINK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord, java.lang.Long> IDENTITY_INSTANCE_REVISION = Identities0.IDENTITY_INSTANCE_REVISION;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressRecord, java.lang.Long> IDENTITY_IP_ADDRESS = Identities0.IDENTITY_IP_ADDRESS;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, java.lang.Long> IDENTITY_IP_ADDRESS_NIC_MAP = Identities0.IDENTITY_IP_ADDRESS_NIC_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.LabelRecord, java.lang.Long> IDENTITY_LABEL = Identities0.IDENTITY_LABEL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.MachineDriverRecord, java.lang.Long> IDENTITY_MACHINE_DRIVER = Identities0.IDENTITY_MACHINE_DRIVER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.MountRecord, java.lang.Long> IDENTITY_MOUNT = Identities0.IDENTITY_MOUNT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkRecord, java.lang.Long> IDENTITY_NETWORK = Identities0.IDENTITY_NETWORK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkDriverRecord, java.lang.Long> IDENTITY_NETWORK_DRIVER = Identities0.IDENTITY_NETWORK_DRIVER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.NicRecord, java.lang.Long> IDENTITY_NIC = Identities0.IDENTITY_NIC;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, java.lang.Long> IDENTITY_PHYSICAL_HOST = Identities0.IDENTITY_PHYSICAL_HOST;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.PortRecord, java.lang.Long> IDENTITY_PORT = Identities0.IDENTITY_PORT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, java.lang.Long> IDENTITY_PROCESS_EXECUTION = Identities0.IDENTITY_PROCESS_EXECUTION;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord, java.lang.Long> IDENTITY_PROCESS_INSTANCE = Identities0.IDENTITY_PROCESS_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProjectMemberRecord, java.lang.Long> IDENTITY_PROJECT_MEMBER = Identities0.IDENTITY_PROJECT_MEMBER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord, java.lang.Long> IDENTITY_PROJECT_TEMPLATE = Identities0.IDENTITY_PROJECT_TEMPLATE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, java.lang.Long> IDENTITY_RESOURCE_POOL = Identities0.IDENTITY_RESOURCE_POOL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord, java.lang.Long> IDENTITY_SCHEDULED_UPGRADE = Identities0.IDENTITY_SCHEDULED_UPGRADE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SecretRecord, java.lang.Long> IDENTITY_SECRET = Identities0.IDENTITY_SECRET;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceRecord, java.lang.Long> IDENTITY_SERVICE = Identities0.IDENTITY_SERVICE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, java.lang.Long> IDENTITY_SERVICE_CONSUME_MAP = Identities0.IDENTITY_SERVICE_CONSUME_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceEventRecord, java.lang.Long> IDENTITY_SERVICE_EVENT = Identities0.IDENTITY_SERVICE_EVENT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, java.lang.Long> IDENTITY_SERVICE_EXPOSE_MAP = Identities0.IDENTITY_SERVICE_EXPOSE_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceIndexRecord, java.lang.Long> IDENTITY_SERVICE_INDEX = Identities0.IDENTITY_SERVICE_INDEX;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceLogRecord, java.lang.Long> IDENTITY_SERVICE_LOG = Identities0.IDENTITY_SERVICE_LOG;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord, java.lang.Long> IDENTITY_SERVICE_REVISION = Identities0.IDENTITY_SERVICE_REVISION;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SettingRecord, java.lang.Long> IDENTITY_SETTING = Identities0.IDENTITY_SETTING;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SnapshotRecord, java.lang.Long> IDENTITY_SNAPSHOT = Identities0.IDENTITY_SNAPSHOT;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.StorageDriverRecord, java.lang.Long> IDENTITY_STORAGE_DRIVER = Identities0.IDENTITY_STORAGE_DRIVER;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolRecord, java.lang.Long> IDENTITY_STORAGE_POOL = Identities0.IDENTITY_STORAGE_POOL;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, java.lang.Long> IDENTITY_STORAGE_POOL_HOST_MAP = Identities0.IDENTITY_STORAGE_POOL_HOST_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.SubnetRecord, java.lang.Long> IDENTITY_SUBNET = Identities0.IDENTITY_SUBNET;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskRecord, java.lang.Long> IDENTITY_TASK = Identities0.IDENTITY_TASK;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, java.lang.Long> IDENTITY_TASK_INSTANCE = Identities0.IDENTITY_TASK_INSTANCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.UserPreferenceRecord, java.lang.Long> IDENTITY_USER_PREFERENCE = Identities0.IDENTITY_USER_PREFERENCE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeRecord, java.lang.Long> IDENTITY_VOLUME = Identities0.IDENTITY_VOLUME;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, java.lang.Long> IDENTITY_VOLUME_STORAGE_POOL_MAP = Identities0.IDENTITY_VOLUME_STORAGE_POOL_MAP;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord, java.lang.Long> IDENTITY_VOLUME_TEMPLATE = Identities0.IDENTITY_VOLUME_TEMPLATE;
	public static final org.jooq.Identity<io.cattle.platform.core.model.tables.records.ZoneRecord, java.lang.Long> IDENTITY_ZONE = Identities0.IDENTITY_ZONE;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_PRIMARY = UniqueKeys0.KEY_ACCOUNT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_IDX_ACCOUNT_UUID = UniqueKeys0.KEY_ACCOUNT_IDX_ACCOUNT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord> KEY_ACCOUNT_LINK_PRIMARY = UniqueKeys0.KEY_ACCOUNT_LINK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord> KEY_ACCOUNT_LINK_IDX_ACCOUNT_LINK_UUID = UniqueKeys0.KEY_ACCOUNT_LINK_IDX_ACCOUNT_LINK_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_PRIMARY = UniqueKeys0.KEY_AGENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_IDX_AGENT_UUID = UniqueKeys0.KEY_AGENT_IDX_AGENT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuditLogRecord> KEY_AUDIT_LOG_PRIMARY = UniqueKeys0.KEY_AUDIT_LOG_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord> KEY_AUTH_TOKEN_PRIMARY = UniqueKeys0.KEY_AUTH_TOKEN_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord> KEY_AUTH_TOKEN_KEY = UniqueKeys0.KEY_AUTH_TOKEN_KEY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord> KEY_AUTH_TOKEN_IDX_AUTH_TOKEN_KEY = UniqueKeys0.KEY_AUTH_TOKEN_IDX_AUTH_TOKEN_KEY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupRecord> KEY_BACKUP_PRIMARY = UniqueKeys0.KEY_BACKUP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupRecord> KEY_BACKUP_IDX_BACKUP_UUID = UniqueKeys0.KEY_BACKUP_IDX_BACKUP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupTargetRecord> KEY_BACKUP_TARGET_PRIMARY = UniqueKeys0.KEY_BACKUP_TARGET_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupTargetRecord> KEY_BACKUP_TARGET_IDX_BACKUP_TARGET_UUID = UniqueKeys0.KEY_BACKUP_TARGET_IDX_BACKUP_TARGET_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CertificateRecord> KEY_CERTIFICATE_PRIMARY = UniqueKeys0.KEY_CERTIFICATE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CertificateRecord> KEY_CERTIFICATE_IDX_CERT_DATA_UUID = UniqueKeys0.KEY_CERTIFICATE_IDX_CERT_DATA_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord> KEY_CLUSTER_HOST_MAP_PRIMARY = UniqueKeys0.KEY_CLUSTER_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord> KEY_CLUSTER_HOST_MAP_IDX_CLUSTER_HOST_MAP_UUID = UniqueKeys0.KEY_CLUSTER_HOST_MAP_IDX_CLUSTER_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterMembershipRecord> KEY_CLUSTER_MEMBERSHIP_PRIMARY = UniqueKeys0.KEY_CLUSTER_MEMBERSHIP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterMembershipRecord> KEY_CLUSTER_MEMBERSHIP_IDX_CLUSTER_MEMBERSHIP_UUID = UniqueKeys0.KEY_CLUSTER_MEMBERSHIP_IDX_CLUSTER_MEMBERSHIP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_PRIMARY = UniqueKeys0.KEY_CONFIG_ITEM_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME = UniqueKeys0.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_PRIMARY = UniqueKeys0.KEY_CONFIG_ITEM_STATUS_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_RESOURCE = UniqueKeys0.KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_RESOURCE;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ContainerEventRecord> KEY_CONTAINER_EVENT_PRIMARY = UniqueKeys0.KEY_CONTAINER_EVENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_PRIMARY = UniqueKeys0.KEY_CREDENTIAL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_IDX_CREDENTIAL_UUID = UniqueKeys0.KEY_CREDENTIAL_IDX_CREDENTIAL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_PRIMARY = UniqueKeys0.KEY_CREDENTIAL_INSTANCE_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_IDX_CREDENTIAL_INSTANCE_MAP_UUID = UniqueKeys0.KEY_CREDENTIAL_INSTANCE_MAP_IDX_CREDENTIAL_INSTANCE_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_PRIMARY = UniqueKeys0.KEY_DATA_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_IDX_DATA_NAME = UniqueKeys0.KEY_DATA_IDX_DATA_NAME;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = UniqueKeys0.KEY_DATABASECHANGELOGLOCK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> KEY_DEPLOYMENT_UNIT_PRIMARY = UniqueKeys0.KEY_DEPLOYMENT_UNIT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> KEY_DEPLOYMENT_UNIT_IDX_DEPLOYMENT_UNIT_UUID = UniqueKeys0.KEY_DEPLOYMENT_UNIT_IDX_DEPLOYMENT_UNIT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord> KEY_DYNAMIC_SCHEMA_PRIMARY = UniqueKeys0.KEY_DYNAMIC_SCHEMA_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord> KEY_DYNAMIC_SCHEMA_IDX_DYNAMIC_SCHEMA_UUID = UniqueKeys0.KEY_DYNAMIC_SCHEMA_IDX_DYNAMIC_SCHEMA_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRoleRecord> KEY_DYNAMIC_SCHEMA_ROLE_PRIMARY = UniqueKeys0.KEY_DYNAMIC_SCHEMA_ROLE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StackRecord> KEY_ENVIRONMENT_PRIMARY = UniqueKeys0.KEY_ENVIRONMENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StackRecord> KEY_ENVIRONMENT_IDX_ENVIRONMENT_UUID = UniqueKeys0.KEY_ENVIRONMENT_IDX_ENVIRONMENT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord> KEY_EXTERNAL_EVENT_PRIMARY = UniqueKeys0.KEY_EXTERNAL_EVENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord> KEY_EXTERNAL_EVENT_IDX_EXTERNAL_EVENT_UUID = UniqueKeys0.KEY_EXTERNAL_EVENT_IDX_EXTERNAL_EVENT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY = UniqueKeys0.KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID = UniqueKeys0.KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_PRIMARY = UniqueKeys0.KEY_GENERIC_OBJECT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_IDX_GENERIC_OBJECT_UUID = UniqueKeys0.KEY_GENERIC_OBJECT_IDX_GENERIC_OBJECT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> KEY_HEALTHCHECK_INSTANCE_PRIMARY = UniqueKeys0.KEY_HEALTHCHECK_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> KEY_HEALTHCHECK_INSTANCE_IDX_HEALTHCHECK_INSTANCE_UUID = UniqueKeys0.KEY_HEALTHCHECK_INSTANCE_IDX_HEALTHCHECK_INSTANCE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord> KEY_HEALTHCHECK_INSTANCE_HOST_MAP_PRIMARY = UniqueKeys0.KEY_HEALTHCHECK_INSTANCE_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord> KEY_HEALTHCHECK_INSTANCE_HOST_MAP_IDX_HEALTHCHECK_INSTANCE_HOST_MAP_UUID = UniqueKeys0.KEY_HEALTHCHECK_INSTANCE_HOST_MAP_IDX_HEALTHCHECK_INSTANCE_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_PRIMARY = UniqueKeys0.KEY_HOST_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_IDX_HOST_UUID = UniqueKeys0.KEY_HOST_IDX_HOST_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_PRIMARY = UniqueKeys0.KEY_HOST_IP_ADDRESS_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_IDX_HOST_IP_ADDRESS_MAP_UUID = UniqueKeys0.KEY_HOST_IP_ADDRESS_MAP_IDX_HOST_IP_ADDRESS_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord> KEY_HOST_LABEL_MAP_PRIMARY = UniqueKeys0.KEY_HOST_LABEL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord> KEY_HOST_LABEL_MAP_IDX_HOST_LABEL_MAP_UUID = UniqueKeys0.KEY_HOST_LABEL_MAP_IDX_HOST_LABEL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostTemplateRecord> KEY_HOST_TEMPLATE_PRIMARY = UniqueKeys0.KEY_HOST_TEMPLATE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostTemplateRecord> KEY_HOST_TEMPLATE_IDX_HOST_TEMPLATE_UUID = UniqueKeys0.KEY_HOST_TEMPLATE_IDX_HOST_TEMPLATE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_PRIMARY = UniqueKeys0.KEY_IMAGE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_IDX_IMAGE_UUID = UniqueKeys0.KEY_IMAGE_IDX_IMAGE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY = UniqueKeys0.KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID = UniqueKeys0.KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_PRIMARY = UniqueKeys0.KEY_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_IDX_INSTANCE_UUID = UniqueKeys0.KEY_INSTANCE_IDX_INSTANCE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_PRIMARY = UniqueKeys0.KEY_INSTANCE_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID = UniqueKeys0.KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord> KEY_INSTANCE_LABEL_MAP_PRIMARY = UniqueKeys0.KEY_INSTANCE_LABEL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord> KEY_INSTANCE_LABEL_MAP_IDX_INSTANCE_LABEL_MAP_UUID = UniqueKeys0.KEY_INSTANCE_LABEL_MAP_IDX_INSTANCE_LABEL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_PRIMARY = UniqueKeys0.KEY_INSTANCE_LINK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_IDX_LINK_UUID = UniqueKeys0.KEY_INSTANCE_LINK_IDX_LINK_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord> KEY_INSTANCE_REVISION_PRIMARY = UniqueKeys0.KEY_INSTANCE_REVISION_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord> KEY_INSTANCE_REVISION_IDX_INSTANCE_REVISION_UUID = UniqueKeys0.KEY_INSTANCE_REVISION_IDX_INSTANCE_REVISION_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_PRIMARY = UniqueKeys0.KEY_IP_ADDRESS_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_IDX_IP_ADDRESS_UUID = UniqueKeys0.KEY_IP_ADDRESS_IDX_IP_ADDRESS_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_PRIMARY = UniqueKeys0.KEY_IP_ADDRESS_NIC_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_IDX_IP_ADDRESS_NIC_MAP_UUID = UniqueKeys0.KEY_IP_ADDRESS_NIC_MAP_IDX_IP_ADDRESS_NIC_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.LabelRecord> KEY_LABEL_PRIMARY = UniqueKeys0.KEY_LABEL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.LabelRecord> KEY_LABEL_IDX_LABEL_UUID = UniqueKeys0.KEY_LABEL_IDX_LABEL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MachineDriverRecord> KEY_MACHINE_DRIVER_PRIMARY = UniqueKeys0.KEY_MACHINE_DRIVER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MachineDriverRecord> KEY_MACHINE_DRIVER_IDX_MACHINE_DRIVER_UUID = UniqueKeys0.KEY_MACHINE_DRIVER_IDX_MACHINE_DRIVER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_PRIMARY = UniqueKeys0.KEY_MOUNT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_IDX_MOUNT_UUID = UniqueKeys0.KEY_MOUNT_IDX_MOUNT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_PRIMARY = UniqueKeys0.KEY_NETWORK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_IDX_NETWORK_UUID = UniqueKeys0.KEY_NETWORK_IDX_NETWORK_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord> KEY_NETWORK_DRIVER_PRIMARY = UniqueKeys0.KEY_NETWORK_DRIVER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord> KEY_NETWORK_DRIVER_IDX_NETWORK_DRIVER_UUID = UniqueKeys0.KEY_NETWORK_DRIVER_IDX_NETWORK_DRIVER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_PRIMARY = UniqueKeys0.KEY_NIC_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_IDX_NIC_UUID = UniqueKeys0.KEY_NIC_IDX_NIC_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_PRIMARY = UniqueKeys0.KEY_PHYSICAL_HOST_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_IDX_PHYSICAL_HOST_UUID = UniqueKeys0.KEY_PHYSICAL_HOST_IDX_PHYSICAL_HOST_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_PRIMARY = UniqueKeys0.KEY_PORT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_IDX_PORT_UUID = UniqueKeys0.KEY_PORT_IDX_PORT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_PRIMARY = UniqueKeys0.KEY_PROCESS_EXECUTION_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID = UniqueKeys0.KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> KEY_PROCESS_INSTANCE_PRIMARY = UniqueKeys0.KEY_PROCESS_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord> KEY_PROJECT_MEMBER_PRIMARY = UniqueKeys0.KEY_PROJECT_MEMBER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord> KEY_PROJECT_MEMBER_IDX_PROJECT_MEMBER_UUID = UniqueKeys0.KEY_PROJECT_MEMBER_IDX_PROJECT_MEMBER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord> KEY_PROJECT_TEMPLATE_PRIMARY = UniqueKeys0.KEY_PROJECT_TEMPLATE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord> KEY_PROJECT_TEMPLATE_IDX_PROJECT_TEMPLATE_UUID = UniqueKeys0.KEY_PROJECT_TEMPLATE_IDX_PROJECT_TEMPLATE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_PRIMARY = UniqueKeys0.KEY_RESOURCE_POOL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID = UniqueKeys0.KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_POOL_ITEM2 = UniqueKeys0.KEY_RESOURCE_POOL_IDX_POOL_ITEM2;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord> KEY_SCHEDULED_UPGRADE_PRIMARY = UniqueKeys0.KEY_SCHEDULED_UPGRADE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord> KEY_SCHEDULED_UPGRADE_IDX_SCHEDULED_UPGRADE_UUID = UniqueKeys0.KEY_SCHEDULED_UPGRADE_IDX_SCHEDULED_UPGRADE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SecretRecord> KEY_SECRET_PRIMARY = UniqueKeys0.KEY_SECRET_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SecretRecord> KEY_SECRET_IDX_SECRET_UUID = UniqueKeys0.KEY_SECRET_IDX_SECRET_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRecord> KEY_SERVICE_PRIMARY = UniqueKeys0.KEY_SERVICE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRecord> KEY_SERVICE_IDX_SERVICE_UUID = UniqueKeys0.KEY_SERVICE_IDX_SERVICE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord> KEY_SERVICE_CONSUME_MAP_PRIMARY = UniqueKeys0.KEY_SERVICE_CONSUME_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord> KEY_SERVICE_CONSUME_MAP_IDX_SERVICE_CONSUME_MAP_UUID = UniqueKeys0.KEY_SERVICE_CONSUME_MAP_IDX_SERVICE_CONSUME_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord> KEY_SERVICE_EVENT_PRIMARY = UniqueKeys0.KEY_SERVICE_EVENT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord> KEY_SERVICE_EVENT_IDX_SERVICE_EVENT_UUID = UniqueKeys0.KEY_SERVICE_EVENT_IDX_SERVICE_EVENT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord> KEY_SERVICE_EXPOSE_MAP_PRIMARY = UniqueKeys0.KEY_SERVICE_EXPOSE_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord> KEY_SERVICE_EXPOSE_MAP_IDX_SERVICE_INSTANCE_MAP_UUID = UniqueKeys0.KEY_SERVICE_EXPOSE_MAP_IDX_SERVICE_INSTANCE_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord> KEY_SERVICE_INDEX_PRIMARY = UniqueKeys0.KEY_SERVICE_INDEX_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord> KEY_SERVICE_INDEX_IDX_SERVICE_SUFFIX_UUID = UniqueKeys0.KEY_SERVICE_INDEX_IDX_SERVICE_SUFFIX_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord> KEY_SERVICE_LOG_PRIMARY = UniqueKeys0.KEY_SERVICE_LOG_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> KEY_SERVICE_REVISION_PRIMARY = UniqueKeys0.KEY_SERVICE_REVISION_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> KEY_SERVICE_REVISION_IDX_SERVICE_REVISION_UUID = UniqueKeys0.KEY_SERVICE_REVISION_IDX_SERVICE_REVISION_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SettingRecord> KEY_SETTING_PRIMARY = UniqueKeys0.KEY_SETTING_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SnapshotRecord> KEY_SNAPSHOT_PRIMARY = UniqueKeys0.KEY_SNAPSHOT_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SnapshotRecord> KEY_SNAPSHOT_IDX_SNAPSHOT_UUID = UniqueKeys0.KEY_SNAPSHOT_IDX_SNAPSHOT_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord> KEY_STORAGE_DRIVER_PRIMARY = UniqueKeys0.KEY_STORAGE_DRIVER_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord> KEY_STORAGE_DRIVER_IDX_STORAGE_DRIVER_UUID = UniqueKeys0.KEY_STORAGE_DRIVER_IDX_STORAGE_DRIVER_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_PRIMARY = UniqueKeys0.KEY_STORAGE_POOL_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID = UniqueKeys0.KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_PRIMARY = UniqueKeys0.KEY_STORAGE_POOL_HOST_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID = UniqueKeys0.KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_PRIMARY = UniqueKeys0.KEY_SUBNET_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_IDX_SUBNET_UUID = UniqueKeys0.KEY_SUBNET_IDX_SUBNET_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_PRIMARY = UniqueKeys0.KEY_TASK_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_IDX_TASK_NAME = UniqueKeys0.KEY_TASK_IDX_TASK_NAME;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord> KEY_TASK_INSTANCE_PRIMARY = UniqueKeys0.KEY_TASK_INSTANCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.UserPreferenceRecord> KEY_USER_PREFERENCE_PRIMARY = UniqueKeys0.KEY_USER_PREFERENCE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.UserPreferenceRecord> KEY_USER_PREFERENCE_IDX_USER_PREFERENCE_UUID = UniqueKeys0.KEY_USER_PREFERENCE_IDX_USER_PREFERENCE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_PRIMARY = UniqueKeys0.KEY_VOLUME_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_IDX_VOLUME_UUID = UniqueKeys0.KEY_VOLUME_IDX_VOLUME_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY = UniqueKeys0.KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID = UniqueKeys0.KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord> KEY_VOLUME_TEMPLATE_PRIMARY = UniqueKeys0.KEY_VOLUME_TEMPLATE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord> KEY_VOLUME_TEMPLATE_IDX_VOLUME_TEMPLATE_UUID = UniqueKeys0.KEY_VOLUME_TEMPLATE_IDX_VOLUME_TEMPLATE_UUID;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_PRIMARY = UniqueKeys0.KEY_ZONE_PRIMARY;
	public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_IDX_ZONE_UUID = UniqueKeys0.KEY_ZONE_IDX_ZONE_UUID;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AccountRecord, io.cattle.platform.core.model.tables.records.ProjectTemplateRecord> FK_ACCOUNT__PROJECT_TEMPLATE_ID = ForeignKeys0.FK_ACCOUNT__PROJECT_TEMPLATE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ACCOUNT_LINK__ACCOUNT_ID = ForeignKeys0.FK_ACCOUNT_LINK__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ACCOUNT_LINK__LINKED_ACCOUNT_ID = ForeignKeys0.FK_ACCOUNT_LINK__LINKED_ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AGENT__ACCOUNT_ID = ForeignKeys0.FK_AGENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_AGENT__ZONE_ID = ForeignKeys0.FK_AGENT__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuditLogRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AUDIT_LOG__ACCOUNT_ID = ForeignKeys0.FK_AUDIT_LOG__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuditLogRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AUDIT_LOG__AUTHENTICATED_AS_ACCOUNT_ID = ForeignKeys0.FK_AUDIT_LOG__AUTHENTICATED_AS_ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AUTH_TOKEN__ACCOUNT_ID = ForeignKeys0.FK_AUTH_TOKEN__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_BACKUP__ACCOUNT_ID = ForeignKeys0.FK_BACKUP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.SnapshotRecord> FK_BACKUP__SNAPSHOT_ID = ForeignKeys0.FK_BACKUP__SNAPSHOT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_BACKUP__VOLUME_ID = ForeignKeys0.FK_BACKUP__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.BackupTargetRecord> FK_BACKUP__BACKUP_TARGET_ID = ForeignKeys0.FK_BACKUP__BACKUP_TARGET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupTargetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_BACKUP_TARGET__ACCOUNT_ID = ForeignKeys0.FK_BACKUP_TARGET__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CertificateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CERT_DATA__ACCOUNT_ID = ForeignKeys0.FK_CERT_DATA__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_CLUSTER_HOST_MAP__HOST_ID = ForeignKeys0.FK_CLUSTER_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_HOST_MAP__HOST_ID = ForeignKeys0.FK_HOST_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.ConfigItemRecord> FK_CONFIG_ITEM__NAME = ForeignKeys0.FK_CONFIG_ITEM__NAME;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_CONFIG_ITEM__AGENT_ID = ForeignKeys0.FK_CONFIG_ITEM__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CONFIG_ITEM__ACCOUNT_ID = ForeignKeys0.FK_CONFIG_ITEM__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_CONFIG_ITEM__SERVICE_ID = ForeignKeys0.FK_CONFIG_ITEM__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_CONFIG_ITEM__ENVIRONMENT_ID = ForeignKeys0.FK_CONFIG_ITEM__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_CONFIG_ITEM__HOST_ID = ForeignKeys0.FK_CONFIG_ITEM__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_CONFIG_ITEM__DEPLOYMENT_UNIT_ID = ForeignKeys0.FK_CONFIG_ITEM__DEPLOYMENT_UNIT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ContainerEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CONTAINER_EVENT__ACCOUNT_ID = ForeignKeys0.FK_CONTAINER_EVENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ContainerEventRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_CONTAINER_EVENT__HOST_ID = ForeignKeys0.FK_CONTAINER_EVENT__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CREDENTIAL__ACCOUNT_ID = ForeignKeys0.FK_CREDENTIAL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_CREDENTIAL__REGISTRY_ID = ForeignKeys0.FK_CREDENTIAL__REGISTRY_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_CREDENTIAL_INSTANCE_MAP__CREDENTIAL_ID = ForeignKeys0.FK_CREDENTIAL_INSTANCE_MAP__CREDENTIAL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_CREDENTIAL_INSTANCE_MAP__INSTANCE_ID = ForeignKeys0.FK_CREDENTIAL_INSTANCE_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_DEPLOYMENT_UNIT__ACCOUNT_ID = ForeignKeys0.FK_DEPLOYMENT_UNIT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_DEPLOYMENT_UNIT__SERVICE_ID = ForeignKeys0.FK_DEPLOYMENT_UNIT__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_DYNAMIC_SCHEMA__ACCOUNT_ID = ForeignKeys0.FK_DYNAMIC_SCHEMA__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_DYNAMIC_SCHEMA__SERVICE_ID = ForeignKeys0.FK_DYNAMIC_SCHEMA__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRoleRecord, io.cattle.platform.core.model.tables.records.DynamicSchemaRecord> FK_DYNAMIC_SCHEMA_ROLE_DYNAMIC_SCHEMA_ID = ForeignKeys0.FK_DYNAMIC_SCHEMA_ROLE_DYNAMIC_SCHEMA_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StackRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ENVIRONMENT__ACCOUNT_ID = ForeignKeys0.FK_ENVIRONMENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_EXTERNAL_EVENT__ACCOUNT_ID = ForeignKeys0.FK_EXTERNAL_EVENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_EXTERNAL_EVENT__REPORTED_ACCOUNT_ID = ForeignKeys0.FK_EXTERNAL_EVENT__REPORTED_ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID = ForeignKeys0.FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID = ForeignKeys0.FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_GENERIC_OBJECT__ACCOUNT_ID = ForeignKeys0.FK_GENERIC_OBJECT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HEALTHCHECK_INSTANCE__ACCOUNT_ID = ForeignKeys0.FK_HEALTHCHECK_INSTANCE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_HEALTHCHECK_INSTANCE__INSTANCE_ID = ForeignKeys0.FK_HEALTHCHECK_INSTANCE__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP__ACCOUNT_ID = ForeignKeys0.FK_HEALTHCHECK_INSTANCE_HOST_MAP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP__HEALTHCHECK_INSTANCE_ID = ForeignKeys0.FK_HEALTHCHECK_INSTANCE_HOST_MAP__HEALTHCHECK_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP__HOST_ID = ForeignKeys0.FK_HEALTHCHECK_INSTANCE_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP_INSTANCE_ID = ForeignKeys0.FK_HEALTHCHECK_INSTANCE_HOST_MAP_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST__ACCOUNT_ID = ForeignKeys0.FK_HOST__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_HOST__AGENT_ID = ForeignKeys0.FK_HOST__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_HOST__ZONE_ID = ForeignKeys0.FK_HOST__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.PhysicalHostRecord> FK_HOST__PHYSICAL_HOST_ID = ForeignKeys0.FK_HOST__PHYSICAL_HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_HOST__ENVIRONMENT_ID = ForeignKeys0.FK_HOST__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.HostTemplateRecord> FK_HOST__HOST_TEMPLATE_ID = ForeignKeys0.FK_HOST__HOST_TEMPLATE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_IP_ADDRESS_MAP__HOST_ID = ForeignKeys0.FK_HOST_IP_ADDRESS_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_HOST_IP_ADDRESS_MAP__IP_ADDRESS_ID = ForeignKeys0.FK_HOST_IP_ADDRESS_MAP__IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST_LABEL_MAP__ACCOUNT_ID = ForeignKeys0.FK_HOST_LABEL_MAP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_LABEL_MAP__HOST_ID = ForeignKeys0.FK_HOST_LABEL_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, io.cattle.platform.core.model.tables.records.LabelRecord> FK_HOST_LABEL_MAP__LABEL_ID = ForeignKeys0.FK_HOST_LABEL_MAP__LABEL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostTemplateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST_TEMPLATE__ACCOUNT_ID = ForeignKeys0.FK_HOST_TEMPLATE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IMAGE__ACCOUNT_ID = ForeignKeys0.FK_IMAGE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_IMAGE_REGISTRY_CREDENTIAL_ID = ForeignKeys0.FK_IMAGE_REGISTRY_CREDENTIAL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID = ForeignKeys0.FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE__ACCOUNT_ID = ForeignKeys0.FK_INSTANCE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_INSTANCE__IMAGE_ID = ForeignKeys0.FK_INSTANCE__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_INSTANCE__ZONE_ID = ForeignKeys0.FK_INSTANCE__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_INSTANCE__AGENT_ID = ForeignKeys0.FK_INSTANCE__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_INSTANCE__REGISTRY_CREDENTIAL_ID = ForeignKeys0.FK_INSTANCE__REGISTRY_CREDENTIAL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE__INSTANCE_ID = ForeignKeys0.FK_INSTANCE__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ServiceIndexRecord> FK_INSTANCE__SERVICE_INDEX_ID = ForeignKeys0.FK_INSTANCE__SERVICE_INDEX_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_INSTANCE__SERVICE_ID = ForeignKeys0.FK_INSTANCE__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_INSTANCE__ENVIRONMENT_ID = ForeignKeys0.FK_INSTANCE__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE__REPLACEMENT_FOR = ForeignKeys0.FK_INSTANCE__REPLACEMENT_FOR;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_INSTANCE__DEPLOYMENT_UNIT_ID = ForeignKeys0.FK_INSTANCE__DEPLOYMENT_UNIT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRevisionRecord> FK_INSTANCE__REVISION_ID = ForeignKeys0.FK_INSTANCE__REVISION_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_HOST_MAP__INSTANCE_ID = ForeignKeys0.FK_INSTANCE_HOST_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_INSTANCE_HOST_MAP__HOST_ID = ForeignKeys0.FK_INSTANCE_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE_LABEL_MAP__ACCOUNT_ID = ForeignKeys0.FK_INSTANCE_LABEL_MAP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_LABEL_MAP__INSTANCE_ID = ForeignKeys0.FK_INSTANCE_LABEL_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, io.cattle.platform.core.model.tables.records.LabelRecord> FK_INSTANCE_LABEL_MAP__LABEL_ID = ForeignKeys0.FK_INSTANCE_LABEL_MAP__LABEL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_LINK__ACCOUNT_ID = ForeignKeys0.FK_LINK__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__INSTANCE_ID = ForeignKeys0.FK_LINK__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__TARGET_INSTANCE_ID = ForeignKeys0.FK_LINK__TARGET_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord> FK_LINK__SERVICE_CONSUME_MAP_ID = ForeignKeys0.FK_LINK__SERVICE_CONSUME_MAP_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE_REVISION__ACCOUNT_ID = ForeignKeys0.FK_INSTANCE_REVISION__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_REVISION__INSTANCE_ID = ForeignKeys0.FK_INSTANCE_REVISION__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_ADDRESS__ACCOUNT_ID = ForeignKeys0.FK_IP_ADDRESS__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_IP_ADDRESS__SUBNET_ID = ForeignKeys0.FK_IP_ADDRESS__SUBNET_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_IP_ADDRESS__NETWORK_ID = ForeignKeys0.FK_IP_ADDRESS__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS_NIC_MAP__IP_ADDRESS_ID = ForeignKeys0.FK_IP_ADDRESS_NIC_MAP__IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.NicRecord> FK_IP_ADDRESS_NIC_MAP__NIC_ID = ForeignKeys0.FK_IP_ADDRESS_NIC_MAP__NIC_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.LabelRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_LABEL__ACCOUNT_ID = ForeignKeys0.FK_LABEL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_MOUNT__ACCOUNT_ID = ForeignKeys0.FK_MOUNT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_MOUNT__VOLUME_ID = ForeignKeys0.FK_MOUNT__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_MOUNT__INSTANCE_ID = ForeignKeys0.FK_MOUNT__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK__ACCOUNT_ID = ForeignKeys0.FK_NETWORK__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkRecord, io.cattle.platform.core.model.tables.records.NetworkDriverRecord> FK_NETWORK__NETWORK_DRIVER_ID = ForeignKeys0.FK_NETWORK__NETWORK_DRIVER_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK_DRIVER__ACCOUNT_ID = ForeignKeys0.FK_NETWORK_DRIVER__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_NETWORK_DRIVER__SERVICE_ID = ForeignKeys0.FK_NETWORK_DRIVER__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NIC__ACCOUNT_ID = ForeignKeys0.FK_NIC__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_NIC__INSTANCE_ID = ForeignKeys0.FK_NIC__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NIC__NETWORK_ID = ForeignKeys0.FK_NIC__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PHYSICAL_HOST__ACCOUNT_ID = ForeignKeys0.FK_PHYSICAL_HOST__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_PHYSICAL_HOST__AGENT_ID = ForeignKeys0.FK_PHYSICAL_HOST__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PORT__ACCOUNT_ID = ForeignKeys0.FK_PORT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_PORT__INSTANCE_ID = ForeignKeys0.FK_PORT__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PUBLIC_IP_ADDRESS_ID = ForeignKeys0.FK_IP_ADDRESS__PUBLIC_IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PRIVATE_IP_ADDRESS_ID = ForeignKeys0.FK_IP_ADDRESS__PRIVATE_IP_ADDRESS_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID = ForeignKeys0.FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROCESS_INSTANCE__ACCOUNT_ID = ForeignKeys0.FK_PROCESS_INSTANCE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROJECT_MEMBER__ACCOUNT_ID = ForeignKeys0.FK_PROJECT_MEMBER__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROJECT_MEMBER__PROJECT_ID = ForeignKeys0.FK_PROJECT_MEMBER__PROJECT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROJECT_TEMPLATE__ACCOUNT_ID = ForeignKeys0.FK_PROJECT_TEMPLATE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_RESOURCE_POOL__ACCOUNT_ID = ForeignKeys0.FK_RESOURCE_POOL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SCHEDULED_UPGRADE__ACCOUNT_ID = ForeignKeys0.FK_SCHEDULED_UPGRADE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_SCHEDULED_UPGRADE__ENVIRONMENT_ID = ForeignKeys0.FK_SCHEDULED_UPGRADE__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SecretRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SECRET__ACCOUNT_ID = ForeignKeys0.FK_SECRET__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SecretRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_SECRET__ENVIRONMENT_ID = ForeignKeys0.FK_SECRET__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE__ACCOUNT_ID = ForeignKeys0.FK_SERVICE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_SERVICE__ENVIRONMENT_ID = ForeignKeys0.FK_SERVICE__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> FK_SERVICE__REVISION_ID = ForeignKeys0.FK_SERVICE__REVISION_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> FK_SERVICE__PREVIOUS_REVISION_ID = ForeignKeys0.FK_SERVICE__PREVIOUS_REVISION_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_CONSUME_MAP__SERVICE_ID = ForeignKeys0.FK_SERVICE_CONSUME_MAP__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_CONSUME_MAP__CONSUMED_SERVICE_ID = ForeignKeys0.FK_SERVICE_CONSUME_MAP__CONSUMED_SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_CONSUME_MAP__ACCOUNT_ID = ForeignKeys0.FK_SERVICE_CONSUME_MAP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_EVENT__ACCOUNT_ID = ForeignKeys0.FK_SERVICE_EVENT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_SERVICE_EVENT__HOST_ID = ForeignKeys0.FK_SERVICE_EVENT__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_SERVICE_EVENT__INSTANCE_ID = ForeignKeys0.FK_SERVICE_EVENT__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> FK_SERVICE_EVENT__HEALTHCHECK_INSTANCE_ID = ForeignKeys0.FK_SERVICE_EVENT__HEALTHCHECK_INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_INSTANCE_MAP__SERVICE_ID = ForeignKeys0.FK_SERVICE_INSTANCE_MAP__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_SERVICE_INSTANCE_MAP__INSTANCE_ID = ForeignKeys0.FK_SERVICE_INSTANCE_MAP__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_EXPOSE_MAP__ACCOUNT_ID = ForeignKeys0.FK_SERVICE_EXPOSE_MAP__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_SUFFIX__ACCOUNT_ID = ForeignKeys0.FK_SERVICE_SUFFIX__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_SUFFIX__SERVICE_ID = ForeignKeys0.FK_SERVICE_SUFFIX__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_LOG__ACCOUNT_ID = ForeignKeys0.FK_SERVICE_LOG__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_LOG__SERVICE_ID = ForeignKeys0.FK_SERVICE_LOG__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_SERVICE_LOG__INSTANCE_ID = ForeignKeys0.FK_SERVICE_LOG__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_SERVICE_LOG__DEPLOYMENT_UNIT_ID = ForeignKeys0.FK_SERVICE_LOG__DEPLOYMENT_UNIT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_REVISION__ACCOUNT_ID = ForeignKeys0.FK_SERVICE_REVISION__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_REVISION__SERVICE_ID = ForeignKeys0.FK_SERVICE_REVISION__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SnapshotRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SNAPSHOT__ACCOUNT_ID = ForeignKeys0.FK_SNAPSHOT__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SnapshotRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_SNAPSHOT__VOLUME_ID = ForeignKeys0.FK_SNAPSHOT__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_STORAGE_DRIVER__ACCOUNT_ID = ForeignKeys0.FK_STORAGE_DRIVER__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_STORAGE_DRIVER__SERVICE_ID = ForeignKeys0.FK_STORAGE_DRIVER__SERVICE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_STORAGE_POOL__ACCOUNT_ID = ForeignKeys0.FK_STORAGE_POOL__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_STORAGE_POOL__AGENT_ID = ForeignKeys0.FK_STORAGE_POOL__AGENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_STORAGE_POOL__ZONE_ID = ForeignKeys0.FK_STORAGE_POOL__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.StorageDriverRecord> FK_STORAGE_DRIVER__ID = ForeignKeys0.FK_STORAGE_DRIVER__ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_STORAGE_POOL_HOST_MAP__HOST_ID = ForeignKeys0.FK_STORAGE_POOL_HOST_MAP__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SUBNET__ACCOUNT_ID = ForeignKeys0.FK_SUBNET__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_SUBNET__NETWORK_ID = ForeignKeys0.FK_SUBNET__NETWORK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, io.cattle.platform.core.model.tables.records.TaskRecord> FK_TASK_INSTANCE__TASK_ID = ForeignKeys0.FK_TASK_INSTANCE__TASK_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.UserPreferenceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_USER_PREFERENCE__ACCOUNT_ID = ForeignKeys0.FK_USER_PREFERENCE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VOLUME__ACCOUNT_ID = ForeignKeys0.FK_VOLUME__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_VOLUME__INSTANCE_ID = ForeignKeys0.FK_VOLUME__INSTANCE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_VOLUME__IMAGE_ID = ForeignKeys0.FK_VOLUME__IMAGE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_VOLUME__ZONE_ID = ForeignKeys0.FK_VOLUME__ZONE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_VOLUME__HOST_ID = ForeignKeys0.FK_VOLUME__HOST_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_VOLUME__DEPLOYMENT_UNIT_ID = ForeignKeys0.FK_VOLUME__DEPLOYMENT_UNIT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_VOLUME__ENVIRONMENT_ID = ForeignKeys0.FK_VOLUME__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.VolumeTemplateRecord> FK_VOLUME__VOLUME_TEMPLATE_ID = ForeignKeys0.FK_VOLUME__VOLUME_TEMPLATE_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.StorageDriverRecord> FK_VOLUME__STORAGE_DRIVER_ID = ForeignKeys0.FK_VOLUME__STORAGE_DRIVER_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID = ForeignKeys0.FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID = ForeignKeys0.FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VOLUME_TEMPLATE__ACCOUNT_ID = ForeignKeys0.FK_VOLUME_TEMPLATE__ACCOUNT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_VOLUME_TEMPLATE__ENVIRONMENT_ID = ForeignKeys0.FK_VOLUME_TEMPLATE__ENVIRONMENT_ID;
	public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ZoneRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ZONE__ACCOUNT_ID = ForeignKeys0.FK_ZONE__ACCOUNT_ID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends org.jooq.impl.AbstractKeys {
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AccountRecord, java.lang.Long> IDENTITY_ACCOUNT = createIdentity(io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AccountLinkRecord, java.lang.Long> IDENTITY_ACCOUNT_LINK = createIdentity(io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AgentRecord, java.lang.Long> IDENTITY_AGENT = createIdentity(io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> IDENTITY_AUDIT_LOG = createIdentity(io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.AuthTokenRecord, java.lang.Long> IDENTITY_AUTH_TOKEN = createIdentity(io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN, io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.BackupRecord, java.lang.Long> IDENTITY_BACKUP = createIdentity(io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.BackupTargetRecord, java.lang.Long> IDENTITY_BACKUP_TARGET = createIdentity(io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET, io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.CertificateRecord, java.lang.Long> IDENTITY_CERTIFICATE = createIdentity(io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE, io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord, java.lang.Long> IDENTITY_CLUSTER_HOST_MAP = createIdentity(io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ClusterMembershipRecord, java.lang.Long> IDENTITY_CLUSTER_MEMBERSHIP = createIdentity(io.cattle.platform.core.model.tables.ClusterMembershipTable.CLUSTER_MEMBERSHIP, io.cattle.platform.core.model.tables.ClusterMembershipTable.CLUSTER_MEMBERSHIP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemRecord, java.lang.Long> IDENTITY_CONFIG_ITEM = createIdentity(io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, java.lang.Long> IDENTITY_CONFIG_ITEM_STATUS = createIdentity(io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ContainerEventRecord, java.lang.Long> IDENTITY_CONTAINER_EVENT = createIdentity(io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT, io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialRecord, java.lang.Long> IDENTITY_CREDENTIAL = createIdentity(io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, java.lang.Long> IDENTITY_CREDENTIAL_INSTANCE_MAP = createIdentity(io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.DataRecord, java.lang.Long> IDENTITY_DATA = createIdentity(io.cattle.platform.core.model.tables.DataTable.DATA, io.cattle.platform.core.model.tables.DataTable.DATA.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord, java.lang.Long> IDENTITY_DEPLOYMENT_UNIT = createIdentity(io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord, java.lang.Long> IDENTITY_DYNAMIC_SCHEMA = createIdentity(io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.DynamicSchemaRoleRecord, java.lang.Long> IDENTITY_DYNAMIC_SCHEMA_ROLE = createIdentity(io.cattle.platform.core.model.tables.DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE, io.cattle.platform.core.model.tables.DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.StackRecord, java.lang.Long> IDENTITY_STACK = createIdentity(io.cattle.platform.core.model.tables.StackTable.STACK, io.cattle.platform.core.model.tables.StackTable.STACK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalEventRecord, java.lang.Long> IDENTITY_EXTERNAL_EVENT = createIdentity(io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER = createIdentity(io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP = createIdentity(io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord, java.lang.Long> IDENTITY_EXTERNAL_HANDLER_PROCESS = createIdentity(io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.GenericObjectRecord, java.lang.Long> IDENTITY_GENERIC_OBJECT = createIdentity(io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord, java.lang.Long> IDENTITY_HEALTHCHECK_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, java.lang.Long> IDENTITY_HEALTHCHECK_INSTANCE_HOST_MAP = createIdentity(io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostRecord, java.lang.Long> IDENTITY_HOST = createIdentity(io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, java.lang.Long> IDENTITY_HOST_IP_ADDRESS_MAP = createIdentity(io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, java.lang.Long> IDENTITY_HOST_LABEL_MAP = createIdentity(io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.HostTemplateRecord, java.lang.Long> IDENTITY_HOST_TEMPLATE = createIdentity(io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE, io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageRecord, java.lang.Long> IDENTITY_IMAGE = createIdentity(io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, java.lang.Long> IDENTITY_IMAGE_STORAGE_POOL_MAP = createIdentity(io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceRecord, java.lang.Long> IDENTITY_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, java.lang.Long> IDENTITY_INSTANCE_HOST_MAP = createIdentity(io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, java.lang.Long> IDENTITY_INSTANCE_LABEL_MAP = createIdentity(io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, java.lang.Long> IDENTITY_INSTANCE_LINK = createIdentity(io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord, java.lang.Long> IDENTITY_INSTANCE_REVISION = createIdentity(io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressRecord, java.lang.Long> IDENTITY_IP_ADDRESS = createIdentity(io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, java.lang.Long> IDENTITY_IP_ADDRESS_NIC_MAP = createIdentity(io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.LabelRecord, java.lang.Long> IDENTITY_LABEL = createIdentity(io.cattle.platform.core.model.tables.LabelTable.LABEL, io.cattle.platform.core.model.tables.LabelTable.LABEL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.MachineDriverRecord, java.lang.Long> IDENTITY_MACHINE_DRIVER = createIdentity(io.cattle.platform.core.model.tables.MachineDriverTable.MACHINE_DRIVER, io.cattle.platform.core.model.tables.MachineDriverTable.MACHINE_DRIVER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.MountRecord, java.lang.Long> IDENTITY_MOUNT = createIdentity(io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkRecord, java.lang.Long> IDENTITY_NETWORK = createIdentity(io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NetworkDriverRecord, java.lang.Long> IDENTITY_NETWORK_DRIVER = createIdentity(io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.NicRecord, java.lang.Long> IDENTITY_NIC = createIdentity(io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, java.lang.Long> IDENTITY_PHYSICAL_HOST = createIdentity(io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.PortRecord, java.lang.Long> IDENTITY_PORT = createIdentity(io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, java.lang.Long> IDENTITY_PROCESS_EXECUTION = createIdentity(io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord, java.lang.Long> IDENTITY_PROCESS_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProjectMemberRecord, java.lang.Long> IDENTITY_PROJECT_MEMBER = createIdentity(io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord, java.lang.Long> IDENTITY_PROJECT_TEMPLATE = createIdentity(io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE, io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, java.lang.Long> IDENTITY_RESOURCE_POOL = createIdentity(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord, java.lang.Long> IDENTITY_SCHEDULED_UPGRADE = createIdentity(io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SecretRecord, java.lang.Long> IDENTITY_SECRET = createIdentity(io.cattle.platform.core.model.tables.SecretTable.SECRET, io.cattle.platform.core.model.tables.SecretTable.SECRET.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceRecord, java.lang.Long> IDENTITY_SERVICE = createIdentity(io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, java.lang.Long> IDENTITY_SERVICE_CONSUME_MAP = createIdentity(io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceEventRecord, java.lang.Long> IDENTITY_SERVICE_EVENT = createIdentity(io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, java.lang.Long> IDENTITY_SERVICE_EXPOSE_MAP = createIdentity(io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceIndexRecord, java.lang.Long> IDENTITY_SERVICE_INDEX = createIdentity(io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceLogRecord, java.lang.Long> IDENTITY_SERVICE_LOG = createIdentity(io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord, java.lang.Long> IDENTITY_SERVICE_REVISION = createIdentity(io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SettingRecord, java.lang.Long> IDENTITY_SETTING = createIdentity(io.cattle.platform.core.model.tables.SettingTable.SETTING, io.cattle.platform.core.model.tables.SettingTable.SETTING.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SnapshotRecord, java.lang.Long> IDENTITY_SNAPSHOT = createIdentity(io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.StorageDriverRecord, java.lang.Long> IDENTITY_STORAGE_DRIVER = createIdentity(io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolRecord, java.lang.Long> IDENTITY_STORAGE_POOL = createIdentity(io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, java.lang.Long> IDENTITY_STORAGE_POOL_HOST_MAP = createIdentity(io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.SubnetRecord, java.lang.Long> IDENTITY_SUBNET = createIdentity(io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskRecord, java.lang.Long> IDENTITY_TASK = createIdentity(io.cattle.platform.core.model.tables.TaskTable.TASK, io.cattle.platform.core.model.tables.TaskTable.TASK.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, java.lang.Long> IDENTITY_TASK_INSTANCE = createIdentity(io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.UserPreferenceRecord, java.lang.Long> IDENTITY_USER_PREFERENCE = createIdentity(io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE, io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeRecord, java.lang.Long> IDENTITY_VOLUME = createIdentity(io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, java.lang.Long> IDENTITY_VOLUME_STORAGE_POOL_MAP = createIdentity(io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord, java.lang.Long> IDENTITY_VOLUME_TEMPLATE = createIdentity(io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE.ID);
		public static org.jooq.Identity<io.cattle.platform.core.model.tables.records.ZoneRecord, java.lang.Long> IDENTITY_ZONE = createIdentity(io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.ID);
	}

	private static class UniqueKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountRecord> KEY_ACCOUNT_IDX_ACCOUNT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord> KEY_ACCOUNT_LINK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord> KEY_ACCOUNT_LINK_IDX_ACCOUNT_LINK_UUID = createUniqueKey(io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AgentRecord> KEY_AGENT_IDX_AGENT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuditLogRecord> KEY_AUDIT_LOG_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord> KEY_AUTH_TOKEN_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN, io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord> KEY_AUTH_TOKEN_KEY = createUniqueKey(io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN, io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN.KEY);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord> KEY_AUTH_TOKEN_IDX_AUTH_TOKEN_KEY = createUniqueKey(io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN, io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN.KEY);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupRecord> KEY_BACKUP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupRecord> KEY_BACKUP_IDX_BACKUP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupTargetRecord> KEY_BACKUP_TARGET_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET, io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.BackupTargetRecord> KEY_BACKUP_TARGET_IDX_BACKUP_TARGET_UUID = createUniqueKey(io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET, io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CertificateRecord> KEY_CERTIFICATE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE, io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CertificateRecord> KEY_CERTIFICATE_IDX_CERT_DATA_UUID = createUniqueKey(io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE, io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord> KEY_CLUSTER_HOST_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord> KEY_CLUSTER_HOST_MAP_IDX_CLUSTER_HOST_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterMembershipRecord> KEY_CLUSTER_MEMBERSHIP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ClusterMembershipTable.CLUSTER_MEMBERSHIP, io.cattle.platform.core.model.tables.ClusterMembershipTable.CLUSTER_MEMBERSHIP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ClusterMembershipRecord> KEY_CLUSTER_MEMBERSHIP_IDX_CLUSTER_MEMBERSHIP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ClusterMembershipTable.CLUSTER_MEMBERSHIP, io.cattle.platform.core.model.tables.ClusterMembershipTable.CLUSTER_MEMBERSHIP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemRecord> KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM, io.cattle.platform.core.model.tables.ConfigItemTable.CONFIG_ITEM.NAME);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord> KEY_CONFIG_ITEM_STATUS_IDX_CONFIG_ITEM_STATUS_RESOURCE = createUniqueKey(io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.NAME, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.RESOURCE_TYPE, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.RESOURCE_ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ContainerEventRecord> KEY_CONTAINER_EVENT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT, io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialRecord> KEY_CREDENTIAL_IDX_CREDENTIAL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord> KEY_CREDENTIAL_INSTANCE_MAP_IDX_CREDENTIAL_INSTANCE_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DataTable.DATA, io.cattle.platform.core.model.tables.DataTable.DATA.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DataRecord> KEY_DATA_IDX_DATA_NAME = createUniqueKey(io.cattle.platform.core.model.tables.DataTable.DATA, io.cattle.platform.core.model.tables.DataTable.DATA.NAME);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DatabasechangeloglockRecord> KEY_DATABASECHANGELOGLOCK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DatabasechangeloglockTable.DATABASECHANGELOGLOCK, io.cattle.platform.core.model.tables.DatabasechangeloglockTable.DATABASECHANGELOGLOCK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> KEY_DEPLOYMENT_UNIT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> KEY_DEPLOYMENT_UNIT_IDX_DEPLOYMENT_UNIT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord> KEY_DYNAMIC_SCHEMA_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord> KEY_DYNAMIC_SCHEMA_IDX_DYNAMIC_SCHEMA_UUID = createUniqueKey(io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRoleRecord> KEY_DYNAMIC_SCHEMA_ROLE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE, io.cattle.platform.core.model.tables.DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StackRecord> KEY_ENVIRONMENT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.StackTable.STACK, io.cattle.platform.core.model.tables.StackTable.STACK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StackRecord> KEY_ENVIRONMENT_IDX_ENVIRONMENT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.StackTable.STACK, io.cattle.platform.core.model.tables.StackTable.STACK.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord> KEY_EXTERNAL_EVENT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord> KEY_EXTERNAL_EVENT_IDX_EXTERNAL_EVENT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> KEY_EXTERNAL_HANDLER_IDX_EXTERNAL_HANDLER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER, io.cattle.platform.core.model.tables.ExternalHandlerTable.EXTERNAL_HANDLER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord> KEY_EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP_IDX_EH_EH_PROCESS_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> KEY_EXTERNAL_HANDLER_PROCESS_IDX_EXTERNAL_HANDLER_PROCESS_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS, io.cattle.platform.core.model.tables.ExternalHandlerProcessTable.EXTERNAL_HANDLER_PROCESS.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord> KEY_GENERIC_OBJECT_IDX_GENERIC_OBJECT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> KEY_HEALTHCHECK_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> KEY_HEALTHCHECK_INSTANCE_IDX_HEALTHCHECK_INSTANCE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord> KEY_HEALTHCHECK_INSTANCE_HOST_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord> KEY_HEALTHCHECK_INSTANCE_HOST_MAP_IDX_HEALTHCHECK_INSTANCE_HOST_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostRecord> KEY_HOST_IDX_HOST_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord> KEY_HOST_IP_ADDRESS_MAP_IDX_HOST_IP_ADDRESS_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord> KEY_HOST_LABEL_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord> KEY_HOST_LABEL_MAP_IDX_HOST_LABEL_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostTemplateRecord> KEY_HOST_TEMPLATE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE, io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.HostTemplateRecord> KEY_HOST_TEMPLATE_IDX_HOST_TEMPLATE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE, io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageRecord> KEY_IMAGE_IDX_IMAGE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord> KEY_IMAGE_STORAGE_POOL_MAP_IDX_IMAGE_STORAGE_POOL_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRecord> KEY_INSTANCE_IDX_INSTANCE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord> KEY_INSTANCE_HOST_MAP_IDX_INSTANCE_HOST_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord> KEY_INSTANCE_LABEL_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord> KEY_INSTANCE_LABEL_MAP_IDX_INSTANCE_LABEL_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord> KEY_INSTANCE_LINK_IDX_LINK_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord> KEY_INSTANCE_REVISION_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord> KEY_INSTANCE_REVISION_IDX_INSTANCE_REVISION_UUID = createUniqueKey(io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressRecord> KEY_IP_ADDRESS_IDX_IP_ADDRESS_UUID = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord> KEY_IP_ADDRESS_NIC_MAP_IDX_IP_ADDRESS_NIC_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.LabelRecord> KEY_LABEL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.LabelTable.LABEL, io.cattle.platform.core.model.tables.LabelTable.LABEL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.LabelRecord> KEY_LABEL_IDX_LABEL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.LabelTable.LABEL, io.cattle.platform.core.model.tables.LabelTable.LABEL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MachineDriverRecord> KEY_MACHINE_DRIVER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.MachineDriverTable.MACHINE_DRIVER, io.cattle.platform.core.model.tables.MachineDriverTable.MACHINE_DRIVER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MachineDriverRecord> KEY_MACHINE_DRIVER_IDX_MACHINE_DRIVER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.MachineDriverTable.MACHINE_DRIVER, io.cattle.platform.core.model.tables.MachineDriverTable.MACHINE_DRIVER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.MountRecord> KEY_MOUNT_IDX_MOUNT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkRecord> KEY_NETWORK_IDX_NETWORK_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord> KEY_NETWORK_DRIVER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord> KEY_NETWORK_DRIVER_IDX_NETWORK_DRIVER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.NicRecord> KEY_NIC_IDX_NIC_UUID = createUniqueKey(io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord> KEY_PHYSICAL_HOST_IDX_PHYSICAL_HOST_UUID = createUniqueKey(io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.PortRecord> KEY_PORT_IDX_PORT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord> KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID = createUniqueKey(io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> KEY_PROCESS_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord> KEY_PROJECT_MEMBER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord> KEY_PROJECT_MEMBER_IDX_PROJECT_MEMBER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord> KEY_PROJECT_TEMPLATE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE, io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord> KEY_PROJECT_TEMPLATE_IDX_PROJECT_TEMPLATE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE, io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord> KEY_RESOURCE_POOL_IDX_POOL_ITEM2 = createUniqueKey(io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.POOL_TYPE, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.POOL_ID, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.QUALIFIER, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ITEM);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord> KEY_SCHEDULED_UPGRADE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord> KEY_SCHEDULED_UPGRADE_IDX_SCHEDULED_UPGRADE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SecretRecord> KEY_SECRET_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SecretTable.SECRET, io.cattle.platform.core.model.tables.SecretTable.SECRET.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SecretRecord> KEY_SECRET_IDX_SECRET_UUID = createUniqueKey(io.cattle.platform.core.model.tables.SecretTable.SECRET, io.cattle.platform.core.model.tables.SecretTable.SECRET.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRecord> KEY_SERVICE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRecord> KEY_SERVICE_IDX_SERVICE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord> KEY_SERVICE_CONSUME_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord> KEY_SERVICE_CONSUME_MAP_IDX_SERVICE_CONSUME_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord> KEY_SERVICE_EVENT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord> KEY_SERVICE_EVENT_IDX_SERVICE_EVENT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord> KEY_SERVICE_EXPOSE_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord> KEY_SERVICE_EXPOSE_MAP_IDX_SERVICE_INSTANCE_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord> KEY_SERVICE_INDEX_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord> KEY_SERVICE_INDEX_IDX_SERVICE_SUFFIX_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord> KEY_SERVICE_LOG_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> KEY_SERVICE_REVISION_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> KEY_SERVICE_REVISION_IDX_SERVICE_REVISION_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SettingRecord> KEY_SETTING_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SettingTable.SETTING, io.cattle.platform.core.model.tables.SettingTable.SETTING.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SnapshotRecord> KEY_SNAPSHOT_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SnapshotRecord> KEY_SNAPSHOT_IDX_SNAPSHOT_UUID = createUniqueKey(io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord> KEY_STORAGE_DRIVER_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord> KEY_STORAGE_DRIVER_IDX_STORAGE_DRIVER_UUID = createUniqueKey(io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord> KEY_STORAGE_POOL_IDX_STORAGE_POOL_UUID = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord> KEY_STORAGE_POOL_HOST_MAP_IDX_STORAGE_POOL_HOST_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.SubnetRecord> KEY_SUBNET_IDX_SUBNET_UUID = createUniqueKey(io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.TaskTable.TASK, io.cattle.platform.core.model.tables.TaskTable.TASK.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskRecord> KEY_TASK_IDX_TASK_NAME = createUniqueKey(io.cattle.platform.core.model.tables.TaskTable.TASK, io.cattle.platform.core.model.tables.TaskTable.TASK.NAME);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord> KEY_TASK_INSTANCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.UserPreferenceRecord> KEY_USER_PREFERENCE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE, io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.UserPreferenceRecord> KEY_USER_PREFERENCE_IDX_USER_PREFERENCE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE, io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeRecord> KEY_VOLUME_IDX_VOLUME_UUID = createUniqueKey(io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord> KEY_VOLUME_STORAGE_POOL_MAP_IDX_VOLUME_STORAGE_POOL_MAP_UUID = createUniqueKey(io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord> KEY_VOLUME_TEMPLATE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord> KEY_VOLUME_TEMPLATE_IDX_VOLUME_TEMPLATE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE.UUID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_PRIMARY = createUniqueKey(io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.ID);
		public static final org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.ZoneRecord> KEY_ZONE_IDX_ZONE_UUID = createUniqueKey(io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.UUID);
	}

	private static class ForeignKeys0 extends org.jooq.impl.AbstractKeys {
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AccountRecord, io.cattle.platform.core.model.tables.records.ProjectTemplateRecord> FK_ACCOUNT__PROJECT_TEMPLATE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_PROJECT_TEMPLATE_PRIMARY, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT, io.cattle.platform.core.model.tables.AccountTable.ACCOUNT.PROJECT_TEMPLATE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ACCOUNT_LINK__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AccountLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ACCOUNT_LINK__LINKED_ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK, io.cattle.platform.core.model.tables.AccountLinkTable.ACCOUNT_LINK.LINKED_ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AGENT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AgentRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_AGENT__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.AgentTable.AGENT, io.cattle.platform.core.model.tables.AgentTable.AGENT.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuditLogRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AUDIT_LOG__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuditLogRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AUDIT_LOG__AUTHENTICATED_AS_ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG.AUTHENTICATED_AS_ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuthTokenRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_AUTH_TOKEN__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN, io.cattle.platform.core.model.tables.AuthTokenTable.AUTH_TOKEN.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_BACKUP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.SnapshotRecord> FK_BACKUP__SNAPSHOT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SNAPSHOT_PRIMARY, io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.SNAPSHOT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_BACKUP__VOLUME_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_PRIMARY, io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupRecord, io.cattle.platform.core.model.tables.records.BackupTargetRecord> FK_BACKUP__BACKUP_TARGET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_BACKUP_TARGET_PRIMARY, io.cattle.platform.core.model.tables.BackupTable.BACKUP, io.cattle.platform.core.model.tables.BackupTable.BACKUP.BACKUP_TARGET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.BackupTargetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_BACKUP_TARGET__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET, io.cattle.platform.core.model.tables.BackupTargetTable.BACKUP_TARGET.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CertificateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CERT_DATA__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE, io.cattle.platform.core.model.tables.CertificateTable.CERTIFICATE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_CLUSTER_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP.CLUSTER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ClusterHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP, io.cattle.platform.core.model.tables.ClusterHostMapTable.CLUSTER_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.ConfigItemRecord> FK_CONFIG_ITEM__NAME = createForeignKey(io.cattle.platform.core.model.Keys.KEY_CONFIG_ITEM_IDX_CONFIG_ITEM__NAME, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.NAME);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_CONFIG_ITEM__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CONFIG_ITEM__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_CONFIG_ITEM__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_CONFIG_ITEM__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_CONFIG_ITEM__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ConfigItemStatusRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_CONFIG_ITEM__DEPLOYMENT_UNIT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_DEPLOYMENT_UNIT_PRIMARY, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS, io.cattle.platform.core.model.tables.ConfigItemStatusTable.CONFIG_ITEM_STATUS.DEPLOYMENT_UNIT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ContainerEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CONTAINER_EVENT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT, io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ContainerEventRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_CONTAINER_EVENT__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT, io.cattle.platform.core.model.tables.ContainerEventTable.CONTAINER_EVENT.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_CREDENTIAL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_CREDENTIAL__REGISTRY_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL, io.cattle.platform.core.model.tables.CredentialTable.CREDENTIAL.REGISTRY_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_CREDENTIAL_INSTANCE_MAP__CREDENTIAL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_CREDENTIAL_PRIMARY, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.CREDENTIAL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.CredentialInstanceMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_CREDENTIAL_INSTANCE_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP, io.cattle.platform.core.model.tables.CredentialInstanceMapTable.CREDENTIAL_INSTANCE_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_DEPLOYMENT_UNIT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DeploymentUnitRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_DEPLOYMENT_UNIT__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT, io.cattle.platform.core.model.tables.DeploymentUnitTable.DEPLOYMENT_UNIT.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_DYNAMIC_SCHEMA__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_DYNAMIC_SCHEMA__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA, io.cattle.platform.core.model.tables.DynamicSchemaTable.DYNAMIC_SCHEMA.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.DynamicSchemaRoleRecord, io.cattle.platform.core.model.tables.records.DynamicSchemaRecord> FK_DYNAMIC_SCHEMA_ROLE_DYNAMIC_SCHEMA_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_DYNAMIC_SCHEMA_PRIMARY, io.cattle.platform.core.model.tables.DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE, io.cattle.platform.core.model.tables.DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE.DYNAMIC_SCHEMA_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StackRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ENVIRONMENT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.StackTable.STACK, io.cattle.platform.core.model.tables.StackTable.STACK.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_EXTERNAL_EVENT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_EXTERNAL_EVENT__REPORTED_ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT, io.cattle.platform.core.model.tables.ExternalEventTable.EXTERNAL_EVENT.REPORTED_ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_EXTERNAL_HANDLER_PRIMARY, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.EXTERNAL_HANDLER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ExternalHandlerExternalHandlerProcessMapRecord, io.cattle.platform.core.model.tables.records.ExternalHandlerProcessRecord> FK_EH_EH_PROCESS_MAP__EXTERNAL_HANDLER_PROCESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_EXTERNAL_HANDLER_PROCESS_PRIMARY, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP, io.cattle.platform.core.model.tables.ExternalHandlerExternalHandlerProcessMapTable.EXTERNAL_HANDLER_EXTERNAL_HANDLER_PROCESS_MAP.EXTERNAL_HANDLER_PROCESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.GenericObjectRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_GENERIC_OBJECT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT, io.cattle.platform.core.model.tables.GenericObjectTable.GENERIC_OBJECT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HEALTHCHECK_INSTANCE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_HEALTHCHECK_INSTANCE__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE, io.cattle.platform.core.model.tables.HealthcheckInstanceTable.HEALTHCHECK_INSTANCE.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP__HEALTHCHECK_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HEALTHCHECK_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.HEALTHCHECK_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HealthcheckInstanceHostMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_HEALTHCHECK_INSTANCE_HOST_MAP_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.HealthcheckInstanceHostMapTable.HEALTHCHECK_INSTANCE_HOST_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_HOST__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_HOST__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.PhysicalHostRecord> FK_HOST__PHYSICAL_HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_PHYSICAL_HOST_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.PHYSICAL_HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_HOST__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostRecord, io.cattle.platform.core.model.tables.records.HostTemplateRecord> FK_HOST__HOST_TEMPLATE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_TEMPLATE_PRIMARY, io.cattle.platform.core.model.tables.HostTable.HOST, io.cattle.platform.core.model.tables.HostTable.HOST.HOST_TEMPLATE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_IP_ADDRESS_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostIpAddressMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_HOST_IP_ADDRESS_MAP__IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP, io.cattle.platform.core.model.tables.HostIpAddressMapTable.HOST_IP_ADDRESS_MAP.IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST_LABEL_MAP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_HOST_LABEL_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostLabelMapRecord, io.cattle.platform.core.model.tables.records.LabelRecord> FK_HOST_LABEL_MAP__LABEL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_LABEL_PRIMARY, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP, io.cattle.platform.core.model.tables.HostLabelMapTable.HOST_LABEL_MAP.LABEL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.HostTemplateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_HOST_TEMPLATE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE, io.cattle.platform.core.model.tables.HostTemplateTable.HOST_TEMPLATE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IMAGE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_IMAGE_REGISTRY_CREDENTIAL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_CREDENTIAL_PRIMARY, io.cattle.platform.core.model.tables.ImageTable.IMAGE, io.cattle.platform.core.model.tables.ImageTable.IMAGE.REGISTRY_CREDENTIAL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_IMAGE_STORAGE_POOL_MAP__IMAGE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IMAGE_PRIMARY, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ImageStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_IMAGE_STORAGE_POOL_MAP__STORAGE_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.ImageStoragePoolMapTable.IMAGE_STORAGE_POOL_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_INSTANCE__IMAGE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IMAGE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_INSTANCE__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_INSTANCE__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.CredentialRecord> FK_INSTANCE__REGISTRY_CREDENTIAL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_CREDENTIAL_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.REGISTRY_CREDENTIAL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.NETWORK_CONTAINER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ServiceIndexRecord> FK_INSTANCE__SERVICE_INDEX_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_INDEX_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.SERVICE_INDEX_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_INSTANCE__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_INSTANCE__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE__REPLACEMENT_FOR = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.REPLACEMENT_FOR);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_INSTANCE__DEPLOYMENT_UNIT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_DEPLOYMENT_UNIT_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.DEPLOYMENT_UNIT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRecord, io.cattle.platform.core.model.tables.records.InstanceRevisionRecord> FK_INSTANCE__REVISION_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_REVISION_PRIMARY, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE, io.cattle.platform.core.model.tables.InstanceTable.INSTANCE.REVISION_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_HOST_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_INSTANCE_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP, io.cattle.platform.core.model.tables.InstanceHostMapTable.INSTANCE_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE_LABEL_MAP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_LABEL_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLabelMapRecord, io.cattle.platform.core.model.tables.records.LabelRecord> FK_INSTANCE_LABEL_MAP__LABEL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_LABEL_PRIMARY, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP, io.cattle.platform.core.model.tables.InstanceLabelMapTable.INSTANCE_LABEL_MAP.LABEL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_LINK__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_LINK__TARGET_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.TARGET_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceLinkRecord, io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord> FK_LINK__SERVICE_CONSUME_MAP_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_CONSUME_MAP_PRIMARY, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK, io.cattle.platform.core.model.tables.InstanceLinkTable.INSTANCE_LINK.SERVICE_CONSUME_MAP_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_INSTANCE_REVISION__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.InstanceRevisionRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_INSTANCE_REVISION__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION, io.cattle.platform.core.model.tables.InstanceRevisionTable.INSTANCE_REVISION.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_IP_ADDRESS__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.SubnetRecord> FK_IP_ADDRESS__SUBNET_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SUBNET_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.SUBNET_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_IP_ADDRESS__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS, io.cattle.platform.core.model.tables.IpAddressTable.IP_ADDRESS.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS_NIC_MAP__IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.IpAddressNicMapRecord, io.cattle.platform.core.model.tables.records.NicRecord> FK_IP_ADDRESS_NIC_MAP__NIC_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NIC_PRIMARY, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP, io.cattle.platform.core.model.tables.IpAddressNicMapTable.IP_ADDRESS_NIC_MAP.NIC_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.LabelRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_LABEL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.LabelTable.LABEL, io.cattle.platform.core.model.tables.LabelTable.LABEL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_MOUNT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_MOUNT__VOLUME_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_PRIMARY, io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.MountRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_MOUNT__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.MountTable.MOUNT, io.cattle.platform.core.model.tables.MountTable.MOUNT.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkRecord, io.cattle.platform.core.model.tables.records.NetworkDriverRecord> FK_NETWORK__NETWORK_DRIVER_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_DRIVER_PRIMARY, io.cattle.platform.core.model.tables.NetworkTable.NETWORK, io.cattle.platform.core.model.tables.NetworkTable.NETWORK.NETWORK_DRIVER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NETWORK_DRIVER__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NetworkDriverRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_NETWORK_DRIVER__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER, io.cattle.platform.core.model.tables.NetworkDriverTable.NETWORK_DRIVER.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_NIC__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_NIC__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.NicRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_NIC__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.NicTable.NIC, io.cattle.platform.core.model.tables.NicTable.NIC.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PHYSICAL_HOST__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PhysicalHostRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_PHYSICAL_HOST__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST, io.cattle.platform.core.model.tables.PhysicalHostTable.PHYSICAL_HOST.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PORT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_PORT__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PUBLIC_IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.PUBLIC_IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.PortRecord, io.cattle.platform.core.model.tables.records.IpAddressRecord> FK_IP_ADDRESS__PRIVATE_IP_ADDRESS_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IP_ADDRESS_PRIMARY, io.cattle.platform.core.model.tables.PortTable.PORT, io.cattle.platform.core.model.tables.PortTable.PORT.PRIVATE_IP_ADDRESS_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProcessExecutionRecord, io.cattle.platform.core.model.tables.records.ProcessInstanceRecord> FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_PROCESS_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION, io.cattle.platform.core.model.tables.ProcessExecutionTable.PROCESS_EXECUTION.PROCESS_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProcessInstanceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROCESS_INSTANCE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE, io.cattle.platform.core.model.tables.ProcessInstanceTable.PROCESS_INSTANCE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROJECT_MEMBER__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProjectMemberRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROJECT_MEMBER__PROJECT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER, io.cattle.platform.core.model.tables.ProjectMemberTable.PROJECT_MEMBER.PROJECT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ProjectTemplateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_PROJECT_TEMPLATE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE, io.cattle.platform.core.model.tables.ProjectTemplateTable.PROJECT_TEMPLATE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ResourcePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_RESOURCE_POOL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL, io.cattle.platform.core.model.tables.ResourcePoolTable.RESOURCE_POOL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SCHEDULED_UPGRADE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_SCHEDULED_UPGRADE__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE, io.cattle.platform.core.model.tables.ScheduledUpgradeTable.SCHEDULED_UPGRADE.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SecretRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SECRET__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.SecretTable.SECRET, io.cattle.platform.core.model.tables.SecretTable.SECRET.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SecretRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_SECRET__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.SecretTable.SECRET, io.cattle.platform.core.model.tables.SecretTable.SECRET.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_SERVICE__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> FK_SERVICE__REVISION_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_REVISION_PRIMARY, io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.REVISION_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRecord, io.cattle.platform.core.model.tables.records.ServiceRevisionRecord> FK_SERVICE__PREVIOUS_REVISION_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_REVISION_PRIMARY, io.cattle.platform.core.model.tables.ServiceTable.SERVICE, io.cattle.platform.core.model.tables.ServiceTable.SERVICE.PREVIOUS_REVISION_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_CONSUME_MAP__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_CONSUME_MAP__CONSUMED_SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP.CONSUMED_SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceConsumeMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_CONSUME_MAP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP, io.cattle.platform.core.model.tables.ServiceConsumeMapTable.SERVICE_CONSUME_MAP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_EVENT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_SERVICE_EVENT__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_SERVICE_EVENT__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceEventRecord, io.cattle.platform.core.model.tables.records.HealthcheckInstanceRecord> FK_SERVICE_EVENT__HEALTHCHECK_INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HEALTHCHECK_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT, io.cattle.platform.core.model.tables.ServiceEventTable.SERVICE_EVENT.HEALTHCHECK_INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_INSTANCE_MAP__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_SERVICE_INSTANCE_MAP__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceExposeMapRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_EXPOSE_MAP__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP, io.cattle.platform.core.model.tables.ServiceExposeMapTable.SERVICE_EXPOSE_MAP.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_SUFFIX__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceIndexRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_SUFFIX__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX, io.cattle.platform.core.model.tables.ServiceIndexTable.SERVICE_INDEX.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_LOG__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_LOG__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_SERVICE_LOG__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceLogRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_SERVICE_LOG__DEPLOYMENT_UNIT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_DEPLOYMENT_UNIT_PRIMARY, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG, io.cattle.platform.core.model.tables.ServiceLogTable.SERVICE_LOG.DEPLOYMENT_UNIT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SERVICE_REVISION__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ServiceRevisionRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_SERVICE_REVISION__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION, io.cattle.platform.core.model.tables.ServiceRevisionTable.SERVICE_REVISION.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SnapshotRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SNAPSHOT__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SnapshotRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_SNAPSHOT__VOLUME_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_PRIMARY, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT, io.cattle.platform.core.model.tables.SnapshotTable.SNAPSHOT.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_STORAGE_DRIVER__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StorageDriverRecord, io.cattle.platform.core.model.tables.records.ServiceRecord> FK_STORAGE_DRIVER__SERVICE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_SERVICE_PRIMARY, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER, io.cattle.platform.core.model.tables.StorageDriverTable.STORAGE_DRIVER.SERVICE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_STORAGE_POOL__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.AgentRecord> FK_STORAGE_POOL__AGENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_AGENT_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.AGENT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_STORAGE_POOL__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolRecord, io.cattle.platform.core.model.tables.records.StorageDriverRecord> FK_STORAGE_DRIVER__ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_DRIVER_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL, io.cattle.platform.core.model.tables.StoragePoolTable.STORAGE_POOL.STORAGE_DRIVER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_STORAGE_POOL_HOST_MAP__STORAGE_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.StoragePoolHostMapRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_STORAGE_POOL_HOST_MAP__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP, io.cattle.platform.core.model.tables.StoragePoolHostMapTable.STORAGE_POOL_HOST_MAP.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_SUBNET__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.SubnetRecord, io.cattle.platform.core.model.tables.records.NetworkRecord> FK_SUBNET__NETWORK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_NETWORK_PRIMARY, io.cattle.platform.core.model.tables.SubnetTable.SUBNET, io.cattle.platform.core.model.tables.SubnetTable.SUBNET.NETWORK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.TaskInstanceRecord, io.cattle.platform.core.model.tables.records.TaskRecord> FK_TASK_INSTANCE__TASK_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_TASK_PRIMARY, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE, io.cattle.platform.core.model.tables.TaskInstanceTable.TASK_INSTANCE.TASK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.UserPreferenceRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_USER_PREFERENCE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE, io.cattle.platform.core.model.tables.UserPreferenceTable.USER_PREFERENCE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VOLUME__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.InstanceRecord> FK_VOLUME__INSTANCE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_INSTANCE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.INSTANCE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ImageRecord> FK_VOLUME__IMAGE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_IMAGE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.IMAGE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.ZoneRecord> FK_VOLUME__ZONE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ZONE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.ZONE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.HostRecord> FK_VOLUME__HOST_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_HOST_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.HOST_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.DeploymentUnitRecord> FK_VOLUME__DEPLOYMENT_UNIT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_DEPLOYMENT_UNIT_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.DEPLOYMENT_UNIT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_VOLUME__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.VolumeTemplateRecord> FK_VOLUME__VOLUME_TEMPLATE_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_TEMPLATE_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.VOLUME_TEMPLATE_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeRecord, io.cattle.platform.core.model.tables.records.StorageDriverRecord> FK_VOLUME__STORAGE_DRIVER_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_DRIVER_PRIMARY, io.cattle.platform.core.model.tables.VolumeTable.VOLUME, io.cattle.platform.core.model.tables.VolumeTable.VOLUME.STORAGE_DRIVER_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.VolumeRecord> FK_VOLUME_STORAGE_POOL_MAP__VOLUME_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_VOLUME_PRIMARY, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.VOLUME_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeStoragePoolMapRecord, io.cattle.platform.core.model.tables.records.StoragePoolRecord> FK_VOLUME_STORAGE_POOL_MAP__STORAGE_POOL_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_STORAGE_POOL_PRIMARY, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP, io.cattle.platform.core.model.tables.VolumeStoragePoolMapTable.VOLUME_STORAGE_POOL_MAP.STORAGE_POOL_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_VOLUME_TEMPLATE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE.ACCOUNT_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.VolumeTemplateRecord, io.cattle.platform.core.model.tables.records.StackRecord> FK_VOLUME_TEMPLATE__ENVIRONMENT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ENVIRONMENT_PRIMARY, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE, io.cattle.platform.core.model.tables.VolumeTemplateTable.VOLUME_TEMPLATE.STACK_ID);
		public static final org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.ZoneRecord, io.cattle.platform.core.model.tables.records.AccountRecord> FK_ZONE__ACCOUNT_ID = createForeignKey(io.cattle.platform.core.model.Keys.KEY_ACCOUNT_PRIMARY, io.cattle.platform.core.model.tables.ZoneTable.ZONE, io.cattle.platform.core.model.tables.ZoneTable.ZONE.ACCOUNT_ID);
	}
}
