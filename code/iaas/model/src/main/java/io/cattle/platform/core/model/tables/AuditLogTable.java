/**
 * This class is generated by jOOQ
 */
package io.cattle.platform.core.model.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditLogTable extends org.jooq.impl.TableImpl<io.cattle.platform.core.model.tables.records.AuditLogRecord> {

	private static final long serialVersionUID = 2009167210;

	/**
	 * The singleton instance of <code>cattle.audit_log</code>
	 */
	public static final io.cattle.platform.core.model.tables.AuditLogTable AUDIT_LOG = new io.cattle.platform.core.model.tables.AuditLogTable();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<io.cattle.platform.core.model.tables.records.AuditLogRecord> getRecordType() {
		return io.cattle.platform.core.model.tables.records.AuditLogRecord.class;
	}

	/**
	 * The column <code>cattle.audit_log.id</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>cattle.audit_log.account_id</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>cattle.audit_log.authenticated_as_account_id</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> AUTHENTICATED_AS_ACCOUNT_ID = createField("authenticated_as_account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>cattle.audit_log.kind</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>cattle.audit_log.auth_type</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> AUTH_TYPE = createField("auth_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>cattle.audit_log.event_type</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>cattle.audit_log.resource_type</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> RESOURCE_TYPE = createField("resource_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

	/**
	 * The column <code>cattle.audit_log.resource_id</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>cattle.audit_log.description</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

	/**
	 * The column <code>cattle.audit_log.created</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.util.Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP.asConvertedDataType(new io.cattle.platform.db.jooq.converter.DateConverter()), this, "");

	/**
	 * The column <code>cattle.audit_log.data</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.util.Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB.length(65535).asConvertedDataType(new io.cattle.platform.db.jooq.converter.DataConverter()), this, "");

	/**
	 * The column <code>cattle.audit_log.authenticated_as_identity_id</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> AUTHENTICATED_AS_IDENTITY_ID = createField("authenticated_as_identity_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>cattle.audit_log.runtime</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> RUNTIME = createField("runtime", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * The column <code>cattle.audit_log.client_ip</code>.
	 */
	public final org.jooq.TableField<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.String> CLIENT_IP = createField("client_ip", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>cattle.audit_log</code> table reference
	 */
	public AuditLogTable() {
		this("audit_log", null);
	}

	/**
	 * Create an aliased <code>cattle.audit_log</code> table reference
	 */
	public AuditLogTable(java.lang.String alias) {
		this(alias, io.cattle.platform.core.model.tables.AuditLogTable.AUDIT_LOG);
	}

	private AuditLogTable(java.lang.String alias, org.jooq.Table<io.cattle.platform.core.model.tables.records.AuditLogRecord> aliased) {
		this(alias, aliased, null);
	}

	private AuditLogTable(java.lang.String alias, org.jooq.Table<io.cattle.platform.core.model.tables.records.AuditLogRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, io.cattle.platform.core.model.CattleTable.CATTLE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Identity<io.cattle.platform.core.model.tables.records.AuditLogRecord, java.lang.Long> getIdentity() {
		return io.cattle.platform.core.model.Keys.IDENTITY_AUDIT_LOG;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuditLogRecord> getPrimaryKey() {
		return io.cattle.platform.core.model.Keys.KEY_AUDIT_LOG_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuditLogRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<io.cattle.platform.core.model.tables.records.AuditLogRecord>>asList(io.cattle.platform.core.model.Keys.KEY_AUDIT_LOG_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuditLogRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<io.cattle.platform.core.model.tables.records.AuditLogRecord, ?>>asList(io.cattle.platform.core.model.Keys.FK_AUDIT_LOG__ACCOUNT_ID, io.cattle.platform.core.model.Keys.FK_AUDIT_LOG__AUTHENTICATED_AS_ACCOUNT_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public io.cattle.platform.core.model.tables.AuditLogTable as(java.lang.String alias) {
		return new io.cattle.platform.core.model.tables.AuditLogTable(alias, this);
	}

	/**
	 * Rename this table
	 */
	public io.cattle.platform.core.model.tables.AuditLogTable rename(java.lang.String name) {
		return new io.cattle.platform.core.model.tables.AuditLogTable(name, null);
	}
}
