/**
 * This class is generated by jOOQ
 */
package io.cattle.platform.core.model;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = { "http://www.jooq.org", "3.3.0" }, comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "DATABASECHANGELOGLOCK", schema = "cattle")
public interface Databasechangeloglock extends java.io.Serializable {

    /**
     * Setter for <code>cattle.DATABASECHANGELOGLOCK.ID</code>.
     */
    public void setId(java.lang.Integer value);

    /**
     * Getter for <code>cattle.DATABASECHANGELOGLOCK.ID</code>.
     */
    @javax.persistence.Id
    @javax.persistence.Column(name = "ID", unique = true, nullable = false, precision = 10)
    public java.lang.Integer getId();

    /**
     * Setter for <code>cattle.DATABASECHANGELOGLOCK.LOCKED</code>.
     */
    public void setLocked(java.lang.Boolean value);

    /**
     * Getter for <code>cattle.DATABASECHANGELOGLOCK.LOCKED</code>.
     */
    @javax.persistence.Column(name = "LOCKED", nullable = false, precision = 1)
    public java.lang.Boolean getLocked();

    /**
     * Setter for <code>cattle.DATABASECHANGELOGLOCK.LOCKGRANTED</code>.
     */
    public void setLockgranted(java.util.Date value);

    /**
     * Getter for <code>cattle.DATABASECHANGELOGLOCK.LOCKGRANTED</code>.
     */
    @javax.persistence.Column(name = "LOCKGRANTED")
    public java.util.Date getLockgranted();

    /**
     * Setter for <code>cattle.DATABASECHANGELOGLOCK.LOCKEDBY</code>.
     */
    public void setLockedby(java.lang.String value);

    /**
     * Getter for <code>cattle.DATABASECHANGELOGLOCK.LOCKEDBY</code>.
     */
    @javax.persistence.Column(name = "LOCKEDBY", length = 255)
    public java.lang.String getLockedby();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface Databasechangeloglock
     */
    public void from(io.cattle.platform.core.model.Databasechangeloglock from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface Databasechangeloglock
     */
    public <E extends io.cattle.platform.core.model.Databasechangeloglock> E into(E into);
}
