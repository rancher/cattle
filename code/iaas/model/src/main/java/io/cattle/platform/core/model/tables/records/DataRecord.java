/**
 * This class is generated by jOOQ
 */
package io.cattle.platform.core.model.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = { "http://www.jooq.org", "3.3.0" }, comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
@javax.persistence.Entity
@javax.persistence.Table(name = "data", schema = "cattle")
public class DataRecord extends org.jooq.impl.UpdatableRecordImpl<io.cattle.platform.core.model.tables.records.DataRecord> implements
        io.cattle.platform.db.jooq.utils.TableRecordJaxb, org.jooq.Record4<java.lang.Long, java.lang.String, java.lang.Boolean, java.lang.String>,
        io.cattle.platform.core.model.Data {

    private static final long serialVersionUID = -1287211936;

    /**
     * Setter for <code>cattle.data.id</code>.
     */
    @Override
    public void setId(java.lang.Long value) {
        setValue(0, value);
    }

    /**
     * Getter for <code>cattle.data.id</code>.
     */
    @javax.persistence.Id
    @javax.persistence.Column(name = "id", unique = true, nullable = false, precision = 19)
    @Override
    public java.lang.Long getId() {
        return (java.lang.Long) getValue(0);
    }

    /**
     * Setter for <code>cattle.data.name</code>.
     */
    @Override
    public void setName(java.lang.String value) {
        setValue(1, value);
    }

    /**
     * Getter for <code>cattle.data.name</code>.
     */
    @javax.persistence.Column(name = "name", unique = true, nullable = false, length = 255)
    @Override
    public java.lang.String getName() {
        return (java.lang.String) getValue(1);
    }

    /**
     * Setter for <code>cattle.data.visible</code>.
     */
    @Override
    public void setVisible(java.lang.Boolean value) {
        setValue(2, value);
    }

    /**
     * Getter for <code>cattle.data.visible</code>.
     */
    @javax.persistence.Column(name = "visible", nullable = false, precision = 1)
    @Override
    public java.lang.Boolean getVisible() {
        return (java.lang.Boolean) getValue(2);
    }

    /**
     * Setter for <code>cattle.data.value</code>.
     */
    @Override
    public void setValue(java.lang.String value) {
        setValue(3, value);
    }

    /**
     * Getter for <code>cattle.data.value</code>.
     */
    @javax.persistence.Column(name = "value", nullable = false, length = 65535)
    @Override
    public java.lang.String getValue() {
        return (java.lang.String) getValue(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Record1<java.lang.Long> key() {
        return (org.jooq.Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row4<java.lang.Long, java.lang.String, java.lang.Boolean, java.lang.String> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row4<java.lang.Long, java.lang.String, java.lang.Boolean, java.lang.String> valuesRow() {
        return (org.jooq.Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Long> field1() {
        return io.cattle.platform.core.model.tables.DataTable.DATA.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.String> field2() {
        return io.cattle.platform.core.model.tables.DataTable.DATA.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Boolean> field3() {
        return io.cattle.platform.core.model.tables.DataTable.DATA.VISIBLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.String> field4() {
        return io.cattle.platform.core.model.tables.DataTable.DATA.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Boolean value3() {
        return getVisible();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.String value4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataRecord value1(java.lang.Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataRecord value2(java.lang.String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataRecord value3(java.lang.Boolean value) {
        setVisible(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataRecord value4(java.lang.String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DataRecord values(java.lang.Long value1, java.lang.String value2, java.lang.Boolean value3, java.lang.String value4) {
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(io.cattle.platform.core.model.Data from) {
        setId(from.getId());
        setName(from.getName());
        setVisible(from.getVisible());
        setValue(from.getValue());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends io.cattle.platform.core.model.Data> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataRecord
     */
    public DataRecord() {
        super(io.cattle.platform.core.model.tables.DataTable.DATA);
    }

    /**
     * Create a detached, initialised DataRecord
     */
    public DataRecord(java.lang.Long id, java.lang.String name, java.lang.Boolean visible, java.lang.String value) {
        super(io.cattle.platform.core.model.tables.DataTable.DATA);

        setValue(0, id);
        setValue(1, name);
        setValue(2, visible);
        setValue(3, value);
    }
}
