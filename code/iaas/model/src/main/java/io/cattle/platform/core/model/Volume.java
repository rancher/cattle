/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model;


import java.io.Serializable;
import java.util.Date;
import java.util.Map;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "volume", schema = "cattle")
public interface Volume extends Serializable {

    /**
     * Setter for <code>cattle.volume.id</code>.
     */
    public void setId(Long value);

    /**
     * Getter for <code>cattle.volume.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    public Long getId();

    /**
     * Setter for <code>cattle.volume.name</code>.
     */
    public void setName(String value);

    /**
     * Getter for <code>cattle.volume.name</code>.
     */
    @Column(name = "name", length = 255)
    public String getName();

    /**
     * Setter for <code>cattle.volume.account_id</code>.
     */
    public void setAccountId(Long value);

    /**
     * Getter for <code>cattle.volume.account_id</code>.
     */
    @Column(name = "account_id", precision = 19)
    public Long getAccountId();

    /**
     * Setter for <code>cattle.volume.kind</code>.
     */
    public void setKind(String value);

    /**
     * Getter for <code>cattle.volume.kind</code>.
     */
    @Column(name = "kind", nullable = false, length = 255)
    public String getKind();

    /**
     * Setter for <code>cattle.volume.uuid</code>.
     */
    public void setUuid(String value);

    /**
     * Getter for <code>cattle.volume.uuid</code>.
     */
    @Column(name = "uuid", unique = true, nullable = false, length = 128)
    public String getUuid();

    /**
     * Setter for <code>cattle.volume.description</code>.
     */
    public void setDescription(String value);

    /**
     * Getter for <code>cattle.volume.description</code>.
     */
    @Column(name = "description", length = 1024)
    public String getDescription();

    /**
     * Setter for <code>cattle.volume.state</code>.
     */
    public void setState(String value);

    /**
     * Getter for <code>cattle.volume.state</code>.
     */
    @Column(name = "state", nullable = false, length = 128)
    public String getState();

    /**
     * Setter for <code>cattle.volume.created</code>.
     */
    public void setCreated(Date value);

    /**
     * Getter for <code>cattle.volume.created</code>.
     */
    @Column(name = "created")
    public Date getCreated();

    /**
     * Setter for <code>cattle.volume.removed</code>.
     */
    public void setRemoved(Date value);

    /**
     * Getter for <code>cattle.volume.removed</code>.
     */
    @Column(name = "removed")
    public Date getRemoved();

    /**
     * Setter for <code>cattle.volume.remove_time</code>.
     */
    public void setRemoveTime(Date value);

    /**
     * Getter for <code>cattle.volume.remove_time</code>.
     */
    @Column(name = "remove_time")
    public Date getRemoveTime();

    /**
     * Setter for <code>cattle.volume.data</code>.
     */
    public void setData(Map<String,Object> value);

    /**
     * Getter for <code>cattle.volume.data</code>.
     */
    @Column(name = "data", length = 16777215)
    public Map<String,Object> getData();

    /**
     * Setter for <code>cattle.volume.physical_size_mb</code>.
     */
    public void setPhysicalSizeMb(Long value);

    /**
     * Getter for <code>cattle.volume.physical_size_mb</code>.
     */
    @Column(name = "physical_size_mb", precision = 19)
    public Long getPhysicalSizeMb();

    /**
     * Setter for <code>cattle.volume.virtual_size_mb</code>.
     */
    public void setVirtualSizeMb(Long value);

    /**
     * Getter for <code>cattle.volume.virtual_size_mb</code>.
     */
    @Column(name = "virtual_size_mb", precision = 19)
    public Long getVirtualSizeMb();

    /**
     * Setter for <code>cattle.volume.format</code>.
     */
    public void setFormat(String value);

    /**
     * Getter for <code>cattle.volume.format</code>.
     */
    @Column(name = "format", length = 255)
    public String getFormat();

    /**
     * Setter for <code>cattle.volume.uri</code>.
     */
    public void setUri(String value);

    /**
     * Getter for <code>cattle.volume.uri</code>.
     */
    @Column(name = "uri", length = 255)
    public String getUri();

    /**
     * Setter for <code>cattle.volume.external_id</code>.
     */
    public void setExternalId(String value);

    /**
     * Getter for <code>cattle.volume.external_id</code>.
     */
    @Column(name = "external_id", length = 128)
    public String getExternalId();

    /**
     * Setter for <code>cattle.volume.access_mode</code>.
     */
    public void setAccessMode(String value);

    /**
     * Getter for <code>cattle.volume.access_mode</code>.
     */
    @Column(name = "access_mode", length = 255)
    public String getAccessMode();

    /**
     * Setter for <code>cattle.volume.host_id</code>.
     */
    public void setHostId(Long value);

    /**
     * Getter for <code>cattle.volume.host_id</code>.
     */
    @Column(name = "host_id", precision = 19)
    public Long getHostId();

    /**
     * Setter for <code>cattle.volume.deployment_unit_id</code>.
     */
    public void setDeploymentUnitId(Long value);

    /**
     * Getter for <code>cattle.volume.deployment_unit_id</code>.
     */
    @Column(name = "deployment_unit_id", precision = 19)
    public Long getDeploymentUnitId();

    /**
     * Setter for <code>cattle.volume.environment_id</code>.
     */
    public void setStackId(Long value);

    /**
     * Getter for <code>cattle.volume.environment_id</code>.
     */
    @Column(name = "environment_id", precision = 19)
    public Long getStackId();

    /**
     * Setter for <code>cattle.volume.volume_template_id</code>.
     */
    public void setVolumeTemplateId(Long value);

    /**
     * Getter for <code>cattle.volume.volume_template_id</code>.
     */
    @Column(name = "volume_template_id", precision = 19)
    public Long getVolumeTemplateId();

    /**
     * Setter for <code>cattle.volume.storage_driver_id</code>.
     */
    public void setStorageDriverId(Long value);

    /**
     * Getter for <code>cattle.volume.storage_driver_id</code>.
     */
    @Column(name = "storage_driver_id", precision = 19)
    public Long getStorageDriverId();

    /**
     * Setter for <code>cattle.volume.size_mb</code>.
     */
    public void setSizeMb(Long value);

    /**
     * Getter for <code>cattle.volume.size_mb</code>.
     */
    @Column(name = "size_mb", precision = 19)
    public Long getSizeMb();

    /**
     * Setter for <code>cattle.volume.storage_pool_id</code>.
     */
    public void setStoragePoolId(Long value);

    /**
     * Getter for <code>cattle.volume.storage_pool_id</code>.
     */
    @Column(name = "storage_pool_id", precision = 19)
    public Long getStoragePoolId();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common interface Volume
     */
    public void from(io.cattle.platform.core.model.Volume from);

    /**
     * Copy data into another generated Record/POJO implementing the common interface Volume
     */
    public <E extends io.cattle.platform.core.model.Volume> E into(E into);
}
