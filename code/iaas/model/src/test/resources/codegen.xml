<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.2.0.xsd">
    <!-- Configure the database connection here -->
    <jdbc>
        <driver>org.drizzle.jdbc.DrizzleDriver</driver>
        <url>jdbc:mysql:thin://localhost:3306/cattle</url>
        <user>cattle</user>
        <password>cattle</password>
    </jdbc>

    <generator>
        <!-- The default code generator. You can override this one, to generate 
            your own code style Defaults to org.jooq.util.DefaultGenerator -->
        <name>io.cattle.platform.db.jooq.generator.JavaGenerator</name>

        <strategy>
            <name>io.cattle.platform.db.jooq.generator.ModelStrategy</name>
        </strategy>

        <database>
            <!-- The database type. The format here is: org.util.[database].[database]Database -->
            <name>org.jooq.util.mysql.MySQLDatabase</name>

            <!-- The database schema (or in the absence of schema support, 
                in your RDBMS this can be the owner, user, database name) to be generated -->
            <inputSchema>cattle</inputSchema>

            <!-- All elements that are generated from your schema (A Java 
                regular expression. Use the pipe to separate several expressions) Watch out 
                for case-sensitivity. Depending on your database, this might be important! -->
            <includes>.*</includes>

            <!-- All elements that are excluded from your schema (A Java 
                regular expression. Use the pipe to separate several expressions). Excludes 
                match before includes -->
            <!--  <excludes>.*proc</excludes> -->

            <includeExcludeColumns>true</includeExcludeColumns>

            <excludes>.*ui_.*|.*catalog.*|.*load_balancer.*|.*machine_driver.account_id|.*snapshot_storage_pool_map.*|.*vnet.*|.*network_service.*|.*instance.system_container.*|.*agent_group.*|.*offering.*|.*ip_association.*|.*ip_pool.*|.*nic.subnet_id.*|.*service_index.account_id.*|.*service.selector_link.*|.*credential_instance_map.*|.*zone.*|.*snapshot.*|.*backup.*|.*backoff.*|.*image.*|.*volume.device_number.*|.*volume.attached_state.*|.*volume.instance_id.*|.*allocation_state.*|.*label.*|cattle.port.*|.*port_id.*|.*nic.*|.*ip_address.*|.*instance_link.*|cattle.instance_host_map.*|.*volume_storage_pool_map.*</excludes>

            <unsignedTypes>false</unsignedTypes>

            <customTypes>
                <customType>
                    <name>java.util.Date</name>
                    <converter>io.cattle.platform.db.jooq.converter.DateConverter</converter>
                </customType>
                <customType>
                    <name>java.util.Map&lt;String,Object&gt;</name>
                    <converter>io.cattle.platform.db.jooq.converter.DataConverter</converter>
                </customType>
            </customTypes>
            <forcedTypes>
                <forcedType>
                    <name>java.util.Date</name>
                    <types>datetime</types>
                </forcedType>
                <forcedType>
                    <name>java.util.Map&lt;String,Object&gt;</name>
                    <expressions>.*\.data|.*\.log</expressions>
                </forcedType>
            </forcedTypes>
        </database>

        <target>
            <!-- The destination package of your generated classes (within 
                the destination directory) -->
            <packageName>io.cattle.platform.core.model</packageName>

            <!-- The destination directory of your generated classes -->
            <directory>src/main/java</directory>
        </target>
        <generate>
            <interfaces>true</interfaces>
            <pojos>false</pojos>
            <daos>false</daos>
            <jpaAnnotations>true</jpaAnnotations>
            <immutablePojos>false</immutablePojos>
        </generate>
    </generator>
</configuration>
