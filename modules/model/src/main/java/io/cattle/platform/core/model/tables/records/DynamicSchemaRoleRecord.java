/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables.records;


import io.cattle.platform.core.model.DynamicSchemaRole;
import io.cattle.platform.core.model.tables.DynamicSchemaRoleTable;
import io.cattle.platform.db.jooq.utils.TableRecordJaxb;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "dynamic_schema_role", schema = "cattle")
public class DynamicSchemaRoleRecord extends UpdatableRecordImpl<DynamicSchemaRoleRecord> implements TableRecordJaxb, Record3<Long, Long, String>, DynamicSchemaRole {

    private static final long serialVersionUID = -1186518502;

    /**
     * Setter for <code>cattle.dynamic_schema_role.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cattle.dynamic_schema_role.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cattle.dynamic_schema_role.dynamic_schema_id</code>.
     */
    @Override
    public void setDynamicSchemaId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cattle.dynamic_schema_role.dynamic_schema_id</code>.
     */
    @Column(name = "dynamic_schema_id", precision = 19)
    @Override
    public Long getDynamicSchemaId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cattle.dynamic_schema_role.role</code>.
     */
    @Override
    public void setRole(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cattle.dynamic_schema_role.role</code>.
     */
    @Column(name = "role", nullable = false, length = 255)
    @Override
    public String getRole() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Long, Long, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE.DYNAMIC_SCHEMA_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE.ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getDynamicSchemaId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DynamicSchemaRoleRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DynamicSchemaRoleRecord value2(Long value) {
        setDynamicSchemaId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DynamicSchemaRoleRecord value3(String value) {
        setRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DynamicSchemaRoleRecord values(Long value1, Long value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(DynamicSchemaRole from) {
        setId(from.getId());
        setDynamicSchemaId(from.getDynamicSchemaId());
        setRole(from.getRole());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends DynamicSchemaRole> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DynamicSchemaRoleRecord
     */
    public DynamicSchemaRoleRecord() {
        super(DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE);
    }

    /**
     * Create a detached, initialised DynamicSchemaRoleRecord
     */
    public DynamicSchemaRoleRecord(Long id, Long dynamicSchemaId, String role) {
        super(DynamicSchemaRoleTable.DYNAMIC_SCHEMA_ROLE);

        set(0, id);
        set(1, dynamicSchemaId);
        set(2, role);
    }
}
