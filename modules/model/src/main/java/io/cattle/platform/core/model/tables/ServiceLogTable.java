/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ServiceLogRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceLogTable extends TableImpl<ServiceLogRecord> {

    private static final long serialVersionUID = -710824202;

    /**
     * The reference instance of <code>cattle.service_log</code>
     */
    public static final ServiceLogTable SERVICE_LOG = new ServiceLogTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceLogRecord> getRecordType() {
        return ServiceLogRecord.class;
    }

    /**
     * The column <code>cattle.service_log.id</code>.
     */
    public final TableField<ServiceLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.service_log.account_id</code>.
     */
    public final TableField<ServiceLogRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.service_log.kind</code>.
     */
    public final TableField<ServiceLogRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.service_log.description</code>.
     */
    public final TableField<ServiceLogRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>cattle.service_log.created</code>.
     */
    public final TableField<ServiceLogRecord, Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.service_log.data</code>.
     */
    public final TableField<ServiceLogRecord, Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.service_log.end_time</code>.
     */
    public final TableField<ServiceLogRecord, Date> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.service_log.event_type</code>.
     */
    public final TableField<ServiceLogRecord, String> EVENT_TYPE = createField("event_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.service_log.service_id</code>.
     */
    public final TableField<ServiceLogRecord, Long> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.service_log.instance_id</code>.
     */
    public final TableField<ServiceLogRecord, Long> INSTANCE_ID = createField("instance_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.service_log.transaction_id</code>.
     */
    public final TableField<ServiceLogRecord, String> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.service_log.sub_log</code>.
     */
    public final TableField<ServiceLogRecord, Boolean> SUB_LOG = createField("sub_log", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>cattle.service_log.level</code>.
     */
    public final TableField<ServiceLogRecord, String> LEVEL = createField("level", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.service_log.deployment_unit_id</code>.
     */
    public final TableField<ServiceLogRecord, Long> DEPLOYMENT_UNIT_ID = createField("deployment_unit_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>cattle.service_log</code> table reference
     */
    public ServiceLogTable() {
        this("service_log", null);
    }

    /**
     * Create an aliased <code>cattle.service_log</code> table reference
     */
    public ServiceLogTable(String alias) {
        this(alias, SERVICE_LOG);
    }

    private ServiceLogTable(String alias, Table<ServiceLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceLogTable(String alias, Table<ServiceLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ServiceLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_SERVICE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceLogRecord> getPrimaryKey() {
        return Keys.KEY_SERVICE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceLogRecord>>asList(Keys.KEY_SERVICE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ServiceLogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ServiceLogRecord, ?>>asList(Keys.FK_SERVICE_LOG__ACCOUNT_ID, Keys.FK_SERVICE_LOG__SERVICE_ID, Keys.FK_SERVICE_LOG__INSTANCE_ID, Keys.FK_SERVICE_LOG__DEPLOYMENT_UNIT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceLogTable as(String alias) {
        return new ServiceLogTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceLogTable rename(String name) {
        return new ServiceLogTable(name, null);
    }
}
