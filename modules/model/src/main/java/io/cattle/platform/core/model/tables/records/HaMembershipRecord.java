/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables.records;


import io.cattle.platform.core.model.HaMembership;
import io.cattle.platform.core.model.tables.HaMembershipTable;
import io.cattle.platform.db.jooq.utils.TableRecordJaxb;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "ha_membership", schema = "cattle")
public class HaMembershipRecord extends UpdatableRecordImpl<HaMembershipRecord> implements TableRecordJaxb, Record6<Long, String, String, Long, String, Boolean>, HaMembership {

    private static final long serialVersionUID = -1340742942;

    /**
     * Setter for <code>cattle.ha_membership.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cattle.ha_membership.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cattle.ha_membership.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cattle.ha_membership.name</code>.
     */
    @Column(name = "name", length = 255)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cattle.ha_membership.uuid</code>.
     */
    @Override
    public void setUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cattle.ha_membership.uuid</code>.
     */
    @Column(name = "uuid", unique = true, nullable = false, length = 128)
    @Override
    public String getUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cattle.ha_membership.heartbeat</code>.
     */
    @Override
    public void setHeartbeat(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>cattle.ha_membership.heartbeat</code>.
     */
    @Column(name = "heartbeat", precision = 19)
    @Override
    public Long getHeartbeat() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>cattle.ha_membership.config</code>.
     */
    @Override
    public void setConfig(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cattle.ha_membership.config</code>.
     */
    @Column(name = "config", length = 16777215)
    @Override
    public String getConfig() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cattle.ha_membership.clustered</code>.
     */
    @Override
    public void setClustered(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>cattle.ha_membership.clustered</code>.
     */
    @Column(name = "clustered", nullable = false, precision = 1)
    @Override
    public Boolean getClustered() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Long, String, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return HaMembershipTable.HA_MEMBERSHIP.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return HaMembershipTable.HA_MEMBERSHIP.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return HaMembershipTable.HA_MEMBERSHIP.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return HaMembershipTable.HA_MEMBERSHIP.HEARTBEAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return HaMembershipTable.HA_MEMBERSHIP.CONFIG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field6() {
        return HaMembershipTable.HA_MEMBERSHIP.CLUSTERED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getHeartbeat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getConfig();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value6() {
        return getClustered();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord value3(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord value4(Long value) {
        setHeartbeat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord value5(String value) {
        setConfig(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord value6(Boolean value) {
        setClustered(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipRecord values(Long value1, String value2, String value3, Long value4, String value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(HaMembership from) {
        setId(from.getId());
        setName(from.getName());
        setUuid(from.getUuid());
        setHeartbeat(from.getHeartbeat());
        setConfig(from.getConfig());
        setClustered(from.getClustered());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends HaMembership> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HaMembershipRecord
     */
    public HaMembershipRecord() {
        super(HaMembershipTable.HA_MEMBERSHIP);
    }

    /**
     * Create a detached, initialised HaMembershipRecord
     */
    public HaMembershipRecord(Long id, String name, String uuid, Long heartbeat, String config, Boolean clustered) {
        super(HaMembershipTable.HA_MEMBERSHIP);

        set(0, id);
        set(1, name);
        set(2, uuid);
        set(3, heartbeat);
        set(4, config);
        set(5, clustered);
    }
}
