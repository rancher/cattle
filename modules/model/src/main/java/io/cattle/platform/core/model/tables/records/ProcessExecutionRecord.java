/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables.records;


import io.cattle.platform.core.model.ProcessExecution;
import io.cattle.platform.core.model.tables.ProcessExecutionTable;
import io.cattle.platform.db.jooq.utils.TableRecordJaxb;

import java.util.Date;
import java.util.Map;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "process_execution", schema = "cattle")
public class ProcessExecutionRecord extends UpdatableRecordImpl<ProcessExecutionRecord> implements TableRecordJaxb, Record5<Long, Long, String, Map<String,Object>, Date>, ProcessExecution {

    private static final long serialVersionUID = 1965608772;

    /**
     * Setter for <code>cattle.process_execution.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cattle.process_execution.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false, precision = 19)
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cattle.process_execution.process_instance_id</code>.
     */
    @Override
    public void setProcessInstanceId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cattle.process_execution.process_instance_id</code>.
     */
    @Column(name = "process_instance_id", nullable = false, precision = 19)
    @Override
    public Long getProcessInstanceId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cattle.process_execution.uuid</code>.
     */
    @Override
    public void setUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cattle.process_execution.uuid</code>.
     */
    @Column(name = "uuid", unique = true, nullable = false, length = 128)
    @Override
    public String getUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cattle.process_execution.log</code>.
     */
    @Override
    public void setLog(Map<String,Object> value) {
        set(3, value);
    }

    /**
     * Getter for <code>cattle.process_execution.log</code>.
     */
    @Column(name = "log", length = 16777215)
    @Override
    public Map<String,Object> getLog() {
        return (Map<String,Object>) get(3);
    }

    /**
     * Setter for <code>cattle.process_execution.created</code>.
     */
    @Override
    public void setCreated(Date value) {
        set(4, value);
    }

    /**
     * Getter for <code>cattle.process_execution.created</code>.
     */
    @Column(name = "created")
    @Override
    public Date getCreated() {
        return (Date) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Long, String, Map<String,Object>, Date> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Long, Long, String, Map<String,Object>, Date> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ProcessExecutionTable.PROCESS_EXECUTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return ProcessExecutionTable.PROCESS_EXECUTION.PROCESS_INSTANCE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ProcessExecutionTable.PROCESS_EXECUTION.UUID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Map<String,Object>> field4() {
        return ProcessExecutionTable.PROCESS_EXECUTION.LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field5() {
        return ProcessExecutionTable.PROCESS_EXECUTION.CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getProcessInstanceId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getUuid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Map<String,Object> value4() {
        return getLog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value5() {
        return getCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionRecord value2(Long value) {
        setProcessInstanceId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionRecord value3(String value) {
        setUuid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionRecord value4(Map<String,Object> value) {
        setLog(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionRecord value5(Date value) {
        setCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionRecord values(Long value1, Long value2, String value3, Map<String,Object> value4, Date value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ProcessExecution from) {
        setId(from.getId());
        setProcessInstanceId(from.getProcessInstanceId());
        setUuid(from.getUuid());
        setLog(from.getLog());
        setCreated(from.getCreated());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ProcessExecution> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProcessExecutionRecord
     */
    public ProcessExecutionRecord() {
        super(ProcessExecutionTable.PROCESS_EXECUTION);
    }

    /**
     * Create a detached, initialised ProcessExecutionRecord
     */
    public ProcessExecutionRecord(Long id, Long processInstanceId, String uuid, Map<String,Object> log, Date created) {
        super(ProcessExecutionTable.PROCESS_EXECUTION);

        set(0, id);
        set(1, processInstanceId);
        set(2, uuid);
        set(3, log);
        set(4, created);
    }
}
