/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.HaMembershipRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HaMembershipTable extends TableImpl<HaMembershipRecord> {

    private static final long serialVersionUID = 1685033195;

    /**
     * The reference instance of <code>cattle.ha_membership</code>
     */
    public static final HaMembershipTable HA_MEMBERSHIP = new HaMembershipTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HaMembershipRecord> getRecordType() {
        return HaMembershipRecord.class;
    }

    /**
     * The column <code>cattle.ha_membership.id</code>.
     */
    public final TableField<HaMembershipRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.ha_membership.name</code>.
     */
    public final TableField<HaMembershipRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.ha_membership.uuid</code>.
     */
    public final TableField<HaMembershipRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.ha_membership.heartbeat</code>.
     */
    public final TableField<HaMembershipRecord, Long> HEARTBEAT = createField("heartbeat", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.ha_membership.config</code>.
     */
    public final TableField<HaMembershipRecord, String> CONFIG = createField("config", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>cattle.ha_membership.clustered</code>.
     */
    public final TableField<HaMembershipRecord, Boolean> CLUSTERED = createField("clustered", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * Create a <code>cattle.ha_membership</code> table reference
     */
    public HaMembershipTable() {
        this("ha_membership", null);
    }

    /**
     * Create an aliased <code>cattle.ha_membership</code> table reference
     */
    public HaMembershipTable(String alias) {
        this(alias, HA_MEMBERSHIP);
    }

    private HaMembershipTable(String alias, Table<HaMembershipRecord> aliased) {
        this(alias, aliased, null);
    }

    private HaMembershipTable(String alias, Table<HaMembershipRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HaMembershipRecord, Long> getIdentity() {
        return Keys.IDENTITY_HA_MEMBERSHIP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HaMembershipRecord> getPrimaryKey() {
        return Keys.KEY_HA_MEMBERSHIP_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HaMembershipRecord>> getKeys() {
        return Arrays.<UniqueKey<HaMembershipRecord>>asList(Keys.KEY_HA_MEMBERSHIP_PRIMARY, Keys.KEY_HA_MEMBERSHIP_IDX_CLUSTER_MEMBERSHIP_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HaMembershipTable as(String alias) {
        return new HaMembershipTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HaMembershipTable rename(String name) {
        return new HaMembershipTable(name, null);
    }
}
