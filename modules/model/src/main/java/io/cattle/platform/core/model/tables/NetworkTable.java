/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.NetworkRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NetworkTable extends TableImpl<NetworkRecord> {

    private static final long serialVersionUID = -1539832348;

    /**
     * The reference instance of <code>cattle.network</code>
     */
    public static final NetworkTable NETWORK = new NetworkTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NetworkRecord> getRecordType() {
        return NetworkRecord.class;
    }

    /**
     * The column <code>cattle.network.id</code>.
     */
    public final TableField<NetworkRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.network.name</code>.
     */
    public final TableField<NetworkRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.network.kind</code>.
     */
    public final TableField<NetworkRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.network.uuid</code>.
     */
    public final TableField<NetworkRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.network.description</code>.
     */
    public final TableField<NetworkRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>cattle.network.state</code>.
     */
    public final TableField<NetworkRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.network.created</code>.
     */
    public final TableField<NetworkRecord, Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.network.removed</code>.
     */
    public final TableField<NetworkRecord, Date> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.network.remove_time</code>.
     */
    public final TableField<NetworkRecord, Date> REMOVE_TIME = createField("remove_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.network.data</code>.
     */
    public final TableField<NetworkRecord, Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.network.domain</code>.
     */
    public final TableField<NetworkRecord, String> DOMAIN = createField("domain", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.network.network_driver_id</code>.
     */
    public final TableField<NetworkRecord, Long> NETWORK_DRIVER_ID = createField("network_driver_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.network.cluster_id</code>.
     */
    public final TableField<NetworkRecord, Long> CLUSTER_ID = createField("cluster_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>cattle.network</code> table reference
     */
    public NetworkTable() {
        this("network", null);
    }

    /**
     * Create an aliased <code>cattle.network</code> table reference
     */
    public NetworkTable(String alias) {
        this(alias, NETWORK);
    }

    private NetworkTable(String alias, Table<NetworkRecord> aliased) {
        this(alias, aliased, null);
    }

    private NetworkTable(String alias, Table<NetworkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NetworkRecord, Long> getIdentity() {
        return Keys.IDENTITY_NETWORK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NetworkRecord> getPrimaryKey() {
        return Keys.KEY_NETWORK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NetworkRecord>> getKeys() {
        return Arrays.<UniqueKey<NetworkRecord>>asList(Keys.KEY_NETWORK_PRIMARY, Keys.KEY_NETWORK_IDX_NETWORK_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NetworkRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NetworkRecord, ?>>asList(Keys.FK_NETWORK__NETWORK_DRIVER_ID, Keys.FK_NETWORK__CLUSTER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NetworkTable as(String alias) {
        return new NetworkTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NetworkTable rename(String name) {
        return new NetworkTable(name, null);
    }
}
