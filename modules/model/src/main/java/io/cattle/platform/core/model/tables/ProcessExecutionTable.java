/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ProcessExecutionRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessExecutionTable extends TableImpl<ProcessExecutionRecord> {

    private static final long serialVersionUID = 197034879;

    /**
     * The reference instance of <code>cattle.process_execution</code>
     */
    public static final ProcessExecutionTable PROCESS_EXECUTION = new ProcessExecutionTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProcessExecutionRecord> getRecordType() {
        return ProcessExecutionRecord.class;
    }

    /**
     * The column <code>cattle.process_execution.id</code>.
     */
    public final TableField<ProcessExecutionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.process_execution.process_instance_id</code>.
     */
    public final TableField<ProcessExecutionRecord, Long> PROCESS_INSTANCE_ID = createField("process_instance_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.process_execution.uuid</code>.
     */
    public final TableField<ProcessExecutionRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.process_execution.log</code>.
     */
    public final TableField<ProcessExecutionRecord, Map<String,Object>> LOG = createField("log", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.process_execution.created</code>.
     */
    public final TableField<ProcessExecutionRecord, Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * Create a <code>cattle.process_execution</code> table reference
     */
    public ProcessExecutionTable() {
        this("process_execution", null);
    }

    /**
     * Create an aliased <code>cattle.process_execution</code> table reference
     */
    public ProcessExecutionTable(String alias) {
        this(alias, PROCESS_EXECUTION);
    }

    private ProcessExecutionTable(String alias, Table<ProcessExecutionRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProcessExecutionTable(String alias, Table<ProcessExecutionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProcessExecutionRecord, Long> getIdentity() {
        return Keys.IDENTITY_PROCESS_EXECUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProcessExecutionRecord> getPrimaryKey() {
        return Keys.KEY_PROCESS_EXECUTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProcessExecutionRecord>> getKeys() {
        return Arrays.<UniqueKey<ProcessExecutionRecord>>asList(Keys.KEY_PROCESS_EXECUTION_PRIMARY, Keys.KEY_PROCESS_EXECUTION_IDX_PROCESS_EXECUTION__UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProcessExecutionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProcessExecutionRecord, ?>>asList(Keys.FK_PROCESS_EXECUTION_PROCESS_INSTANCE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessExecutionTable as(String alias) {
        return new ProcessExecutionTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProcessExecutionTable rename(String name) {
        return new ProcessExecutionTable(name, null);
    }
}
