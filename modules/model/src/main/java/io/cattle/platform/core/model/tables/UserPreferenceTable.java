/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.UserPreferenceRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserPreferenceTable extends TableImpl<UserPreferenceRecord> {

    private static final long serialVersionUID = 1130704420;

    /**
     * The reference instance of <code>cattle.user_preference</code>
     */
    public static final UserPreferenceTable USER_PREFERENCE = new UserPreferenceTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserPreferenceRecord> getRecordType() {
        return UserPreferenceRecord.class;
    }

    /**
     * The column <code>cattle.user_preference.id</code>.
     */
    public final TableField<UserPreferenceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.user_preference.name</code>.
     */
    public final TableField<UserPreferenceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.user_preference.account_id</code>.
     */
    public final TableField<UserPreferenceRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.user_preference.kind</code>.
     */
    public final TableField<UserPreferenceRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.user_preference.uuid</code>.
     */
    public final TableField<UserPreferenceRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.user_preference.description</code>.
     */
    public final TableField<UserPreferenceRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>cattle.user_preference.created</code>.
     */
    public final TableField<UserPreferenceRecord, Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.user_preference.data</code>.
     */
    public final TableField<UserPreferenceRecord, Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.user_preference.value</code>.
     */
    public final TableField<UserPreferenceRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>cattle.user_preference</code> table reference
     */
    public UserPreferenceTable() {
        this("user_preference", null);
    }

    /**
     * Create an aliased <code>cattle.user_preference</code> table reference
     */
    public UserPreferenceTable(String alias) {
        this(alias, USER_PREFERENCE);
    }

    private UserPreferenceTable(String alias, Table<UserPreferenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserPreferenceTable(String alias, Table<UserPreferenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserPreferenceRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_PREFERENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserPreferenceRecord> getPrimaryKey() {
        return Keys.KEY_USER_PREFERENCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserPreferenceRecord>> getKeys() {
        return Arrays.<UniqueKey<UserPreferenceRecord>>asList(Keys.KEY_USER_PREFERENCE_PRIMARY, Keys.KEY_USER_PREFERENCE_IDX_USER_PREFERENCE_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserPreferenceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserPreferenceRecord, ?>>asList(Keys.FK_USER_PREFERENCE__ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserPreferenceTable as(String alias) {
        return new UserPreferenceTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserPreferenceTable rename(String name) {
        return new UserPreferenceTable(name, null);
    }
}
