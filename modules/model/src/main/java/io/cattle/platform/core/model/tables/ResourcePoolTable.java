/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ResourcePoolRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ResourcePoolTable extends TableImpl<ResourcePoolRecord> {

    private static final long serialVersionUID = 1700431973;

    /**
     * The reference instance of <code>cattle.resource_pool</code>
     */
    public static final ResourcePoolTable RESOURCE_POOL = new ResourcePoolTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourcePoolRecord> getRecordType() {
        return ResourcePoolRecord.class;
    }

    /**
     * The column <code>cattle.resource_pool.id</code>.
     */
    public final TableField<ResourcePoolRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.resource_pool.name</code>.
     */
    public final TableField<ResourcePoolRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.resource_pool.account_id</code>.
     */
    public final TableField<ResourcePoolRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.resource_pool.kind</code>.
     */
    public final TableField<ResourcePoolRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.resource_pool.uuid</code>.
     */
    public final TableField<ResourcePoolRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.resource_pool.description</code>.
     */
    public final TableField<ResourcePoolRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>cattle.resource_pool.state</code>.
     */
    public final TableField<ResourcePoolRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.resource_pool.created</code>.
     */
    public final TableField<ResourcePoolRecord, Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.resource_pool.removed</code>.
     */
    public final TableField<ResourcePoolRecord, Date> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.resource_pool.remove_time</code>.
     */
    public final TableField<ResourcePoolRecord, Date> REMOVE_TIME = createField("remove_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.resource_pool.data</code>.
     */
    public final TableField<ResourcePoolRecord, Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.resource_pool.pool_type</code>.
     */
    public final TableField<ResourcePoolRecord, String> POOL_TYPE = createField("pool_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.resource_pool.pool_id</code>.
     */
    public final TableField<ResourcePoolRecord, Long> POOL_ID = createField("pool_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.resource_pool.item</code>.
     */
    public final TableField<ResourcePoolRecord, String> ITEM = createField("item", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.resource_pool.owner_type</code>.
     */
    public final TableField<ResourcePoolRecord, String> OWNER_TYPE = createField("owner_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cattle.resource_pool.owner_id</code>.
     */
    public final TableField<ResourcePoolRecord, Long> OWNER_ID = createField("owner_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.resource_pool.qualifier</code>.
     */
    public final TableField<ResourcePoolRecord, String> QUALIFIER = createField("qualifier", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("default", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>cattle.resource_pool.sub_owner</code>.
     */
    public final TableField<ResourcePoolRecord, String> SUB_OWNER = createField("sub_owner", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>cattle.resource_pool</code> table reference
     */
    public ResourcePoolTable() {
        this("resource_pool", null);
    }

    /**
     * Create an aliased <code>cattle.resource_pool</code> table reference
     */
    public ResourcePoolTable(String alias) {
        this(alias, RESOURCE_POOL);
    }

    private ResourcePoolTable(String alias, Table<ResourcePoolRecord> aliased) {
        this(alias, aliased, null);
    }

    private ResourcePoolTable(String alias, Table<ResourcePoolRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResourcePoolRecord, Long> getIdentity() {
        return Keys.IDENTITY_RESOURCE_POOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResourcePoolRecord> getPrimaryKey() {
        return Keys.KEY_RESOURCE_POOL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResourcePoolRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourcePoolRecord>>asList(Keys.KEY_RESOURCE_POOL_PRIMARY, Keys.KEY_RESOURCE_POOL_IDX_RESOURCE_POOL_UUID, Keys.KEY_RESOURCE_POOL_IDX_POOL_ITEM2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ResourcePoolRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ResourcePoolRecord, ?>>asList(Keys.FK_RESOURCE_POOL__ACCOUNT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResourcePoolTable as(String alias) {
        return new ResourcePoolTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ResourcePoolTable rename(String name) {
        return new ResourcePoolTable(name, null);
    }
}
