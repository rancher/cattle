/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ProcessInstanceRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessInstanceTable extends TableImpl<ProcessInstanceRecord> {

    private static final long serialVersionUID = 1209898642;

    /**
     * The reference instance of <code>cattle.process_instance</code>
     */
    public static final ProcessInstanceTable PROCESS_INSTANCE = new ProcessInstanceTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProcessInstanceRecord> getRecordType() {
        return ProcessInstanceRecord.class;
    }

    /**
     * The column <code>cattle.process_instance.id</code>.
     */
    public final TableField<ProcessInstanceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.process_instance.start_time</code>.
     */
    public final TableField<ProcessInstanceRecord, Date> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.process_instance.end_time</code>.
     */
    public final TableField<ProcessInstanceRecord, Date> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.process_instance.data</code>.
     */
    public final TableField<ProcessInstanceRecord, Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.process_instance.priority</code>.
     */
    public final TableField<ProcessInstanceRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>cattle.process_instance.process_name</code>.
     */
    public final TableField<ProcessInstanceRecord, String> PROCESS_NAME = createField("process_name", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.resource_type</code>.
     */
    public final TableField<ProcessInstanceRecord, String> RESOURCE_TYPE = createField("resource_type", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.resource_id</code>.
     */
    public final TableField<ProcessInstanceRecord, String> RESOURCE_ID = createField("resource_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.result</code>.
     */
    public final TableField<ProcessInstanceRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.exit_reason</code>.
     */
    public final TableField<ProcessInstanceRecord, String> EXIT_REASON = createField("exit_reason", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.phase</code>.
     */
    public final TableField<ProcessInstanceRecord, String> PHASE = createField("phase", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.start_process_server_id</code>.
     */
    public final TableField<ProcessInstanceRecord, String> START_PROCESS_SERVER_ID = createField("start_process_server_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.running_process_server_id</code>.
     */
    public final TableField<ProcessInstanceRecord, String> RUNNING_PROCESS_SERVER_ID = createField("running_process_server_id", org.jooq.impl.SQLDataType.VARCHAR.length(128), this, "");

    /**
     * The column <code>cattle.process_instance.execution_count</code>.
     */
    public final TableField<ProcessInstanceRecord, Long> EXECUTION_COUNT = createField("execution_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>cattle.process_instance.run_after</code>.
     */
    public final TableField<ProcessInstanceRecord, Date> RUN_AFTER = createField("run_after", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.process_instance.account_id</code>.
     */
    public final TableField<ProcessInstanceRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.process_instance.cluster_id</code>.
     */
    public final TableField<ProcessInstanceRecord, Long> CLUSTER_ID = createField("cluster_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>cattle.process_instance</code> table reference
     */
    public ProcessInstanceTable() {
        this("process_instance", null);
    }

    /**
     * Create an aliased <code>cattle.process_instance</code> table reference
     */
    public ProcessInstanceTable(String alias) {
        this(alias, PROCESS_INSTANCE);
    }

    private ProcessInstanceTable(String alias, Table<ProcessInstanceRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProcessInstanceTable(String alias, Table<ProcessInstanceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ProcessInstanceRecord, Long> getIdentity() {
        return Keys.IDENTITY_PROCESS_INSTANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProcessInstanceRecord> getPrimaryKey() {
        return Keys.KEY_PROCESS_INSTANCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProcessInstanceRecord>> getKeys() {
        return Arrays.<UniqueKey<ProcessInstanceRecord>>asList(Keys.KEY_PROCESS_INSTANCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ProcessInstanceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProcessInstanceRecord, ?>>asList(Keys.FK_PROCESS_INSTANCE__ACCOUNT_ID, Keys.FK_PROCESS_INSTANCE__CLUSTER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessInstanceTable as(String alias) {
        return new ProcessInstanceTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProcessInstanceTable rename(String name) {
        return new ProcessInstanceTable(name, null);
    }
}
