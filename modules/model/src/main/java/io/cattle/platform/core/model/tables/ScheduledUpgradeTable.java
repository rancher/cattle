/*
 * This file is generated by jOOQ.
*/
package io.cattle.platform.core.model.tables;


import io.cattle.platform.core.model.CattleTable;
import io.cattle.platform.core.model.Keys;
import io.cattle.platform.core.model.tables.records.ScheduledUpgradeRecord;
import io.cattle.platform.db.jooq.converter.DataConverter;
import io.cattle.platform.db.jooq.converter.DateConverter;

import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Map;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScheduledUpgradeTable extends TableImpl<ScheduledUpgradeRecord> {

    private static final long serialVersionUID = 833717715;

    /**
     * The reference instance of <code>cattle.scheduled_upgrade</code>
     */
    public static final ScheduledUpgradeTable SCHEDULED_UPGRADE = new ScheduledUpgradeTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduledUpgradeRecord> getRecordType() {
        return ScheduledUpgradeRecord.class;
    }

    /**
     * The column <code>cattle.scheduled_upgrade.id</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>cattle.scheduled_upgrade.account_id</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.scheduled_upgrade.kind</code>.
     */
    public final TableField<ScheduledUpgradeRecord, String> KIND = createField("kind", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>cattle.scheduled_upgrade.uuid</code>.
     */
    public final TableField<ScheduledUpgradeRecord, String> UUID = createField("uuid", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.scheduled_upgrade.state</code>.
     */
    public final TableField<ScheduledUpgradeRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>cattle.scheduled_upgrade.created</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Date> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.removed</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Date> REMOVED = createField("removed", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.remove_time</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Date> REMOVE_TIME = createField("remove_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.run_after</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Date> RUN_AFTER = createField("run_after", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.data</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Map<String,Object>> DATA = createField("data", org.jooq.impl.SQLDataType.CLOB, this, "", new DataConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.environment_id</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Long> STACK_ID = createField("environment_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cattle.scheduled_upgrade.started</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Date> STARTED = createField("started", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.finished</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Date> FINISHED = createField("finished", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new DateConverter());

    /**
     * The column <code>cattle.scheduled_upgrade.priority</code>.
     */
    public final TableField<ScheduledUpgradeRecord, Long> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>cattle.scheduled_upgrade</code> table reference
     */
    public ScheduledUpgradeTable() {
        this("scheduled_upgrade", null);
    }

    /**
     * Create an aliased <code>cattle.scheduled_upgrade</code> table reference
     */
    public ScheduledUpgradeTable(String alias) {
        this(alias, SCHEDULED_UPGRADE);
    }

    private ScheduledUpgradeTable(String alias, Table<ScheduledUpgradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScheduledUpgradeTable(String alias, Table<ScheduledUpgradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CattleTable.CATTLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ScheduledUpgradeRecord, Long> getIdentity() {
        return Keys.IDENTITY_SCHEDULED_UPGRADE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScheduledUpgradeRecord> getPrimaryKey() {
        return Keys.KEY_SCHEDULED_UPGRADE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScheduledUpgradeRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduledUpgradeRecord>>asList(Keys.KEY_SCHEDULED_UPGRADE_PRIMARY, Keys.KEY_SCHEDULED_UPGRADE_IDX_SCHEDULED_UPGRADE_UUID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ScheduledUpgradeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScheduledUpgradeRecord, ?>>asList(Keys.FK_SCHEDULED_UPGRADE__ACCOUNT_ID, Keys.FK_SCHEDULED_UPGRADE__ENVIRONMENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScheduledUpgradeTable as(String alias) {
        return new ScheduledUpgradeTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScheduledUpgradeTable rename(String name) {
        return new ScheduledUpgradeTable(name, null);
    }
}
