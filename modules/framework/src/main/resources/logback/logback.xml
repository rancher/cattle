<configuration scan="true" scanPeriod="5 seconds">

    <define name="logstash" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.logstash</name>
    </define>

    <define name="events" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.events</name>
    </define>

    <define name="file" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.file</name>
    </define>

    <define name="error" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.error</name>
    </define>

    <define name="gelf" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.gelf</name>
    </define>

    <define name="console" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.console</name>
    </define>

    <define name="logstashSyslog" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.syslog</name>
    </define>

    <define name="logstashFile" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.logstash.file</name>
    </define>

    <define name="logstashConsole" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.output.logstash.console</name>
    </define>

    <define name="pattern" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.pattern</name>
    </define>

    <define name="consolePattern" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.console.pattern</name>
    </define>

    <define name="jooqLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.jooq.level</name>
    </define>

    <define name="fileNamePattern" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.file.name.pattern</name>
    </define>

    <define name="jooqLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.jooq.level</name>
    </define>

    <define name="rootLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.root.level</name>
    </define>

    <define name="consoleLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.console.level</name>
    </define>

    <define name="consoleStatusLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.console.status.level</name>
    </define>

    <define name="otherLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.other.level</name>
    </define>

    <define name="liquibaseLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.liquibase.level</name>
    </define>

    <define name="aggregationLevel" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.aggregation.level</name>
    </define>

    <define name="maxHistory" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.max.history</name>
    </define>

    <define name="logDir" class="io.cattle.platform.logback.ArchaiusProperty" >
        <name>logback.log.dir</name>
    </define>

    <define name="serverId" class="io.cattle.platform.logback.ServerIdProperty" />

    <jmxConfigurator/>

    <if condition='property("logstashConsole").equals("true")' >
        <then>
            <include resource="logback/logback-logstash-console.xml" />
        </then>
    </if>

    <if condition='property("logstashFile").equals("true")' >
        <then>
            <include resource="logback/logback-logstash-file.xml" />
        </then>
    </if>

    <if condition='property("logstashSyslog").equals("true")' >
        <then>
            <include resource="logback/logback-logstash-syslog.xml" />
        </then>
    </if>

    <if condition='property("file").equals("true")' >
        <then>
            <include resource="logback/logback-file.xml" />
        </then>
    </if>

    <if condition='property("error").equals("true")' >
        <then>
            <include resource="logback/logback-error.xml" />
        </then>
    </if>

    <if condition='property("events").equals("true")' >
        <then>
            <include resource="logback/logback-events.xml" />
        </then>
    </if>

    <if condition='property("gelf").equals("true")' >
        <then>
            <include resource="logback/logback-gelf.xml" />
        </then>
    </if>

    <if condition='property("console").equals("true")' >
        <then>
            <include resource="logback/logback-console.xml" />
        </then>
    </if>

    <include optional="true" resource="logback-additional.xml" />

    <logger name="liquibase">
        <level value="${liquibaseLevel}" />
    </logger>

    <logger name="com">
        <level value="${otherLevel}" />
    </logger>

    <logger name="org">
        <level value="${otherLevel}" />
    </logger>

    <logger name="io">
        <level value="${otherLevel}" />
    </logger>

    <logger name="freemarker">
        <level value="${otherLevel}" />
    </logger>

    <logger name="io.cattle">
        <level value="${rootLevel}" />
    </logger>

    <logger name="org.apache.cloudstack">
        <level value="${rootLevel}" />
    </logger>

    <logger name="io.cattle.platform.agent.connection.ssh.EofAwareChannelExec" >
        <level value="${otherLevel}" />
    </logger>

    <logger name="io.cattle.platform.agent.connection.ssh.connection.EofClosingTcpipServerChannel" >
        <level value="${otherLevel}" />
    </logger>

    <logger name="EventLogOut" additivity="false" >
    </logger>

    <logger name="EventLogIn" additivity="false" >
    </logger>

<!--
    <logger name="io.cattle.platform.lock.provider.impl.StandardLock" additivity="false">
        <level value="TRACE" />
        <appender-ref ref="FILE" />
    </logger>

    <logger name="io.cattle.platform.configitem.version.impl.ConfigUpdatePublisher" additivity="false">
        <level value="TRACE" />
        <appender-ref ref="FILE" />
    </logger>
-->

<!--
    <logger name="org.apache.cloudstack.spring.module.context.TimedXmlBeanDefinitionReader" >
        <level value="${otherLevel}" />
    </logger>
-->

    <logger name="org.jooq" >
        <level value="${jooqLevel}" />
    </logger>

    <root>
        <level value="${rootLevel}" />
    </root>

</configuration>
