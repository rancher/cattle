access.log=/dev/null
account.by.key.credential.types=agentApiKey, apiKey, usernamePassword
account.type.admin.all.accounts=true
account.type.admin.list.all.accounts=true
account.type.admin.list.all.settings=true
account.type.admin.plain.id.option=true
account.type.admin.role.option=true
account.type.admin.subscription.style=raw
account.type.agent.plain.id.option=true
account.type.service.all.accounts=true
account.type.service.list.all.accounts=true
account.type.service.list.all.settings=true
account.type.service.plain.id.option=true
account.type.service.subscription.style=raw
account.type.superadmin.all.accounts=true
account.type.superadmin.list.all.accounts=true
account.type.superadmin.list.all.settings=true
account.type.superadmin.plain.id.option=true
account.type.superadmin.role.option=true
account.type.superadmin.subscription.style=raw
account.version=2
activate.by.default.account=true
activate.by.default.agent=true
activate.by.default.credential=true
activate.by.default.storagePool=true
agent.activate.ping.retries=30
agent.activate.ping.timeout=2000
agent.disconnect.after.seconds=180
agent.filter.assign.uri=true
agent.filter.default.uri.reverse.dns=true
agent.filter.default.uri=ssh://%s@%s:22
agent.filter.default.user=root
agent.instance.register.script=registration/registration.sh
agent.instance.register.yaml=registration/registration.yaml
agent.instance.register.url=
agent.ping.instances.every=3
agent.ping.reconnect.after.failed.count=6
agent.ping.resources.every=12
agent.ping.stats.every=24
agent.ping.timeout.seconds=15
agent.resource.monitor.cache.resource.seconds=300
agent.resources=host,storagePool
allow.simulators=false
api.allow.client.override=false
api.allow.github.proxy=true
api.auth.jwt.token.expiry=57600000
api.auth.local.validate.description=
api.auth.local.validate.timeout.milliseconds=10000
api.auth.local.validate.url=
api.auth.realm=Enter API access key and secret key as username and password
api.auth.restrict.concurrent.sessions=false
api.encryption.encrypter=AES256
api.encryption.hasher=SHA256
api.encryption.key=keys.properties
api.encryption.password=PBKDF2
api.event.change.exclude.types=publish
api.github.scheme=https://
api.ignore.paths=/static,/ping,/healthcheck
api.interceptor.config=
api.interceptor.config.file=config.json
api.proxy.allow=true
api.proxy.whitelist=*.amazonaws.com,*.amazonaws.com.cn,forums.rancher.com,api.exoscale.ch,api.digitalocean.com,api.packet.net
api.request.options=_plainId,_role,_actionLinks,_removed
api.security.enabled=false
api.security.role.priority.member=1
api.security.role.priority.owner=0
api.security.role.priority.readonly=3
api.security.role.priority.restricted=2
api.show.removed.for.seconds=-300
api.sub.max.pings=8640
api.sub.ping.interval.millis=5000
audit_log.purge.after.seconds=2592000
auth.service.executable=rancher-auth-service
auth.service.execute=false
bootstrap.source=registration/bootstrap.sh
catalog.execute=true
catalog.refresh.interval.seconds=300
catalog.service.executable=rancher-catalog-service
# If you change this change rancher/server's server/Dockerfile too
catalog.url={"catalogs":{"community":{"url":"https://git.rancher.io/community-catalog.git","branch":"master"},"library":{"url":"https://github.com/ibuildthecloud/rancher-catalog.git","branch":"master"}}}
cattle.http.port=8080
cattle.http.proxied.port=8081
cattle.https.port=0
cattle.url.path=/v3
cert.expiry.days=3650
cleanup.query_limit.rows=1000
cluster.checkin.misses=3
cluster.checkin.seconds=5
cluster.default.http.port=8080
cluster.default.port=9345
cluster.id.file=${cattle.home}/etc/cluster-id
compose.executor.execute=true
compose.executor.service.executable=rancher-compose-executor
concurrent.scheduled.upgrades=5
console.agent.path=/v1/console/
dbcp.jmx.prefix=org.apache.commons.dbcp:ManagedBasicDataSource=
default.cluster.template={"systemStacks":[\
  {"name":"core-services","externalId":"catalog://library:infra*core-services:v2.0.0-alpha1"},\
  {"name":"network-driver","externalId":"catalog://library:infra*ipsec:11"},\
  {"name":"healthcheck","externalId":"catalog://library:infra*healthcheck:3"}\
  ]}
default.lock.wait.millis=10000
# do not set to "managed" that will cause a loop
default.managed.network=bridge
default.schedule.upgrade.delay.minutes=1440
deployment.unit.batch.size=200
docker.register.command=sudo docker run --rm --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/rancher:/var/lib/rancher %s %s
engine.install.url=https://releases.rancher.com/install-docker/1.12.sh
environment.services.port.range=49153-65535
eventing.pool.default.count=500
eventing.pool.process.count=100
eventing.reply.pool.maxidle=1000
eventing.reply.pool.maxtotal=1000000
eventing.retry=1
eventing.timeout.millis=45000
events.purge.after.seconds=43200
exec.agent.path=/v1/exec/
global.pool.jmxnamebase=org.apache.commons.pool2:type=GenericObjectPool,name=
global.pool.maxidle=50
global.pool.maxtotal=1000
global.pool.maxwait=1000
global.pool.maxwaitmillis=1000
global.pool.minevictableidletimemillis=300000
global.pool.testonborrow=false
global.pool.testwhileidle=true
global.pool.timebetweenevictionrunsmillis=60000
graphite.host=
graphite.options=
graphite.port=2003
hazelcast.group.name=
hazelcast.group.password=
hazelcast.jmx=true
hazelcast.logging.type=slf4j
healthcheck.default.initializing.timeout=120000
host.api.auth.header=Authorization
host.api.auth.header.value=BEARER %s
host.api.keygen.on.startup=${ssh.keygen.on.startup}
host.api.proxy.backend.path=/v1/connectbackend
host.logs.path=/v1/logs/
host.port.end=39999
host.port.start=20000
host.proxy.jwt.expiration.seconds=57600
host.proxy.path=/v1/container-proxy/
host.remove.delay.seconds=-1
host.remove.delay.startup.seconds=900
host.socketproxy.path=/v1/dockersocket/
idempotent.retry.count=2
instance.compute.tries=5
instance.restart.max.backoff.exponent=9
jmx.trans.export.interval.seconds=30
jmx.trans.query.interval.seconds=5
jwt.default.expiration.seconds=300
jwt.default.issuer=http://cattle.io
jwt.default.subject=cattle
k8s.register.command=kubectl apply -f %s
link.containerstats.path=/v1/containerstats
link.hoststats.path=/v1/hoststats
logback.aggregation.level=INFO
logback.config=logback/logback.xml
logback.console.level=DEBUG
logback.console.pattern=%date{ISO8601} %-5.5p %X{prettyResource} %X{logicPath} [%t] [%logger{36}] %m %xEx%n
logback.console.status.level=INFO
logback.event.pattern=%m%n
logback.file.name.pattern=.%d{yyyy-MM-dd}.%i.log.gz
logback.jooq.level=WARN
logback.liquibase.level=WARN
logback.log.dir=${cattle.home}
logback.max.history=5
logback.other.level=WARN
logback.output.console=true
logback.output.error=true
logback.output.events=true
logback.output.file=true
logback.output.gelf=false
logback.output.gelf.host=localhost
logback.output.gelf.port=12201
logback.output.logstash.file=false
logback.output.logstash.syslog=false
logback.output.logstash.syslog.host=localhost
logback.output.logstash.syslog.port=5544
logback.output.syslog=false
logback.pattern=%date{ISO8601} %-5.5p [%X{processUuid}:%X{processId}] [%X{prettyResource}] [%X{logicPath}] [%X{agentId}] [%-15.15t] [%-36.36logger{36}] %m %xEx%n
logback.root.level=DEBUG
loop.default.execution.token.every.millis=2000
loop.default.execution.tokens.max=1
loop.deployment-unit-reconcile.execution.token.every.millis=1000
loop.deployment-unit-reconcile.execution.tokens.max=2
loop.service-reconcile.execution.token.every.millis=1000
loop.service-reconcile.execution.tokens.max=2
machine.driver.config=file:///var/lib/rancher/etc/machinedrivers.json
machine.execute=true
machine.service.executable=go-machine-service
mac.prefix.end=02:ff:ff
mac.prefix.start=02:00:01
mac.unassigned.prefix=04
main_tables.purge.after.seconds=172800
netes.agent.executable=netes-agent
netes.agent.execute=false
newest.docker.version=v17.06.0
no.launch=
object.link.name.agentrecord.resourceaccountid.override=resourceAgents
# If negative, random 0-abs(value)
object.remove.time.delay.seconds=0
pool.coreexecutorservice.core.size=15
pool.coreexecutorservice.keep.alive=120
pool.coreexecutorservice.max.size=15
pool.coreexecutorservice.queue.size=-1
pool.eventexecutorservice.core.size=5
pool.eventexecutorservice.keep.alive=120
pool.eventexecutorservice.max.size=5
pool.eventexecutorservice.queue.size=-1
pool.processblockingexecutorservice.core.size=35
pool.processblockingexecutorservice.keep.alive=1200
pool.processblockingexecutorservice.max.size=35
pool.processblockingexecutorservice.priority.queue=true
pool.processblockingexecutorservice.queue.size=-1
pool.processeventexecutorservice.core.size=3
pool.processeventexecutorservice.keep.alive=120
pool.processeventexecutorservice.max.size=10
pool.processeventexecutorservice.queue.size=0
pool.processnonblockingexecutorservice.core.size=5
pool.processnonblockingexecutorservice.keep.alive=1200
pool.processnonblockingexecutorservice.max.size=5
pool.processnonblockingexecutorservice.priority.queue=true
pool.processnonblockingexecutorservice.queue.size=-1
port.scheduler.image.version=v0.6.0
process.account.create.create.credential.account.kinds=agent
process.account.create.create.credential.default.kind=apiKey
process.account.create.create.credential=true
process.agent.activate.blocking=true
process.agent.create.create.account=true
process.agent.reconnect.blocking=true
process.agent.reconnect.priority=200
process.containerevent.blocking=true
process.containerevent.priority=100
process.credential.create.bad.characters=[O0lI+/=]
process.deploymentunit.blocking=true
process.genericobject.blocking=true
process.host.blocking=true
process.instance.blocking=true
process.instance.priority=50
process_instance.purge.after.seconds=3600
process.purge.priority=-100
process.replay.batch.size=50000
process.save.terminating=true
process.service.blocking=true
process.stack.blocking=true
process.volumestoragepoolmap.blocking=true
provisioning.enabled=true
registration.token.period.millis=315360000000
registry.default=
registry.whitelist=
remove.resources.after=300
resource.monitor.default.wait.millis=45000
secrets.api.execute=true
secrets.api.local.key.name=rancher
secrets.api.local.key.path=.
secrets.api.service.executable=secrets-api
secrets.backend=localkey
secrets.url=http://localhost:8181
service_log.purge.after.seconds=86400
# UI Stuff
settings.public=\
  account.version, \
  api.auth.local.validate.description, \
  api.host, \
  api.ui.index, \
  catalog.url, \
  cattle.version, \
  default.cluster.template, \
  docker.machine.version, \
  engine.install.url, \
  go.machine.service.version, \
  lb.instance.image, \
  newest.docker.version, \
  project.template.default.name, \
  rancher.cli.darwin.url, \
  rancher.cli.linux.url, \
  rancher.cli.version, \
  rancher.cli.windows.url, \
  rancher.server.image, \
  rancher.server.version, \
  supported.docker.range, \
  telemetry.opt, \
  ui.feedback.form, \
  ui.show.custom.host, \
  ui.show.system, \
  vm.enabled
simple.allocator.lock.wait=2500
startup.priority=LockDelegatorImpl,AnnotatedListenerRegistration,EventService,DefaultObjectMetaDataManager,JsonDefaultsProvider,ObjectDefaultsPostInstantiationHandler,DefaultProcessManager,SampleDataStartupV3,TaskManagerImpl,ServiceAccountCreateStartup,WebsocketProxyLauncher,SampleDataStartupV15
subscribe.max.queued.messages=100
supported.docker.range=~v1.12.3 || ~v1.13.0 || ~v17.03.0 || ~v17.06.0
system.stack.auth.url=http://localhost:8090/v1-auth
system.stack.catalog.url=http://localhost:8088/v1-catalog/templates/
system.stack.catalog.versions.url=http://localhost:8088/v1-catalog/templateversions/
task.agent.ping.schedule=5
task.bad.data.schedule=3600
task.cleanup.task.instances.schedule=86400
task.database.cleanup.schedule=900
task.evacuate.hosts.schedule=60
task.hazelcast.lock.schedule=15
task.healthcheck.cleanup.schedule=60
task.initial.delay.seconds=15
task.process.replay.schedule=15
task.project.template.reload.schedule=300
task.purge.after.seconds=604800
task.purge.resources.schedule=60
task.remove.resources.schedule=60
task.resource.change.monitor.schedule=15
task.resource.change.publish.schedule=1
task.run.scheduled.schedule=60
task.table.cleanup.schedule=3600
task.upgrade.cleanup.schedule=3600
task.upgrade.schedule.schedule=3600
telemetry.service.executable=telemetry
ui.pl=rancher
ui.show.custom.host=true
ui.show.system=default_hide
upgrade.cleanup.after=120
upgrade.manager=mandatory
vm.enabled=false
webhook.service.executable=webhook-service
webhook.service.execute=false
websocket.proxy.execute=true
windows.register.command=New-Item -Path 'C:\\Program Files\\Rancher' -Type Directory\n\
    Invoke-WebRequest -UseBasicParsing '${windows.agent}' -OutFile 'C:\\Program Files\\Rancher\\agent.exe'\n\
    & 'C:\\Program Files\\Rancher\\agent.exe' -register-service %s
